{
    "version": "https://jsonfeed.org/version/1",
    "title": "理 想 净 土 • All posts by \"软考网络工程师\" tag",
    "description": "不必匆忙，不必火花四溅，不必成为别人，只需成为自己",
    "home_page_url": "https://peter-pan001.github.io/my-blog",
    "items": [
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E5%AE%9E%E9%AA%8C%E5%91%BD%E4%BB%A4%EF%BC%884%EF%BC%89/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E5%AE%9E%E9%AA%8C%E5%91%BD%E4%BB%A4%EF%BC%884%EF%BC%89/",
            "title": "华为交换实验命令（4）",
            "date_published": "2021-05-11T14:08:24.000Z",
            "content_html": "<h1 id=\"TELENT远程管理\"><a href=\"#TELENT远程管理\" class=\"headerlink\" title=\"TELENT远程管理\"></a>TELENT远程管理</h1><p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdmHOK.png\" alt=\"teltye\"></p>\n<ul>\n<li><strong>R1</strong><ul>\n<li>配置接口 IP 确保和 R2 处于同一网段<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Huawei]sysname R1\n[R1]interface GigabitEthernet 0/0/0 //进入 R1 GE0 接口\n[R1-GigabitEthernet0/0/0]ip address 12.1.1.1 24 //GE0 接口配置 IP\nApr 22 2018 14:46:49-08:00 R1 %%01IFNET/4/LINK_STATE(l)[0]:The line protocol IP \non the interface GigabitEthernet0/0/0 has entered the UP state.\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>R2</strong><ol>\n<li>配置接口 IP 确保和 R1 处于同一网段<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Huawei]sysname R2\n[R2]interface GigabitEthernet 0/0/0 //进入 R2 GE0 接口\n[R2-GigabitEthernet0/0/0]ip address 12.1.1.2 24 //GE0 接口配置 IP\nApr 22 2018 14:54:19-08:00 R2 %%01IFNET/4/LINK_STATE(l)[0]:The line protocol IP \non the interface GigabitEthernet0/0/0 has entered the UP state.\n</code></pre>\n</li>\n<li>配置 telnet 远程登陆<pre><code class=\"lang-powershell\">[R2]user-interface vty 0 4 //进入远程线路 vty 0 4\n[R2-ui-vty0-4]authentication-mode aaa //使用 aaa 认证模式\n[R2-ui-vty0-4]quit \n[R2]aaa //进入 aaa 配置\n[R2-aaa]local-user user-r1 password cipher huawei123 //创建账号及对应密码\n[R2-aaa]local-user user-r1 privilege level 2 //给该账号分配 2 级权限\n[R2-aaa]local-user user-r1 service-type telnet //定义用户的服务类别（启动 telnet 服务）\n[R2-aaa]quit\n</code></pre>\n</li>\n<li>进入 R1 验证<pre><code class=\"lang-powershell\">通过 telnet 登录 R2：\n&lt;R1&gt;telnet 12.1.1.2\nUsername:user-r1\nPassword:\n&lt;R2&gt;system-view \n[R2]sysname R22\n[R22]\n（进入 R2，对 R2 的主机名做修改，telnet 远程管理实现）\n</code></pre>\n</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h1 id=\"SSH远程管理\"><a href=\"#SSH远程管理\" class=\"headerlink\" title=\"SSH远程管理\"></a>SSH远程管理</h1><p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdmOTe.png\" alt=\"sshtp\"></p>\n<ul>\n<li><p><strong>R1</strong></p>\n<pre><code class=\"lang-powershell\">  配置接口 IP 确保和 R2 处于同一网段\n  &lt;Huawei&gt;system-view\n  Enter system view, return user view with Ctrl+Z.\n  [Huawei]sysname R1\n  [R1]interface GigabitEthernet 0/0/0 //进入 R1 GE0 接口\n  [R1-GigabitEthernet0/0/0]ip address 12.1.1.1 24 //GE0 接口配置 IP\n  Apr 22 2018 14:46:49-08:00 R1 %%01IFNET/4/LINK_STATE(l)[0]:The line protocol IP \n  on the interface GigabitEthernet0/0/0 has entered the UP state.\n</code></pre>\n</li>\n<li><p><strong>R2</strong></p>\n<ol>\n<li>配置接口 IP 确保和 R1 处于同一网段<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Huawei]sysname R2\n[R2]interface GigabitEthernet 0/0/0 //进入 R2 GE0 接口\n[R2-GigabitEthernet0/0/0]ip address 12.1.1.2 24 //GE0 接口配置 IP\nApr 22 2018 14:54:19-08:00 R2 %%01IFNET/4/LINK_STATE(l)[0]:The line protocol IP \non the interface GigabitEthernet0/0/0 has entered the UP state.\n</code></pre>\n</li>\n<li><p>配置 ssh 远程登陆</p>\n<pre><code class=\"lang-powershell\">[R2]stelnet server enable //开启 SSH 协议\n[R2]rsa local-key-pair create //创建加密报文的密钥对\nInput the bits in the modulus[default = 512]:1024 //密钥长度\n[R2]aaa //使用 aaa 认证模式\n[R2-aaa]local-user user-ssh password cipher huawei123 //创建账号及对应密码\n[R2-aaa]local-user user-ssh privilege level 2 //给该账号分配 2 级权限\n[R2-aaa]local-user user-ssh service-type ssh 创建 ssh 用户\n[R2-aaa]quit \n[R2]user-interface vty 0 4 //进入 vty 线路\n[R2-ui-vty0-4]authentication-mode aaa \n[R2-ui-vty0-4]protocol inbound ssh //开启 vty 线路的 ssh 访问功能\n[R2-ui-vty0-4]quit \n[R2]ssh user user-ssh authentication-type all //定义 ssh 用户的认证模式\n</code></pre>\n</li>\n<li><p>进入 R1 验证</p>\n<pre><code class=\"lang-powershell\">通过 ssh 登录 R2：\n[R1]ssh client first-time enable\n[R1]stelnet 12.1.1.2\nPlease input the username:user-ssh\nContinue to access it? (y/n)[n]:y\nSave the server&#39;s public key? (y/n)[n]:y\nEnter password:\n&lt;R2&gt;\n（ssh 远程登录成功）\n</code></pre>\n</li>\n</ol>\n</li>\n</ul>\n<hr>\n<h1 id=\"接口隔离配置\"><a href=\"#接口隔离配置\" class=\"headerlink\" title=\"接口隔离配置\"></a>接口隔离配置</h1><blockquote>\n<p>配置接口 <code>GE0/0/1</code> 和 <code>GE0/0/2</code> 的接口隔离功能，实现两个接口之间的二层数据隔离，三层数据互通</p>\n</blockquote>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdmvYd.png\" alt=\"jkgl\"></p>\n<pre><code class=\"lang-powershell\">&lt;Switch1&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Switch1]port-isolate mode L2 //端口隔离模式选择 L2\n[Switch1]interface GigabitEthernet 0/0/1 //进入 GE0 接口\n[Switch1-GigabitEthernet0/0/1]port-isolate enable group 1 //接口隔离选择默认组 1\n[Switch1-GigabitEthernet0/0/1]quit\n[Switch1]interface GigabitEthernet 0/0/2 //进入 GE2 接口\n[Switch1-GigabitEthernet0/0/2]port-isolate enable group 1 //接口隔离选择默认组 1\n[Switch1-GigabitEthernet0/0/2]quit \n[Switch1]\n端口隔离实验成功\n</code></pre>\n<hr>\n<h1 id=\"接口速率设置\"><a href=\"#接口速率设置\" class=\"headerlink\" title=\"接口速率设置\"></a>接口速率设置</h1><blockquote>\n<p>配置以太网接口 GE0/0/1 在自协商模式下协商速率为 100Mb/s</p>\n</blockquote>\n<pre><code class=\"lang-powershell\">&lt;Switch1&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Switch1]interface GigabitEthernet 0/0/1 //进入 GE1 端口\n[Switch1-GigabitEthernet0/0/1]negotiation auto //自动协商\n[Switch1-GigabitEthernet0/0/1]auto speed 100 //协商速率\n</code></pre>\n<hr>\n<h1 id=\"接口模式设置\"><a href=\"#接口模式设置\" class=\"headerlink\" title=\"接口模式设置\"></a>接口模式设置</h1><blockquote>\n<p>配置以太网接口 GE0/0/1 在自协商模式下双工模式为全双工模式</p>\n</blockquote>\n<pre><code class=\"lang-powershell\">&lt;Switch1&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Switch1]interface GigabitEthernet 0/0/1 //进入 GE1 端口\n[Switch1-GigabitEthernet0/0/1]negotiation auto //自动协商\n[Switch1-GigabitEthernet0/0/1] auto duplex full //全双工模式\n</code></pre>\n<hr>\n<h1 id=\"基于接口划分VLAN\"><a href=\"#基于接口划分VLAN\" class=\"headerlink\" title=\"基于接口划分VLAN\"></a>基于接口划分VLAN</h1><p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdmxfA.png\" alt=\"hfvlan\"></p>\n<pre><code class=\"lang-powershell\">[SW1]vlan 10\n[SW1-vlan10]quit\n[SW1]vlan 20\n[SW1-vlan20]quit //创建 vlan10、vlan20(快速创建多个 vlan 使用 vlan batch 10 20 命令)\n[SW1]display vlan summary //查看设备的 vlan 信息\n[SW1]int Ethernet0/0/1 \n[SW1-Ethernet0/0/1]port link-type access\n[SW1-Ethernet0/0/1]port default vlan 10 //将接口 e0/0/1 划入对应的 vlan10\n[SW1-Ethernet0/0/1]quit \n[SW1]int e0/0/2\n[SW1-Ethernet0/0/2]port default vlan 20 //将接口 e0/0/2 划入对应的 vlan20\n[SW1-Ethernet0/0/2]quit\n[SW1]int Ethernet0/0/3 \n[SW1-Ethernet0/0/3]port link-type trunk\n[SW1-Ethernet0/0/3]port trunk allow-pass vlan 30 //将接口 e0/0/3 划入对应的 vlan30\n[SW1-Ethernet0/0/3]quit\n[SW1]display port vlan active //查看接口对应的 vlan 信息\n[SW1]quit\n</code></pre>\n<hr>\n<h1 id=\"基于MAC地址划分VLAN\"><a href=\"#基于MAC地址划分VLAN\" class=\"headerlink\" title=\"基于MAC地址划分VLAN\"></a>基于MAC地址划分VLAN</h1><p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdn96P.png\" alt=\"macvlan\"></p>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Huawei]sysname SwitchA\n[SwitchA]vlan batch 2\nInfo: This operation may take a few seconds. Please wait for a moment...done.\n[SwitchA]interface gigabitethernet 0/0/1 //在接口视图配置上联接口\n[SwitchA-GigabitEthernet0/0/1]port link-type hybrid //配置上联接口类型\n[SwitchA-GigabitEthernet0/0/1]port hybrid tagged vlan 2 //通过 VLAN2\n[SwitchA-GigabitEthernet0/0/1]quit\n[SwitchA]interface gigabitethernet 0/0/2 //进入交换机接口视图\n[SwitchA-GigabitEthernet0/0/2]port link-type hybrid //配置接口类型\n[SwitchA-GigabitEthernet0/0/2]port hybrid untagged vlan 2 //将接口加入 VLAN2\n[SwitchA-GigabitEthernet0/0/2]quit\n[SwitchA]vlan 2 //进入 vlan2 配置\n[SwitchA-vlan2]mac-vlan mac-address 22-22-22-22 //PC 的 MAC 地址与 VLAN2 关联\n[SwitchA-vlan2]quit\n[SwitchA]interface gigabitethernet 0/0/2 \n[SwitchA-GigabitEthernet0/0/2]mac-vlan enable //基于 MAC 地址启用接口\nInfo: This operation may take a few seconds. Please wait for a moment...done.\n[SwitchA-GigabitEthernet0/0/2]quit\n</code></pre>\n<hr>\n<h1 id=\"配置GVRP协议\"><a href=\"#配置GVRP协议\" class=\"headerlink\" title=\"配置GVRP协议\"></a>配置GVRP协议</h1><ul>\n<li><strong>GARP</strong> (<code>Generic Attribute Registration Protocol</code>)是通用属性注册协议的应用，提供 802.1Q 兼容的VLAN 裁剪 VLAN pruning 功能和在 802.1Q 干线端口 trunk port 上建立动态 VLAN 的功能。</li>\n<li>GARP 作为一个属性注册协议的载体，可以用来传播属性，将 GARP 协议报文的内容映射成不同的属性即可支持不同上层协议应用。</li>\n<li>GVRP（<code>GARP VLAN Registration Protocol</code>）是 GARP 的一种应用，用于注册和注销 VLAN 属性。</li>\n<li>GARP 协议通过目的 MAC 地址区分不同的应用。在 IEEE Std 802.1Q 中将 01-80-C2-00-00-21 分配给 VLAN 应用，即 GVRP。</li>\n</ul>\n<h2 id=\"配置-GVRP-示例\"><a href=\"#配置-GVRP-示例\" class=\"headerlink\" title=\"配置 GVRP 示例\"></a>配置 GVRP 示例</h2><ol>\n<li><p>组网需求</p>\n<ul>\n<li>如图所示，公司 A、公司 A 的分公司以及公司 B 之间有较多的交换设备相连，需要通过 GVRP 功能，实现 VLAN 的动态注册。公司 A 的分公司与总部通过 SwitchA 和 SwitchB 互通；公司 B 通过 SwitchB和 SwitchC 与公司 A 互通，但只允许公司 B 配置的 VLAN 通过。</li>\n</ul>\n</li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdnVYj.png\" alt=\"gvrptp\"></p>\n<ol>\n<li>配置思路<ul>\n<li>使能 GVRP 功能，实现 VLAN 的动态注册。</li>\n<li>公司 A 的所有交换机配置 GVRP 功能并配置接口注册模式为 Normal，以简化配置。</li>\n<li>公司 B 的所有交换机配置 GVRP 功能并将与公司 A 相连的接口的注册模式配置为 Fixed，以控制只允许公司 B 配置的 VLAN 通过。</li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>说明：<br>使能 GVRP 之前，必须先设置 VCMP 的角色为 Transparent 或 Silent。</p>\n</blockquote>\n<ol>\n<li>配置步骤<ul>\n<li><strong>配置交换机SwitchA</strong><pre><code class=\"lang-powershell\">//全局使能 GVRP 功能\n&lt;Huawei&gt;\n&lt;Huawei&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Huawei]sysname SwitchA\n[SwitchA]vcmp role silent\n//配置接口为 Trunk 类型，并允许所有 VLAN 通过\n[SwitchA]interface gigabitethernet 0/0/1\n[SwitchA-GigabitEthernet0/0/1]port link-type trunk\n[SwitchA-GigabitEthernet0/0/1]port trunk allow-pass vlan all\n[SwitchA-GigabitEthernet0/0/1]quit\n[SwitchA]interface gigabitethernet 0/0/2\n[SwitchA-GigabitEthernet0/0/2]port link-type trunk\n[SwitchA-GigabitEthernet0/0/2]port trunk allow-pass vlan all\n[SwitchA-GigabitEthernet0/0/2]quit\n//使能接口的 GVRP 功能，并配置接口注册模式\n[SwitchA]interface gigabitethernet 0/0/1\n[SwitchA-GigabitEthernet0/0/1]gvrp\n[SwitchA-GigabitEthernet0/0/1]gvrp registration normal\n[SwitchA-GigabitEthernet0/0/1]quit\n[SwitchA]interface gigabitethernet 0/0/2\n[SwitchA-GigabitEthernet0/0/2]gvrp\n[SwitchA-GigabitEthernet0/0/2]gvrp registration normal\n[SwitchA-GigabitEthernet0/0/2]quit\n</code></pre>\n</li>\n<li><strong>配置交换机SwitchB</strong><pre><code class=\"lang-powershell\">//全局使能 GVRP 功能\n&lt;Huawei&gt;\n&lt;Huawei&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Huawei]sysname SwitchB\n[SwitchB]vcmp role silent\n//配置接口为 Trunk 类型，并允许所有 VLAN 通过\n[SwitchB]interface gigabitethernet 0/0/1\n[SwitchB-GigabitEthernet0/0/1]port link-type trunk\n[SwitchB-GigabitEthernet0/0/1]port trunk allow-pass vlan all\n[SwitchB-GigabitEthernet0/0/1]quit\n[SwitchB]interface gigabitethernet 0/0/2\n[SwitchB-GigabitEthernet0/0/2]port link-type trunk\n[SwitchB-GigabitEthernet0/0/2]port trunk allow-pass vlan all\n[SwitchB-GigabitEthernet0/0/2]quit\n//使能接口的 GVRP 功能，并配置接口注册模式\n[SwitchB]interface gigabitethernet 0/0/1\n[SwitchB-GigabitEthernet0/0/1]gvrp\n[SwitchB-GigabitEthernet0/0/1]gvrp registration normal\n[SwitchB-GigabitEthernet0/0/1]quit\n[SwitchB]interface gigabitethernet 0/0/2\n[SwitchB-GigabitEthernet0/0/2]gvrp\n[SwitchB-GigabitEthernet0/0/2]gvrp registration normal\n[SwitchB-GigabitEthernet0/0/2]quit\n</code></pre>\n</li>\n<li><strong>配置交换机SwitchC</strong><pre><code class=\"lang-powershell\">//创建 VLAN101～VLAN200\n&lt;HUAWEI&gt;system-view\n[HUAWEI]sysname SwitchC\n[SwitchC]vlan batch 101 to 200\n//全局使能 GVRP 功能\n[SwitchC]vcmp role silent\n[SwitchC]gvrp\n//配置接口为 Trunk 类型，并允许所有 VLAN 通过\n[SwitchC]interface gigabitethernet 0/0/1\n[SwitchC-GigabitEthernet0/0/1]port link-type trunk\n[SwitchC-GigabitEthernet0/0/1]port trunk allow-pass vlan all\n[SwitchC-GigabitEthernet0/0/1]quit\n[SwitchC]interface gigabitethernet 0/0/2\n[SwitchC-GigabitEthernet0/0/2]port link-type trunk\n[SwitchC-GigabitEthernet0/0/2]port trunk allow-pass vlan all\n[SwitchC-GigabitEthernet0/0/2]quit\n//使能接口的 GVRP 功能，并配置接口注册模式\n[SwitchC]interface gigabitethernet 0/0/1\n[SwitchC-GigabitEthernet0/0/1]gvrp\n[SwitchC-GigabitEthernet0/0/1]gvrp registration fixed\n[SwitchC-GigabitEthernet0/0/1]quit\n[SwitchC]interface gigabitethernet 0/0/2\n[SwitchC-GigabitEthernet0/0/2]gvrp\n[SwitchC-GigabitEthernet0/0/2]gvrp registration normal\n[SwitchC-GigabitEthernet0/0/2]quit\n</code></pre>\n</li>\n<li>验证配置结果<ul>\n<li>配置完成后，公司 A 的分公司用户可以与总部互通，公司 A 属于 VLAN101～VLAN200 的用户可以与公司 B 用户互通。</li>\n<li>在 SwitchA 上使用命令 display gvrp statistics，查看接口的 GVRP 统计信息，<blockquote>\n<p>其中包括：<br>GVRP 状态、GVRP 注册失败次数、上一个 GVRP 数据单元源 MAC 地址和接口 GVRP 注册类型，<br>结果如下：</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdnZfs.png\" alt=\"gvrpres\"></p>\n<blockquote>\n<p>switch B、C和switch A类似</p>\n</blockquote>\n<h1 id=\"配置-STP-协议\"><a href=\"#配置-STP-协议\" class=\"headerlink\" title=\"配置 STP 协议\"></a>配置 STP 协议</h1><ul>\n<li>以太网交换网络中为了进行链路备份，提高网络可靠性，通常会使用冗余链路。但是使用冗余链路会在交换网络上产生环路，引发广播风暴以及 MAC 地址表不稳定等故障现象，从而导致用户通信质量较差，甚至通信中断。</li>\n<li>为解决交换网络中的环路问题，提出了生成树协议 STP（Spanning Tree Protocol）。运行 STP 协议的设备通过彼此交互信息发现网络中的环路，并有选择的对某个端口进行阻塞，最终将环形网络结构修剪成无环路的树形网络结构，从而防止报文在环形网络中不断循环，避免设备由于重复接收相同的报文造成处理能力下降。</li>\n<li>生成树协议也是随着网络的发展而不断更新的，从最初的 IEEE 802.1D 中定义的 STP 到 IEEE 802.1W中定义的快速生成树协议 RSTP（Rapid Spanning Tree Protocol），再到最新的 IEEE 802.1S 中定义的多生成树协议 MSTP（Multiple Spanning Tree Protocol）。</li>\n<li>生成树协议中，MSTP 兼容 RSTP、STP，RSTP 兼容 STP。三种生成树协议的比较如下图所示:</li>\n</ul>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdnmpn.png\" alt=\"stptb\"></p>\n<h2 id=\"配置-STP-示例\"><a href=\"#配置-STP-示例\" class=\"headerlink\" title=\"配置 STP 示例\"></a>配置 STP 示例</h2><blockquote>\n<p>配之前注意事项<br>本举例适用于 S 系列交换机所有产品的所有版本。<br>与终端相连的端口不用参与 STP 计算，建议将其设置为边缘端口或去使能 STP。</p>\n</blockquote>\n<ol>\n<li>组网需求</li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdnQmT.png\" alt=\"stptp\"></p>\n<ul>\n<li>当前网络中存在环路，SwitchA、SwitchB、SwitchC 和 SwitchD 都运行 STP，通过彼此交互信息发现网络中的环路，并有选择的对某个端口进行阻塞，最终将环形网络结构修剪成无环路的树形网络结构，从而防止报文在环形网络中不断循环，避免设备由于重复接收相同的报文造成处理能力下降。</li>\n</ul>\n<ol>\n<li>配置思路<ul>\n<li>在处于环形网络中的交换设备上配置 STP 基本功能，包括：<ul>\n<li>配置环网中的设备生成树协议工作在 STP 模式。</li>\n<li>配置根桥和备份根桥设备。</li>\n<li>配置端口的路径开销值，实现将该端口阻塞。</li>\n<li>使能 STP，实现破除环路。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>配置步骤</p>\n<ul>\n<li><p>配置 STP 基本功能</p>\n<ol>\n<li>配置环网中的设备生成树协议工作在 STP 模式<pre><code class=\"lang-powershell\">//配置交换设备 SwitchA 的 STP 工作模式。\n&lt;HUAWEI&gt;system-view\n[HUAWEI]sysname SwitchA\n[SwitchA]stp mode stp\n//配置交换设备 SwitchB 的 STP 工作模式。\n&lt;HUAWEI&gt;system-view\n[HUAWEI]sysname SwitchB\n[SwitchB]stp mode stp\n//配置交换设备 SwitchC 的 STP 工作模式。\n&lt;HUAWEI&gt;system-view\n[HUAWEI]sysname SwitchC\n[SwitchC]stp mode stp\n//配置交换设备 SwitchD 的 STP 工作模式。\n&lt;HUAWEI&gt;system-view\n[HUAWEI]sysname SwitchD\n[SwitchD]stp mode stp\n</code></pre>\n</li>\n<li>配置根桥和备份根桥设备<pre><code class=\"lang-powershell\">//配置 SwitchA 为根桥。\n[SwitchA] stp root primary\n//配置 SwitchD 为备份根桥。\n[SwitchD] stp root secondary\n</code></pre>\n</li>\n<li>配置端口的路径开销值，实现将该端口阻塞</li>\n</ol>\n<blockquote>\n<p>说明：<br>端口路径开销值取值范围由路径开销计算方法决定，这里选择使用华为计算方法为例，配置将被阻塞端口的路径开销值为 20000。<br>同一网络内所有交换设备的端口路径开销应使用相同的计算方法。</p>\n</blockquote>\n<pre><code class=\"lang-powershell\">//配置 SwitchA 的端口路径开销计算方法为华为计算方法。\n[SwitchA]stp pathcost-standard legacy\n//配置 SwitchB 的端口路径开销计算方法为华为计算方法。\n[SwitchB]stp pathcost-standard legacy\n//配置 SwitchC 的端口路径开销计算方法为华为计算方法。\n[SwitchC]stp pathcost-standard legacy\n//配置 SwitchC 端口 GigabitEthernet0/0/1 端口路径开销值为 20000。\n[SwitchC]interface gigabitethernet 0/0/1\n[SwitchC-GigabitEthernet0/0/1]stp cost 20000\n[SwitchC-GigabitEthernet0/0/1]quit\n//配置 SwitchD 的端口路径开销计算方法为华为计算方法。\n[SwitchD]stp pathcost-standard legacy\n</code></pre>\n</li>\n<li><p>使能 STP，实现破除环路</p>\n<ul>\n<li>将与 PC 机相连的端口设置为边缘端口并使能端口的 BPDU 报文过滤功能<pre><code class=\"lang-powershell\">//配置 SwitchB 端口 GigabitEthernet0/0/2 设置为边缘端口并使能端口的 BPDU 报文过滤功能。\n[SwitchB]interface gigabitethernet 0/0/2\n[SwitchB-GigabitEthernet0/0/2]stp edged-port enable\n[SwitchB-GigabitEthernet0/0/2]stp bpdu-filter enable\n[SwitchB-GigabitEthernet0/0/2]quit\n//配置 SwitchC 端口 GigabitEthernet0/0/2 设置为边缘端口并使能端口的 BPDU 报文过滤功能。\n[SwitchC]interface gigabitethernet 0/0/2\n[SwitchC-GigabitEthernet0/0/2]stp edged-port enable\n[SwitchC-GigabitEthernet0/0/2]stp bpdu-filter enable\n[SwitchC-GigabitEthernet0/0/2]quit\n</code></pre>\n</li>\n</ul>\n<ul>\n<li><strong>设备全局使能STP</strong><pre><code class=\"lang-powershell\">//设备 SwitchA 全局使能 STP。\n[SwitchA]stp enable\n//设备 SwitchB 全局使能 STP。\n[SwitchB]stp enable\n//设备 SwitchC 全局使能 STP。\n[SwitchC]stp enable\n//设备 SwitchD 全局使能 STP。\n[SwitchD]stp enable\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>验证配置<blockquote>\n<p>经过以上配置，在网络计算稳定后，执行以下操作，验证配置结果。<br>//在 SwitchA 上执行 <code>display stp brief</code>命令，查看端口状态和端口的保护类型，结果如下：</p>\n</blockquote>\n</li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdnl0U.png\" alt=\"stpres\"></p>\n<ul>\n<li>将 <code>SwitchA</code> 配置为根桥后，与 <code>SwitchB</code>、<code>SwitchD</code> 相连的端口 <code>GigabitEthernet0/0/2</code> 和<code>GigabitEthernet0/0/1</code> 在生成树计算中被选举为指定端口。</li>\n</ul>\n<blockquote>\n<p>//在 SwitchD 上执行 display stp brief 命令，查看端口状态和端口的保护类型，结果如下：</p>\n</blockquote>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdn17F.png\" alt=\"stpres2\"></p>\n<ul>\n<li>将 <code>SwitchD</code> 配置为备根桥后，与 <code>SwitchA</code>、<code>SwitchC</code> 相连的端口 <code>GigabitEthernet0/0/1</code> 被选举为根端口、<code>GigabitEthernet0/0/2</code> 在生成树计算中被选举为指定端口。<blockquote>\n<p>//在 SwitchB 上执行 <code>display stp interface gigabitethernet 0/0/1 brief</code> 命令，查看端口GigabitEthernet0/0/1 状态，结果如下：</p>\n</blockquote>\n</li>\n</ul>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdnJh9.png\" alt=\"stps\"></p>\n<ul>\n<li>端口<code>GigabitEthernet0/0/1</code> 在生成树选举中成为指定端口，处于 <code>FORWARDING</code> 状态。<blockquote>\n<p>//在 SwitchC 上执行 display stp brief 命令，查看端口状态，结果如下：</p>\n</blockquote>\n</li>\n</ul>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdntpR.png\" alt=\"stpsa\"></p>\n<p>端口 GigabitEthernet0/0/3 在生成树选举中成为根端口，处于 FORWARDING 状态。<br>端口 GigabitEthernet0/0/1 在生成树选举中成为 Alternate 端口，处于 DISCARDING 状态。</p>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8E%E4%B8%BA%E8%B7%AF%E7%94%B1%E5%AE%9E%E9%AA%8C%E5%91%BD%E4%BB%A4%EF%BC%883%EF%BC%89/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8E%E4%B8%BA%E8%B7%AF%E7%94%B1%E5%AE%9E%E9%AA%8C%E5%91%BD%E4%BB%A4%EF%BC%883%EF%BC%89/",
            "title": "华为路由实验命令（3）",
            "date_published": "2021-05-11T02:29:59.000Z",
            "content_html": "<h1 id=\"IS-IS-路由配置\"><a href=\"#IS-IS-路由配置\" class=\"headerlink\" title=\"IS-IS 路由配置\"></a>IS-IS 路由配置</h1><ul>\n<li>中间系统到中间系统 (<code>Intermediate System to Intermediate System</code>, <code>IS-IS</code>)属于内部网关协议(<code>lnteriorGateway Protocol</code>,<code>IGP</code>)，用于自治系统内部。</li>\n<li>为了支持大规模的路由网络，IS-IS 在自治系统内采用骨干区域与非骨干区域两级的分层结构。一般来说，将 Level-1 路由器部署在非骨干区域，Level-2 路由器和 Level-1-2 路由器部署在骨干区域。每一个非骨干区域都通过 Level-1-2 路由器与骨干区域相连。</li>\n<li><p>链路状态路由协议（L-S）</p>\n<ul>\n<li><p>Net-Entity：网络实体，运行 IS-IS 的路由器必须配置一个网络实体，格式为：SEL 服务访问点<br>|区域 ID| 系统 ID| SEL|<br>|:—-:|:—-:|:—-:|<br>|1 字节| 16 字节| 1 字节|</p>\n<blockquote>\n<p>例如：4A.2000.00E0.008C.00 十六进制表示</p>\n</blockquote>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdm3RI.png\" alt=\"isistp\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>配置各路由器的接口 IP</li>\n<li>配置各路由器的 <code>IS-IS</code> 功能</li>\n</ol>\n<ul>\n<li><strong>配置R1</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R1]isis //进入 isis 配置\n[R1-isis-1]network-entity 10.0000.0000.0001.00 //宣告本路由(R1)的网络实体\n[R1-isis-1]quit\n[R1]int gig 0/0/0 //进入出口链路端口\n[R1-GigabitEthernet0/0/0]isis enable //端口使能 isis\n[R1-GigabitEthernet0/0/0]quit\n</code></pre>\n<ul>\n<li><strong>配置R2</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R2]isis //进入 isis 配置\n[R2-isis-1]network-entity 10.0000.0000.0002.00 //宣告本路由(R2)的网络实体\n[R2-isis-1]quit\n[R2]int gig 0/0/0 //进入出口链路端口\n[R2-GigabitEthernet0/0/0]isis enable //端口使能 isis\n[R2-GigabitEthernet0/0/0]int gig 0/0/1\n[R2-GigabitEthernet0/0/1]isis enable\n</code></pre>\n<ul>\n<li><strong>配置R3</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R3]isis\n[R3-isis-1]network-entity 10.0000.0000.0003.00\n[R3-isis-1]quit\n[R3]int gig 0/0/0\n[R3-GigabitEthernet0/0/0]isis enable\n</code></pre>\n<p>与 R1 类似</p>\n<ol>\n<li>查看各路由器的路由表(<code>dis ip routing</code>/<code>dis isis peer</code>/<code>dis isis route</code>/<code>dis isis lsdb</code>)</li>\n</ol>\n<hr>\n<h1 id=\"BGP-路由配置\"><a href=\"#BGP-路由配置\" class=\"headerlink\" title=\"BGP 路由配置\"></a>BGP 路由配置</h1><ul>\n<li>边界网关协议(<code>Border Gateway Protocol</code>,BGP)是一种实现自治系统(<code>Autonomous System</code>,AS)之间的路由可达并选择最佳路由的距离矢量路由协议(D-V)</li>\n<li>支持多出口大型网络；路由采用增量更新；除了下一跳还有经过 AS 列表通过信息；允许 CIDR、VLSM、支持鉴别、验证等；分为 EBGP（外部）、IBGP（内部）<ul>\n<li>实现自治系统间通信网络的信息可达</li>\n<li>多个 BGP 路由器之间的协调</li>\n<li>BGP 支持基千策略的路径选择，可以为域内和域间的网络可达性配置不同的策略</li>\n<li>BGP 只需要在启动时交换一次完整信息，不需要在所有路由更新报文中传送完整的路由数据库信息，后续的路由更新报文只通告网络的变化信息，避免网络变化使得信息黛大幅增加</li>\n<li>在 BGP 通告目的网络的可达性信息时，除了处理指定目的网络的下一跳信息之外，通告中还包括了通路向量，即去往该目的网络时需要经过的 AS 的列表，使接受者能够清楚了解去往目的网络的通路信息</li>\n<li>BGP 在不同自治系统(AS)之间进行路由转发，分为 EBGP 和 IBGP 两种情况。EBGP 外部边界网关协议，用于在不同的自治系统间交换路由信息。IBGP 内部边界网关协议，用于向内部路由器提供更多信息</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"配置-BGP-示例\"><a href=\"#配置-BGP-示例\" class=\"headerlink\" title=\"配置 BGP 示例\"></a>配置 BGP 示例</h2><ol>\n<li><p><strong>组网需求</strong></p>\n<p> <img data-src=\"https://z3.ax1x.com/2021/05/11/gdmtL8.png\" alt=\"bgptp\"></p>\n</li>\n</ol>\n<blockquote>\n<p>如图所示，需要在所有路由器间运行 BGP 协议，R1、R2 之间建立 EBGP 连接，R2、R3 和 R4 之间建立 IBGP 全连接。</p>\n</blockquote>\n<ol>\n<li><strong>配置思路</strong></li>\n</ol>\n<ul>\n<li>采用如下的思路配置 BGP 的基本功能：<ul>\n<li>在 R2、R3 和 R4 间配置 IBGP 连接。</li>\n<li>在 R1 和 R2 之间配置 EBGP 连接。</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><p><strong>配置步骤</strong></p>\n<ol>\n<li>配置各路由器的接口 IP<pre><code class=\"lang-powershell\">//配置 R2；R1、R3 和 R4 的配置与 R1 类似。\n&lt;Huawei&gt;sys\nEnter system view, return user view with Ctrl+Z.\n[Huawei]un in en\nInfo: Information center is disabled.\n[Huawei]sysn R1\n[R1]sysn R2\n[R2]int gig 0/0/1\n[R2-GigabitEthernet0/0/1]ip add 59.74.112.1 24\n[R2-GigabitEthernet0/0/1]quit\n[R2]int gig 0/0/2\n[R2-GigabitEthernet0/0/2]ip add 172.16.30.1 24\n[R2-GigabitEthernet0/0/2]quit\n[R2]int gig 0/0/3\n[R2-GigabitEthernet0/0/3]ip add 172.16.10.1 24\n[R2-GigabitEthernet0/0/3]quit\n</code></pre>\n</li>\n<li><p>配置 IBGP</p>\n<ul>\n<li><strong>配置R2</strong><pre><code class=\"lang-powershell\">[R2]bgp 65009 //启动 BGP 及 AS 号\n[R2-bgp]router-id 2.2.2.2 //配置 BGP 的 router-id（自定义）\n[R2-bgp]peer 172.16.10.2 as-number 65009 //配置 BGP 的对等实体\n[R2-bgp]peer 172.16.30.2 as-number 65009\n[R2-bgp]quit\n</code></pre>\n</li>\n<li><strong>配置R3</strong><pre><code class=\"lang-powershell\">[R3]bgp 65009\n[R3-bgp]router-id 3.3.3.3\n[R3-bgp]peer 172.16.30.1 as-number 65009\n[R3-bgp]peer 172.16.20.2 as-number 65009\n[R3-bgp]quit\n</code></pre>\n</li>\n<li><strong>配置R4</strong><pre><code class=\"lang-powershell\">[R4]bgp 65009\n[R4-bgp]router-id 4.4.4.4\n[R4-bgp]peer 172.16.20.1 as-number 65009\n[R4-bgp]peer 172.16.10.1 as-number 65009\n[R4-bgp]quit\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>配置 EBGP</p>\n</li>\n</ol>\n<ul>\n<li><strong>配置R1</strong><pre><code class=\"lang-powershell\">[R1]bgp 65008\n[R1-bgp]router-id 1.1.1.1\n[R1-bgp]peer 59.74.112.1 as-number 65009 //配置 BGP 的对等实体\n[R1-bgp]quit\n</code></pre>\n</li>\n<li><strong>配置R2</strong><pre><code class=\"lang-powershell\">[R2]bgp 65009\n[R2-bgp]peer 59.74.112.2 as-number 65008 //配置 BGP 的对等实体\n[R2-bgp]quit\n</code></pre>\n//在 R2 查看 BGP 对等实体的连接状态<br><img data-src=\"https://z3.ax1x.com/2021/05/11/gdmdoQ.png\" alt=\"bgpres\"></li>\n</ul>\n<ol>\n<li><p>配置 R1 的发布路由 10.1.0.0/16</p>\n<pre><code class=\"lang-powershell\">[R1]bgp 65008\n[R1-bgp]ipv4-family unicast \n[R1-bgp-af-ipv4]network 10.1.0.0 255.255.0.0\n[R1-bgp-af-ipv4]quit\n</code></pre>\n<p>//查看 R1、R2、R3、R4 的路由表信息（display bgp routing-table）</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdm0ij.png\" alt=\"bgpiptb\"></p>\n<p>从路由表可以看出，R3/R4 学到了 AS65008 中的 10.1.0.0 的路由，但因为下一跳 192.168.1.2 不可达，所以也不是有效路由。</p>\n</li>\n<li><p>配置 BGP 引入直连路由</p>\n<pre><code class=\"lang-powershell\">//配置 R2\n[R2]bgp 65009\n[R2-bgp]ipv4-family unicast\n[R2-bgp-af-ipv4]import-route direct //引入直连路由\n[R2-bgp-af-ipv4]quit\n</code></pre>\n<p>//查看 R1 的 BGP 路由表</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdmyQ0.png\" alt=\"bgprou\"></p>\n<p>//查看 R4 的 BGP 路由</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdm2eU.png\" alt=\"bgprou2\"></p>\n<p>可以看出，到 10.1.0.0 的路由变为有效路由，下一跳为 R1 的地址。<br>//在 R4 使用 Ping 进行验证</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdmWo4.png\" alt=\"bgpping\"></p>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h1 id=\"ACL-综合应用\"><a href=\"#ACL-综合应用\" class=\"headerlink\" title=\"ACL 综合应用\"></a>ACL 综合应用</h1><ol>\n<li>组网需要</li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdmhFJ.png\" alt=\"acltp\"></p>\n<blockquote>\n<p>如图所示，某公司通过 Switch 实现各部门之间的互连。<br>公司要求禁止研发部门和市场部门在上班时间（8:00 至 17:30）访问工资查询服务器（IP 地址为10.164.9.9），总裁办公室不受限制，可以随时访问。</p>\n</blockquote>\n<ol>\n<li>配置思路</li>\n</ol>\n<ul>\n<li><strong>采用如下的思路在 Switch 上进行配置：</strong><ul>\n<li>配置时间段、高级 ACL 和基于 ACL 的流分类，使设备可以基于时间的 ACL，对用户访问服务器的报文进行过滤，从而限制不同用户在特定时间访问特定服务器的权限。</li>\n<li>配置流行为，拒绝匹配上 ACL 的报文通过。</li>\n<li>配置并应用流策略，使 ACL 和流行为生效。</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><p>配置步骤</p>\n<ul>\n<li><p>配置接口加入 VLAN，并配置 VLANIF 接口的 IP 地址</p>\n<blockquote>\n<p>将 GE0/0/1～GE0/0/3 分别加入 VLAN10、20、30，GE0/0/4 加入 VLAN100，并配置各 VLANIF 接口的 IP 地址。</p>\n</blockquote>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;sys\nEnter system view, return user view with Ctrl+Z.\n[Huawei]un in en\nInfo: Information center is disabled.\n[Huawei]sysn Swtich\n[Swtich]vlan batch 10 20 30 100\nInfo: This operation may take a few seconds. Please wait for a moment...done.\n[Swtich]int gig 0/0/1\n[Swtich-GigabitEthernet0/0/1]port link-type trunk\n[Swtich-GigabitEthernet0/0/1]port trunk allow-pass vlan 10\n[Swtich-GigabitEthernet0/0/1]quit\n[Swtich]int gig 0/0/2\n[Swtich-GigabitEthernet0/0/2]port link-type trunk\n[Swtich-GigabitEthernet0/0/2]port trunk allow-pass vlan 20\n[Swtich-GigabitEthernet0/0/2]quit\n[Swtich]int gig 0/0/3\n[Swtich-GigabitEthernet0/0/3]port link-type trunk\n[Swtich-GigabitEthernet0/0/3]port trunk allow-pass vlan 30\n[Swtich-GigabitEthernet0/0/3]quit\n[Swtich]int gig 0/0/4\n[Swtich-GigabitEthernet0/0/4]port link-type trunk\n[Swtich-GigabitEthernet0/0/4]port trunk allow-pass vlan 100\n[Swtich-GigabitEthernet0/0/4]quit\n[Swtich]int vlan 10\n[Swtich-Vlanif10]ip address 10.164.1.1 255.255.255.0\n[Swtich-Vlanif10]quit\n[Swtich]int vlan 20\n[Swtich-Vlanif20]ip address 10.164.2.1 255.255.255.0\n[Swtich-Vlanif20]quit\n[Swtich]int vlan 30\n[Swtich-Vlanif30]ip address 10.164.3.1 255.255.255.0\n[Swtich-Vlanif30]quit\n[Swtich]int vlan 100\n[Swtich-Vlanif100]ip address 10.164.9.1 255.255.255.0\n[Swtich-Vlanif100]quit\n</code></pre>\n</li>\n<li><p>配置时间段</p>\n<blockquote>\n<p>配置 8:00 至 17:30 的周期时间段。</p>\n<pre><code class=\"lang-powershell\">[Swtich]time-range satime 8:00 to 17:30 working-day //设置时间段\n</code></pre>\n</blockquote>\n</li>\n<li><p>配置 ACL</p>\n<pre><code class=\"lang-powershell\">//配置市场部门到工资查询服务器的访问规则。\n[Swtich]acl 3002\n[Swtich-acl-adv-3002] rule deny ip source 10.164.2.0 0.0.0.255 destination 10.164.9.9 0.0.0.0 time-range satime\n[Swtich-acl-adv-3002]quit\n//配置研发部门到工资查询服务器的访问规则。\n[Swtich]acl 3003\n[Swtich-acl-adv-3003]rule deny ip source 10.164.3.0 0.0.0.255 destination 10.164.9.9 0.0.0.0 time\u0002range satime\n[Swtich-acl-adv-3003]quit\n</code></pre>\n</li>\n<li><p>配置基于 ACL 的流分类</p>\n<pre><code class=\"lang-powershell\">//配置流分类 c_market，对匹配 ACL 3002 的报文进行分类。\n[Swtich]traffic classifier c_market\n[Swtich-classifier-c_market]if-match acl 3002\n[Swtich-classifier-c_market]quit\n//配置流分类 c_rd，对匹配 ACL 3003 的报文进行分类。\n[Swtich]traffic classifier c_rd\n[Swtich-classifier-c_rd]if-match acl 3003\n[Swtich-classifier-c_rd]quit\n</code></pre>\n</li>\n<li>配置流行为<pre><code class=\"lang-powershell\">//配置流行为 b_market，动作为拒绝报文通过。\n[Swtich]traffic behavior b_market\n[Swtich-behavior-b_market]deny\n[Swtich-behavior-b_market]quit\n//配置流行为 b_rd，动作为拒绝报文通过。\n[Swtich]traffic behavior b_rd\n[Swtich-behavior-b_rd]deny\n[Swtich-behavior-b_rd]quit\n</code></pre>\n</li>\n<li>配置流策略<pre><code class=\"lang-powershell\">//配置流策略 p_market，将流分类 c_market 与流行为 b_market 关联。\n[Swtich]traffic policy p_market\n[Swtich-trafficpolicy-p_market]classifier c_market behavior b_market\n[Swtich-trafficpolicy-p_market]quit\n//配置流策略 p_rd，将流分类 c_rd 与流行为 b_rd 关联。\n[Swtich]traffic policy p_rd\n[Swtich-trafficpolicy-p_rd]classifier c_rd behavior b_rd\n[Swtich-trafficpolicy-p_rd]quit\n</code></pre>\n</li>\n<li>应用流策略<pre><code class=\"lang-powershell\">//由于市场部访问服务器的流量从接口 GE0/0/2 进入 Switch，所以可以在 GE0/0/2 接口的入方向\n应用流策略 p_market。\n[Swtich]int gig 0/0/2\n[Swtich-GigabitEthernet0/0/2] traffic-policy p_market inbound\n[Swtich-GigabitEthernet0/0/2]quit\n//由于研发部访问服务器的流量从接口 GE0/0/3 进入 Switch，所以可以在 GE0/0/3 接口的入方向\n应用流策略 p_rd。\n[Swtich]int gig 0/0/3\n[Swtich-GigabitEthernet0/0/3]traffic-policy p_rd inbound\n[Swtich-GigabitEthernet0/0/3]quit\n</code></pre>\n</li>\n<li>验证配置结果</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h1 id=\"IPv6-over-IPv4-GRE-隧道配置\"><a href=\"#IPv6-over-IPv4-GRE-隧道配置\" class=\"headerlink\" title=\"IPv6-over-IPv4 GRE 隧道配置\"></a>IPv6-over-IPv4 GRE 隧道配置</h1><ul>\n<li>由于从 IPv4 向 IPv6 过渡是大势所趋，所以目前有许多从 IPv4 向 IPv6 过渡的技术。本节通过实例介绍采用隧道策略实现从 IPv4 向 IPv6 过渡的技术。</li>\n</ul>\n<ol>\n<li><strong>双栈策略</strong><ul>\n<li>双栈策略是指在网络节点中同时具有 IPv4 和 IPv6 两个协议栈，这样，它既可以接收、处理、收发IPv4 的分组，也可以接收、处理、收发 IPv6 的分组。</li>\n<li>缺点：对网元设备的要求较高，涉及网络中的所有网元设备都支持双协议栈，投资大、建设周期比较长。</li>\n</ul>\n</li>\n<li><strong>隧道策略</strong><ul>\n<li>利用一种协议来传输另一种协议的数据的技术</li>\n<li>主流隧道技术：构造隧道、6to4 隧道以及 MPLS 隧道</li>\n<li>目前的隧道技术主要实现了在 IPv4 数据包中封装 IPv6 数据包。</li>\n</ul>\n</li>\n</ol>\n<p>本实验采用 IPv6-over-IPv4 隧道技术：</p>\n<ul>\n<li>是将 IPv6 报文封装在 IPv4 报文中，让 IPv6 数据包穿过 IPv4 网络进行通信，隧道技术只要求在隧道的入口和出口处进行修改，对其他部分没有要求，容易实现。但是，隧道技术不能实现 IPv4 主机与 1Pv6 主机的直接通信。</li>\n<li><p>路由器 R1 和 R2 经 IPv4 网络连接，路由器以太口分别连接两个 IPv6 网段。通过 Tunnel 将 IPv6 的数据包封装到 IPv4 的数据包中，实现点到点的数据传输。网络拓扑图如图所示。</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/11/gdm5WR.png\" alt=\"gretp\"></p>\n</li>\n</ul>\n<ul>\n<li><strong>配置步骤</strong></li>\n</ul>\n<ol>\n<li>配置 R1、R2 接口 IP</li>\n</ol>\n<ul>\n<li>R1<pre><code class=\"lang-powershell\">[R1]int gig 0/0/1\n[R1-GigabitEthernet0/0/1]ip add 10.1.1.1 24\n[R1-GigabitEthernet0/0/1]quit\n[R1]ipv6 //全局使能 IPv6\n[R1]int gig 0/0/2\n[R1-GigabitEthernet0/0/2]ipv6 enable //对应接口启动 IPv6 功能\n[R1-GigabitEthernet0/0/2]ipv6 add fc01::1 64 //接口配置 IPv6 地址\n[R1-GigabitEthernet0/0/2]quit\n</code></pre>\n</li>\n<li>R2<pre><code class=\"lang-powershell\">[R2]int gig 0/0/1\n[R2-GigabitEthernet0/0/1]ip add 10.1.2.2 24\n[R2-GigabitEthernet0/0/1]quit\n[R2]ipv6\n[R2]int gig 0/0/2\n[R2-GigabitEthernet0/0/2]ipv6 enable\n[R2-GigabitEthernet0/0/2]ipv6 add fc03::1 64\n[R2-GigabitEthernet0/0/2]quit\n</code></pre>\n</li>\n</ul>\n<ol>\n<li><p>配置 R1 和 R2 的 IPV4 静态路由</p>\n<pre><code class=\"lang-powershell\">[R1]ip route-static 10.1.2.2 255.255.255.0 10.1.1.2\n[R2]ip route-static 10.1.1.1 255.255.255.0 10.1.2.1\n</code></pre>\n</li>\n<li><p>配置 R1 和 R2 的 Tunnel 接口</p>\n</li>\n</ol>\n<ul>\n<li>R1</li>\n</ul>\n<pre><code class=\"lang-powershell\">[R1]int Tunnel 0/0/1 //进入隧道 Tunnel 0/0/1\n[R1-Tunnel0/0/1]tunnel-protocol gre //启用隧道协议 GRE\n[R1-Tunnel0/0/1]ipv6 enable //隧道端口使能 IPv6\n[R1-Tunnel0/0/1]ipv6 add fc02::1 64 //配置 IPv6 地址\n[R1-Tunnel0/0/1]source 10.1.1.1 //源端地址\n[R1-Tunnel0/0/1]destination 10.1.2.2 //目的地址\n[R1-Tunnel0/0/1]quit\n</code></pre>\n<ul>\n<li>R2</li>\n</ul>\n<pre><code class=\"lang-powershell\">[R2]int tunnel 0/0/1\n[R2-Tunnel0/0/1]tunnel-protocol gre\n[R2-Tunnel0/0/1]ipv6 enable\n[R2-Tunnel0/0/1]ipv6 add fc02::2 64\n[R2-Tunnel0/0/1]source 10.1.2.2\n[R2-Tunnel0/0/1]destination 10.1.1.1\n[R2-Tunnel0/0/1]quit\n</code></pre>\n<ol>\n<li>配置 R1 和 R2 的 Tunnel 静态路由<pre><code class=\"lang-powershell\">[R1]ipv6 route-static fc03::1 64 Tunnel 0/0/1\n[R2]ipv6 route-static fc01::1 64 Tunnel 0/0/1\n</code></pre>\n</li>\n<li>检查配置结果</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8E%E4%B8%BA%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%AE%9E%E9%AA%8C%E5%91%BD%E4%BB%A4%EF%BC%882%EF%BC%89/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8E%E4%B8%BA%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%AE%9E%E9%AA%8C%E5%91%BD%E4%BB%A4%EF%BC%882%EF%BC%89/",
            "title": "华为路由交换实验命令（2）",
            "date_published": "2021-05-09T13:35:47.000Z",
            "content_html": "<h1 id=\"路由器基础\"><a href=\"#路由器基础\" class=\"headerlink\" title=\"路由器基础\"></a>路由器基础</h1><ul>\n<li>路由器(Router)是一种典型的==网络层设备== ，在 OSI 参考模型中被称为中介系统，用于完成网络层中继或第三层中继的任务。路由器==负责在两个局域网的网络层间接传输数据分组，并确定网络上数据传送的最佳路径==。</li>\n<li>异种网络互联与多个子网互联都应采用路由器来完成。</li>\n<li>路由器的==主要工作就是为经过的每个数据包寻找一条最佳的传输路径，并将该数据有效地传送到目的站点==。由此可见，选择最佳路径的策略（路由算法）是路由器的关键所在。为了完成这项工作，在路由器中保存着各种传输路径的相关数据一路由表(RoutingTable)供路由选择时使用。路由表中保存着子网的标志信息、下一跳地址和将数据转发出去的接口等信息。</li>\n<li><strong>路由表分为静态路由表和动态路由表</strong><ul>\n<li>静态路由：手工指定（默认路由、静态路由）</li>\n<li>动态路由：</li>\n<li>距离矢量（Distance-Vector）路由协议：RIP（Routing information Protocol）</li>\n<li>链路状态（Link-State）路由协议：OSPF、IS-IS、IGP</li>\n<li>平衡混合（Balanced-Hybrid）路由协议：BGP</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"路由器简介和分类：路由器（Router）\"><a href=\"#路由器简介和分类：路由器（Router）\" class=\"headerlink\" title=\"路由器简介和分类：路由器（Router）\"></a>路由器简介和分类：路由器（Router）</h1><ul>\n<li><p>用来连接不同的局域网，路由器可以学习和传播各种路由信息，并根据这些路由信息将网络中的分组转发到正确的网络中。路由器工作在第3层网络层，==具有局域网和广域网两种接口==。</p>\n</li>\n<li><p><strong>根据功能、性能、应用分为：</strong></p>\n<ol>\n<li>骨干路由器：主干网络互连，模块化、热备份、双电源等冗余技术。如国家级、省级骨干网互连。如NE40E以上系列。</li>\n<li>企业级路由器：用于一个企业出入口，提供多种功能，完成企业组网。可实现数据、语音、视频等应用。如AR3600系列。</li>\n<li>接入级路由器：边缘路由器，小型企业，或者部门组网。如AR2200系列。</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"路由器上的一些常见端口\"><a href=\"#路由器上的一些常见端口\" class=\"headerlink\" title=\"路由器上的一些常见端口\"></a>路由器上的一些常见端口</h1><ol>\n<li><code>Serial</code>端口：高速同步串口，与广域网连接，可连接DDN、帧中继、X.25、PSTN等网络。</li>\n<li><code>Console</code>端口：初次配置控制台端口，利用终端仿真程序，如超级终端、<code>SecureCRT</code>对路由器进行本地配置。</li>\n<li><code>RJ-45</code>端口：以太网口，通过双绞线连接局域网，有的标识ETH，有的标识为<code>10/100 b TX</code>。</li>\n<li><code>AUX</code>端口：远程配置路由器，连接<code>Modem</code></li>\n</ol>\n<h1 id=\"交换路由的操作系统VRP：\"><a href=\"#交换路由的操作系统VRP：\" class=\"headerlink\" title=\"交换路由的操作系统VRP：\"></a>交换路由的操作系统VRP：</h1><ul>\n<li>是华为公司为其网络设备开发的操作维护系统。用户通过运行命令行CLI，对网络设备进行功能设置</li>\n</ul>\n<h1 id=\"访问交换机和路由器的几种方法：\"><a href=\"#访问交换机和路由器的几种方法：\" class=\"headerlink\" title=\"访问交换机和路由器的几种方法：\"></a>访问交换机和路由器的几种方法：</h1><ol>\n<li><code>Console</code>口，初次配置</li>\n<li><code>AUX</code>口远程拨号</li>\n<li><code>Telnet</code>带外远程</li>\n<li>Web浏览器输入IP</li>\n<li><p>网管软件</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYT8yj.png\" alt=\"webjhj\"></p>\n</li>\n</ol>\n<h1 id=\"交换和路由中的广播域和冲突域：\"><a href=\"#交换和路由中的广播域和冲突域：\" class=\"headerlink\" title=\"交换和路由中的广播域和冲突域：\"></a>交换和路由中的广播域和冲突域：</h1><ol>\n<li><strong>冲突域</strong> ： 在同一个冲突域中的每一个节点都能收到所有被发送的帧。简单的说就是同一时间内只能有一台设备发送信息的范围。 ==交换机能分隔冲突域 。一个端口一个冲突域==</li>\n<li><strong>广播域</strong> ：网络中能接收任一设备发出的广播帧的所有设备的集合。简单的说如果站点发出一个广播信号，所有能接收收到这个信号的设备范围称为一个广播域。 ==路由器能分隔广播域。一个端口一个广播域==</li>\n</ol>\n<h1 id=\"路由器基本配置实验\"><a href=\"#路由器基本配置实验\" class=\"headerlink\" title=\"路由器基本配置实验\"></a>路由器基本配置实验</h1><h2 id=\"设置系统的日期、时间和时区\"><a href=\"#设置系统的日期、时间和时区\" class=\"headerlink\" title=\"设置系统的日期、时间和时区\"></a>设置系统的日期、时间和时区</h2><pre><code class=\"lang-powershell\">&lt;Huawei&gt;clock time zone BJ add 08：00：00\n&lt;Huawei&gt;clock datetime 20：10：00 2015-03-26\n</code></pre>\n<h2 id=\"设置设备名称和管理IP地址\"><a href=\"#设置设备名称和管理IP地址\" class=\"headerlink\" title=\"设置设备名称和管理IP地址\"></a>设置设备名称和管理IP地址</h2><pre><code class=\"lang-powershell\">&lt;Huawe1&gt;system-view\n[Huawei]sysname Server\n[Server]interface gigabitethernet0/0/0\n[Server-GigabitEthernet0/0/0]ip address 10.137.217.177 24\n[Server-GigabitEthernet0/0/0]quit\n</code></pre>\n<h1 id=\"路由相关实验\"><a href=\"#路由相关实验\" class=\"headerlink\" title=\"路由相关实验\"></a>路由相关实验</h1><h2 id=\"静态路由配置\"><a href=\"#静态路由配置\" class=\"headerlink\" title=\"静态路由配置\"></a>静态路由配置</h2><p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYTBpF.png\" alt=\"s\"></p>\n<ol>\n<li>配置各路由的接口 IP</li>\n</ol>\n<ul>\n<li><strong>R1</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;sys\n&lt;Huawei&gt;system-view\nEnter system view, return user view with Ctrl+Z.\n[Huawei]un in en\nInfo: Information center is disabled.\n[Huawei]sysname R1\n[R1]interface GigabitEthernet 0/0/1\n[R1-GigabitEthernet0/0/1]ip address 10.1.1.1 24 //配置接口 IP\n[R1-GigabitEthernet0/0/1]quit\n[R1]interface GigabitEthernet 0/0/2\n[R1-GigabitEthernet0/0/2]ip address 10.1.4.1 24 //配置接口 IP\n[R1-GigabitEthernet0/0/2]quit\n</code></pre>\n<ul>\n<li><strong>R2</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view \nEnter system view, return user view with Ctrl+Z.\n[Huawei]un in en\nInfo: Information center is disabled.\n[Huawei]sysname R2\n[R2]interface GigabitEthernet 0/0/1\n[R2-GigabitEthernet0/0/1]ip address 10.1.2.1 24 //配置接口 IP \n[R2-GigabitEthernet0/0/1]interface GigabitEthernet 0/0/2\n[R2-GigabitEthernet0/0/2]ip address 10.1.4.2 24 //配置接口 IP\n[R2]interface GigabitEthernet 0/0/0\n[R2-GigabitEthernet0/0/0]ip address 10.1.5.1 24 //配置接口 IP\n[R2-GigabitEthernet0/0/0]quit\n</code></pre>\n<ul>\n<li><strong>R3</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view \nEnter system view, return user view with Ctrl+Z.\n[Huawei]sysn\n[R3]UN IN EN\nInfo: Information center is disabled.\n[Huawei]sysname R3\n[R3]interface GigabitEthernet 0/0/2\n[R3-GigabitEthernet0/0/2]ip address 10.1.5.2 24 //配置接口 IP\n[R3-GigabitEthernet0/0/2]quit\n[R3]interface GigabitEthernet 0/0/1\n[R3-GigabitEthernet0/0/1]ip address 10.1.3.1 24 //配置接口 IP\n[R3-GigabitEthernet0/0/1]quit\n</code></pre>\n<ol>\n<li>配置各路由器的静态 IP</li>\n</ol>\n<ul>\n<li><strong>R1</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R1]ip route-static 10.1.2.0 255.255.255.0 10.1.4.2 //R1 到 PC2 的静态路由\n[R1]ip route-static 10.1.3.0 255.255.255.0 10.1.4.2 //R1 到 PC3 的静态路由\n[R1]ip route-static 10.1.5.0 255.255.255.0 10.1.4.2 //R1 到 R3 的静态路由\n</code></pre>\n<ul>\n<li><strong>R2</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R2]ip route-static 10.1.1.0 255.255.255.0 10.1.4.1 //R2 到 PC1 的静态路由\n[R2]ip route-static 10.1.3.0 255.255.255.0 10.1.5.2 //R2 到 PC3 的静态路由\n</code></pre>\n<ul>\n<li><strong>R3</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R3]ip route-static 10.1.1.0 255.255.255.0 10.1.5.1 //R3 到 PC1 的静态路由\n[R3]ip route-static 10.1.2.0 255.255.255.0 10.1.5.1 //R3 到 PC2 的静态路由\n[R3]ip route-static 10.1.4.0 255.255.255.0 10.1.5.1 //R3 到 R1 的静态路由\n</code></pre>\n<ol>\n<li>在各个路由器上执行 <code>display ip routing-table</code> 查看路由表</li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYTr6J.png\" alt=\"iprou\"></p>\n<ol>\n<li>在PC机上互相 <code>ping</code>，可以通信</li>\n</ol>\n<hr>\n<h2 id=\"静态路由-IPv6-配置\"><a href=\"#静态路由-IPv6-配置\" class=\"headerlink\" title=\"静态路由 IPv6 配置\"></a>静态路由 IPv6 配置</h2><p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYTc01.png\" alt=\"jtlyv6\"></p>\n<ol>\n<li>配置各路由的接口 IP（类似 IPv4 配置，IPv6 功能默认关闭，使用时需开启全局使能 IPv6）</li>\n</ol>\n<ul>\n<li><strong>R1</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view \nEnter system view, return user view with Ctrl+Z.\n[Huawei]un info en\nInfo: Information center is disabled.\n[Huawei]sysname R1\n[R1]ipv6 //全局使能 IPV6（启用路由器 IPv6 报文转发能力）\n[R1]interface GigabitEthernet 0/0/0 //进入对应接口\n[R1-GigabitEthernet0/0/0]ipv6 enable //接口开启 IPv6 功能\n[R1-GigabitEthernet0/0/0]ipv6 address 1::1 64 //接口配置对应的 IPv6 地址\n[R1-GigabitEthernet0/0/0]quit\n[R1]interface GigabitEthernet 0/0/2 //进入对应接口\n[R1-GigabitEthernet0/0/2]ipv6 enable //接口开启 IPv6 功能\n[R1-GigabitEthernet0/0/2]ipv6 address 3::1 64 //接口配置对应的 IPv6 地址\n[R1-GigabitEthernet0/0/2]quit\n</code></pre>\n<ul>\n<li><strong>R2</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view \nEnter system view, return user view with Ctrl+Z.\n[Huawei]sysn R2\n[R2]ipv6\n[R2]interface GigabitEthernet 0/0/2\n[R2-GigabitEthernet0/0/2]ipv6 enable \n[R2-GigabitEthernet0/0/2]ipv6 address 3::2 64\n[R2-GigabitEthernet0/0/2]quit\n[R2]interface GigabitEthernet 0/0/0\n[R2-GigabitEthernet0/0/0]ipv6 enable \n[R2-GigabitEthernet0/0/0]ipv6 address 2::1 64\n[R2-GigabitEthernet0/0/0]quit\n</code></pre>\n<blockquote>\n<p>R2 接口设置步骤同 R1</p>\n</blockquote>\n<ol>\n<li>配置到各路由器的静态路由</li>\n</ol>\n<ul>\n<li><strong>R1</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R1]ipv6 route-static 2:: 64 3::2 //R1 到 PC2 的静态 IPv6 路由\n</code></pre>\n<ul>\n<li><strong>R2</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R2]ipv6 route-static 1:: 64 3::1 //R2 到 PC1 的静态 IPv6 路由\n</code></pre>\n<ol>\n<li>检查配置结果</li>\n</ol>\n<ul>\n<li>使用 <code>display ipv6 routing-table</code> 命令查看路由器的 IP 路由表</li>\n<li>使用 <code>Ping ipv6</code> 命令验证连通性，要求从 PC1 可以<code>ping</code> 通 PC2</li>\n</ul>\n<h2 id=\"RIP路由配置\"><a href=\"#RIP路由配置\" class=\"headerlink\" title=\"RIP路由配置\"></a>RIP路由配置</h2><ul>\n<li>距离矢量路由协议（D-V）RIPv2 支持 CIDR/VLSM<ul>\n<li>使用==组播地址（224.0.0.x）==发送路由信息</li>\n<li>适用于==小型网络（最大跳 15）==</li>\n<li>==30s 广播一次路由信息==</li>\n<li>==工作于网络层==</li>\n<li>优先级（AD）默认 100</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYTWtK.png\" alt=\"rips\"></p>\n<ol>\n<li>配置各路由器的接口 IP</li>\n</ol>\n<ul>\n<li><strong>配置R1</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view \nEnter system view, return user view with Ctrl+Z.\n[Huawei]un in en\nInfo: Information center is disabled.\n[Huawei]sysn R1\n[R1]int gig 0/0/1\n[R1-GigabitEthernet0/0/1]ip address 192.168.1.1 24\n[R1-GigabitEthernet0/0/1]\n</code></pre>\n<ul>\n<li><strong>配置R2</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view \nEnter system view, return user view with Ctrl+Z.\n[Huawei]Un in en\nInfo: Information center is disabled.\n[Huawei]sysn R2\n[R2]int gig 0/0/2\n[R2-GigabitEthernet0/0/2]ip add 192.168.1.2 24\n[R2-GigabitEthernet0/0/2]int gig 0/0/1\n[R2-GigabitEthernet0/0/1]ip add 10.1.1.1 24\n[R2-GigabitEthernet0/0/1]quit\n</code></pre>\n<ul>\n<li><strong>配置R3</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view \nEnter system view, return user view with Ctrl+Z.\n[Huawei]Un in en\nInfo: Information center is disabled.\n[Huawei]sysn R3\n[R3]int gig 0/0/2\n[R3-GigabitEthernet0/0/2]ip add 10.1.1.2 24\n[R3-GigabitEthernet0/0/2]int gig 0/0/1\n[R3-GigabitEthernet0/0/1]ip add 172.16.1.1 24\n[R3-GigabitEthernet0/0/1]quit\n</code></pre>\n<ul>\n<li><strong>配置R4</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">&lt;Huawei&gt;system-view \nEnter system view, return user view with Ctrl+Z.\n[Huawei]Un in en\nInfo: Information center is disabled.\n[Huawei]sysn R4\n[R4]int gig 0/0/2\n[R4-GigabitEthernet0/0/2]ip add 172.16.1.2 24\n[R4-GigabitEthernet0/0/2]quit\n</code></pre>\n<ol>\n<li>配置各个路由器的 RIP 功能</li>\n</ol>\n<ul>\n<li><strong>配置R1</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R1]rip //进入 RIP 配置\n[R1-rip-1]network 192.168.1.0 //宣告网络\n[R1-rip-1]quit\n</code></pre>\n<ul>\n<li><strong>配置R2</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R2]rip\n[R2-rip-1]network 192.168.1.0\n[R2-rip-1]network 10.0.0.0\n[R2-rip-1]quit\n</code></pre>\n<ul>\n<li><strong>配置R3</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R3]rip\n[R3-rip-1]network 10.0.0.0\n[R3-rip-1]network 172.16.0.0\n[R3-rip-1]quit\n</code></pre>\n<ul>\n<li><strong>配置R4</strong></li>\n</ul>\n<pre><code class=\"lang-powershell\">[R4]rip\n[R4-rip-1]network 172.16.0.0\n[R4-rip-1]quit\n</code></pre>\n<ol>\n<li>查看各路由器上 RIP 信息</li>\n</ol>\n<ul>\n<li>使用 <code>display rip 1 route</code></li>\n</ul>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYT51e.png\" alt=\"rips\"></p>\n<ol>\n<li>将 RIP 路由协议升级为 RIPv2 版本<blockquote>\n<p>分别在路由器 R1、R2、R3、R4 配置 RIP-2,在路由器 R1 上配置如下，其他路由器上配置方法相同。</p>\n</blockquote>\n</li>\n</ol>\n<pre><code class=\"lang-powershell\">[R1/R2/R3/R4]rip //进入 rip 配置\n[R1/R2/R3/R4-rip-1]version 2 //设置 RIPv2 版本\n[R1/R2/R3/R4-rip-1]quit\n</code></pre>\n<ul>\n<li>使用 <code>display rip 1 route</code> 查看版本变更效果</li>\n</ul>\n<h2 id=\"OSPF路由配置\"><a href=\"#OSPF路由配置\" class=\"headerlink\" title=\"OSPF路由配置\"></a>OSPF路由配置</h2><ul>\n<li>OSPF(<code>Open Shortest Path First</code> 开放式最短路径优先）<ul>\n<li>自治系统（AS）：<ul>\n<li>自治系统包括一个单独管理实体下所控制的一组路由器（OSPF 是内部网关路由协议，工作于自治系统内部）</li>\n</ul>\n</li>\n<li>链路状态（LS）：<ul>\n<li>指路由器接口的状态（如 Up 、Down 、IP 地址、网络类型、链路开销以及路由器和它邻接路由器间的关系）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>链路状态信息通过链路状态通告(Link State Advertisement, LSA) 扩散到网络上的每台路由器，每台路由器根据 LSA 信息建立一个于千网络的拓扑数据库（邻居表）<ul>\n<li>最短路径优先算法(SPF)=迪克斯加算法(Dijkstra)<ul>\n<li>利用从 LSA 通告得来的信息计算到达每一个目标网络的最短路径，以自身为根生成一棵树，包含了到达每个目的网络的完整路径</li>\n</ul>\n</li>\n<li>路由器标识<ul>\n<li>OSPF 的路由标识是一个 32 位的数字，它在自治系统中被用来唯一地识别路由器。默认使用最高回环地址（loopback），若回环地址没有被配置，则使用物理接口上最高的 IP 地址作为路由器标识</li>\n</ul>\n</li>\n<li>邻居和邻接<ul>\n<li>OSPF 在相邻路由器间建立邻接关系，使它们交换路由信息。</li>\n<li>邻居是指共享同一网络的路由器，并使用 Hello 包来建立和维护邻居路由器间的邻接关系。</li>\n</ul>\n</li>\n<li>区域<ul>\n<li>在 OSPF 网络中使用区域(Area)为自治系统分段。</li>\n<li>OSPF 是一种层次化的路由选择协议，区域 0 是一个 OSPF 网络中必须具有的区域，也称为主干区域，其他所有区域要求通过区域 0 互连到一起。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>简化原理：<ul>\n<li>发送 Hello 报文建立邻间关系（邻居表）→形成链路状态数据库（拓扑表）→SPF（Dijkstra）算法形成路由表（路由表）</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYT7nA.png\" alt=\"ospfs\"></p>\n<ol>\n<li>配置各个路由器的接口 IP</li>\n<li>配置各路由器的区域</li>\n</ol>\n<ul>\n<li><p><strong>区域0</strong></p>\n<ol>\n<li><p>配置 R1</p>\n<pre><code class=\"lang-powershell\">[R1]ospf //进入 ospf 配置\n[R1-ospf-1]area 0 //进入区域 0\n[R1-ospf-1-area-0.0.0.0]network 192.168.1.0 0.0.0.255 //宣告网络（通配符掩码）\n</code></pre>\n</li>\n<li><p>配置 R2</p>\n<pre><code class=\"lang-powershell\">[R2]ospf\n[R2-ospf-1]area 0\n[R2-ospf-1-area-0.0.0.0]network 192.168.1.0 0.0.0.255\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p><strong>区域1</strong></p>\n<ol>\n<li><p>配置 R1</p>\n<pre><code class=\"lang-powershell\">[R1]ospf //进入 ospf 配置\n[R1-ospf-1]area 1 //进入区域 1\n[R1-ospf-1-area-0.0.0.1]network 192.168.2.0 0.0.0.255 //宣告网络（通配符掩码）\n</code></pre>\n</li>\n<li><p>配置 R3</p>\n<pre><code class=\"lang-powershell\">[R3]ospf\n[R3-ospf-1]area 1\n[R3-ospf-1-area-0.0.0.1]network 192.168.2.0 0.0.0.255\n[R3-ospf-1-area-0.0.0.1]network 192.168.3.0 0.0.0.255\n</code></pre>\n</li>\n<li>配置 R5<pre><code class=\"lang-powershell\">[R5]ospf\n[R5-ospf-1]area 1\n[R5-ospf-1-area-0.0.0.1]network 192.168.3.0 0.0.0.255\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p><strong>区域2</strong></p>\n<ol>\n<li><p>配置 R2</p>\n<pre><code class=\"lang-powershell\">[R2-ospf-1]ospf //进入 ospf 配置\n[R2-ospf-1]area 2 //进入区域 2\n[R2-ospf-1-area-0.0.0.2]network 192.168.4.0 0.0.0.255 //宣告网络（通配符掩码）\n</code></pre>\n</li>\n<li><p>配置 R4</p>\n<pre><code class=\"lang-powershell\">[R4]ospf\n[R4-ospf-1]area 2\n[R4-ospf-1-area-0.0.0.2]network 192.168.4.0 0.0.0.255\n[R4-ospf-1-area-0.0.0.2]network 192.168.5.0 0.0.0.255\n</code></pre>\n</li>\n<li>配置 R6<pre><code class=\"lang-powershell\">[R6]ospf\n[R6-ospf-1]area 2\n[R6-ospf-1-area-0.0.0.2]network 192.168.5.0 0.0.0.255\n</code></pre>\n</li>\n</ol>\n</li>\n</ul>\n<hr>\n<ol>\n<li>查看各路由器的路由表(<code>dis ip routing-table/dis ospf peer</code>)</li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYTb7t.png\" alt=\"ospfse\"></p>\n<ol>\n<li>使用 <code>dis ospf routing</code> 查看<code>R1 R3 R5 R6</code></li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/09/gYTXh8.png\" alt=\"ospfeqw\"></p>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8E%E4%B8%BA%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%AE%9E%E9%AA%8C%E5%91%BD%E4%BB%A4%EF%BC%881%EF%BC%89/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8E%E4%B8%BA%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2%E5%AE%9E%E9%AA%8C%E5%91%BD%E4%BB%A4%EF%BC%881%EF%BC%89/",
            "title": "华为路由交换实验命令（1）",
            "date_published": "2021-05-04T09:20:42.000Z",
            "content_html": "<h1 id=\"交换机基本配置命令\"><a href=\"#交换机基本配置命令\" class=\"headerlink\" title=\"交换机基本配置命令\"></a>交换机基本配置命令</h1><h2 id=\"一、模式命令：\"><a href=\"#一、模式命令：\" class=\"headerlink\" title=\"一、模式命令：\"></a>一、模式命令：</h2><ol>\n<li>用户模式：<code>Switch&gt;</code></li>\n<li>特权模式：<code>Switch&gt;enable</code><br><code>Switch#</code></li>\n<li>全局配置模式：<code>Switch# config terminal</code><br><code>Switch（config）#</code></li>\n<li>接口配置模式：<code>Switch（config）#interface fastethernet0/1</code><br><code>Switch（config-if）#</code></li>\n<li>Line模式：<code>Switch（config）#line console 0</code><br><code>Switch（config-line）#</code></li>\n</ol>\n<h2 id=\"二、特权模式下的命令：\"><a href=\"#二、特权模式下的命令：\" class=\"headerlink\" title=\"二、特权模式下的命令：\"></a>二、特权模式下的命令：</h2><ol>\n<li>查看交换机MAC地址：<code>Switch#show mac-address-table</code></li>\n<li>Cisco发现协议（CDP）：<pre><code class=\"lang-powershell\"> Switch#show cdp\n Switch#show cdp interface fastethernet0/1\n Switch#show cdp neighbors\n Switch#show cdp neighbors detail\n Switch#show cdp entry\n</code></pre>\n</li>\n<li>保存交换机配置：<br><code>Switch#copy running-config startup-config或者Switch#write</code></li>\n<li>恢复交换机出厂值：<pre><code class=\"lang-powershell\"> Switch#erase startup-config\n Switch#reload\n</code></pre>\n<h2 id=\"三、全局配置模式下的命令：\"><a href=\"#三、全局配置模式下的命令：\" class=\"headerlink\" title=\"三、全局配置模式下的命令：\"></a>三、全局配置模式下的命令：</h2></li>\n<li>配置主机名：<code>Switch（config）#hostname Sw1</code><br><code>Sw1（config）#</code></li>\n<li>设置登陆台密码：<code>Switch（config）#line console 0</code></li>\n</ol>\n<pre><code class=\"lang-powershell\">Switch（config-line）#password 密码\nSwitch（config-line）#login\n</code></pre>\n<ol>\n<li>使能口令：<code>Switch（config）#enable Password 密码</code></li>\n<li>加密保存的使能口令：<code>Switch（config）#enable secret 密码</code></li>\n<li>配置IP地址：<pre><code class=\"lang-powershell\">Switch（config）#interface vlan 1\nSwitch（config-if）#ip address IP地址 网关\nSwitch（config-if）#no shutdown\n</code></pre>\n</li>\n<li>配置交换机网关：<code>Switch（config）#ip default-gateway 网关</code></li>\n</ol>\n<h2 id=\"四、VLAN配置命令：\"><a href=\"#四、VLAN配置命令：\" class=\"headerlink\" title=\"四、VLAN配置命令：\"></a>四、VLAN配置命令：</h2><ol>\n<li>创建vlan命令：<ul>\n<li>全局配置模式下：<pre><code class=\"lang-powershell\">Switch（config）#vlan 2\nSwitch（config）#name v2\nSwitch（config）#mtu 数值\nSwitch（config）#end\n</code></pre>\n</li>\n<li>Vlan数据库下：<pre><code class=\"lang-powershell\">Switch#vlan database\nSwitch#vlan 2 name v2\nSwitch#vlan 2 mut 数值\nSwitch#exit\n</code></pre>\n</li>\n</ul>\n</li>\n<li>删除vlan命令：<ul>\n<li>全局配置模式下：<pre><code class=\"lang-powershell\">Switch（config）#no vlan 2\nSwitch（config）#end\n</code></pre>\n</li>\n<li>Vlan数据库下：<pre><code class=\"lang-powershell\">Switch#no vlan 2 name v2\nSwitch#exit\n</code></pre>\n</li>\n</ul>\n</li>\n<li>在vlan中添加端口：<pre><code class=\"lang-powershell\">Switch#config terminal\nSwitch（config）#interface f0/1（端口）\nSwitch（config-if）#Switchport mode access\nSwitch（config-if）#switchport access vlan 2\nSwitch（config-if）#end\n# 一次将多个端口添加到vlan中：\nSwitch#config terminal\nSwitch（config）#interface range f0/1 - 5（端口）\nSwitch（config-if）#switchport access vlan 2\nSwitch（config-if）#end\n注：switch#show vlan biref(查看vlan信息)\n</code></pre>\n</li>\n<li><p>配置vlan trunk：</p>\n<ol>\n<li>配置接口为trunk命令：<pre><code class=\"lang-powershell\">Switch（config）# interface f0/1（端口）\nSwitch（config-if）#Switchport mode trunk\n</code></pre>\n</li>\n<li>配置接口为动态协商模式的命令：<pre><code class=\"lang-powershell\">Switch（config）# interface f0/1（端口）\nSwitch（config-if）#switchport mode dynamic desirable/auto\n</code></pre>\n</li>\n<li>从trunk中删除vlan：<pre><code class=\"lang-powershell\">Switch（config）# interface f0/1（端口）\nSwitch（config-if）#Switchport trunk allowed vlan remove 2\n</code></pre>\n</li>\n<li>在trunk中添加vlan：<pre><code class=\"lang-powershell\">Switch（config）# interface f0/1（端口）\nSwitch（config-if）#Switchport trunk allowed vlan add 2\n</code></pre>\n</li>\n</ol>\n</li>\n</ol>\n<hr>\n<h1 id=\"配置系统基本信息命令\"><a href=\"#配置系统基本信息命令\" class=\"headerlink\" title=\"配置系统基本信息命令\"></a>配置系统基本信息命令</h1><h2 id=\"执行命令sysname-host-name，设置设备名称\"><a href=\"#执行命令sysname-host-name，设置设备名称\" class=\"headerlink\" title=\"执行命令sysname host-name，设置设备名称\"></a>执行命令sysname host-name，设置设备名称</h2><pre><code class=\"lang-powershell\">&lt;HUAWEI&gt; system-view \n[HUAWEI] sysname Switch \n[Switch] undo sysname    //恢复主机名到缺省情况 \n[HUAWEI] quit\n</code></pre>\n<h2 id=\"执行命令clock-datetime设置当前时间和日期\"><a href=\"#执行命令clock-datetime设置当前时间和日期\" class=\"headerlink\" title=\"执行命令clock datetime设置当前时间和日期\"></a>执行命令clock datetime设置当前时间和日期</h2><pre><code class=\"lang-powershell\">&lt;HUAWEI&gt; clock datetime 08:00:00 2018-12-01\n</code></pre>\n<h2 id=\"执行命令clock-timezone，配置设备所在地区及其对应的时区\"><a href=\"#执行命令clock-timezone，配置设备所在地区及其对应的时区\" class=\"headerlink\" title=\"执行命令clock timezone，配置设备所在地区及其对应的时区\"></a>执行命令clock timezone，配置设备所在地区及其对应的时区</h2><pre><code class=\"lang-powershell\">&lt;HUAWEI&gt; system-view \n[HUAWEI] clock timezone Beijing add 08:00:00\n</code></pre>\n<h2 id=\"执行命令display-clock，查看系统当前日期和时钟\"><a href=\"#执行命令display-clock，查看系统当前日期和时钟\" class=\"headerlink\" title=\"执行命令display clock，查看系统当前日期和时钟\"></a>执行命令display clock，查看系统当前日期和时钟</h2><pre><code class=\"lang-powershell\">[HUAWEI] display clock \n2018-12-01 08:02:30+08:00                                                        \nSaturday                                                        \nTime Zone(Beijing) : UTC+08:00\n</code></pre>\n<h2 id=\"执行命令ip-address，配置设备管理IP地址，执行命令ip-route-static，配置设备缺省网关\"><a href=\"#执行命令ip-address，配置设备管理IP地址，执行命令ip-route-static，配置设备缺省网关\" class=\"headerlink\" title=\"执行命令ip address，配置设备管理IP地址，执行命令ip route-static，配置设备缺省网关\"></a>执行命令ip address，配置设备管理IP地址，执行命令ip route-static，配置设备缺省网关</h2><ul>\n<li>对于有管理网口的设备，在管理网口下配置管理IP地址<pre><code class=\"lang-powershell\">[HUAWEI] interface MEth 0/0/1\n[HUAWEI-MEth0/0/1] ip address 10.10.10.2 255.255.255.0    //设备管理IP\n[HUAWEI-MEth0/0/1] quit\n[HUAWEI] ip route-static 0.0.0.0 0 10.10.10.1    //设备缺省网关\n</code></pre>\n</li>\n<li>对于没有管理网口的设备，在Vlanif接口下配置管理IP地址</li>\n</ul>\n<pre><code class=\"lang-powershell\">[HUAWEI] vlan 10 \n[HUAWEI-vlan10] quit\n[HUAWEI] interface Vlanif 10\n[HUAWEI-Vlanif10] ip address 10.10.10.2 255.255.255.0    //设备管理IP\n[HUAWEI-Vlanif10] quit\n[HUAWEI] ip route-static 0.0.0.0 0 10.10.10.1    //设备缺省网关\n</code></pre>\n<h2 id=\"执行命令display-ip-interface-brief，查看接口上IP地址的简要信息。执行命令display-ip-routing-table，查看IP路由信息\"><a href=\"#执行命令display-ip-interface-brief，查看接口上IP地址的简要信息。执行命令display-ip-routing-table，查看IP路由信息\" class=\"headerlink\" title=\"执行命令display ip interface brief，查看接口上IP地址的简要信息。执行命令display ip routing-table，查看IP路由信息\"></a>执行命令display ip interface brief，查看接口上IP地址的简要信息。执行命令display ip routing-table，查看IP路由信息</h2><pre><code class=\"lang-powershell\">[HUAWEI] display ip interface brief \n*down: administratively down                                                     \n^down: standby                                                                   \n(l): loopback                                                                    \n(s): spoofing                                                                    \n(E): E-Trunk down                                                                \nThe number of interface that is UP in Physical is 2                              \nThe number of interface that is DOWN in Physical is 1                            \nThe number of interface that is UP in Protocol is 2                              \nThe number of interface that is DOWN in Protocol is 1                            \n\nInterface                         IP Address/Mask      Physical   Protocol       \nNULL0                             unassigned           up         up(s)          \nVlanif10                          10.10.10.2/24        up         up             \n\n[HUAWEI] display ip routing-table \nRoute Flags: R - relay, D - download to fib                                      \n------------------------------------------------------------------------------   \nRouting Tables: Public                                                           \n         Destinations : 5        Routes : 5                                      \n\nDestination/Mask    Proto   Pre  Cost      Flags NextHop         Interface       \n\n        0.0.0.0/0   Static  60   0          RD   10.10.10.1      Vlanif10      \n       10.0.0.0/8   Direct  0    0           D   10.0.0.1        InLoopBack0     \n       10.0.0.1/32  Direct  0    0           D   10.0.0.1        InLoopBack0     \n     10.10.10.0/24  Direct  0    0           D   10.10.10.2      Vlanif10      \n     10.10.10.2/32  Direct  0    0           D   10.0.0.1        Vlanif10\n</code></pre>\n<h2 id=\"执行命令ssh-user，配置SSH用户相关参数；执行命令local-user，配置本地用户相关参数，实现通过SSH协议登录设备。\"><a href=\"#执行命令ssh-user，配置SSH用户相关参数；执行命令local-user，配置本地用户相关参数，实现通过SSH协议登录设备。\" class=\"headerlink\" title=\"执行命令ssh user，配置SSH用户相关参数；执行命令local-user，配置本地用户相关参数，实现通过SSH协议登录设备。\"></a>执行命令ssh user，配置SSH用户相关参数；执行命令local-user，配置本地用户相关参数，实现通过SSH协议登录设备。</h2><pre><code class=\"lang-powershell\">&lt;HUAWEI&gt; system-view \n[HUAWEI] user-interface vty 0 4 \n[HUAWEI-ui-vty0-4] authentication-mode aaa    //配置VTY用户认证方式为AAA认证 \n[HUAWEI-ui-vty0-4] protocol inbound ssh    //VTY用户界面所支持的协议缺省为SSH协议。 \n[HUAWEI-ui-vty0-4] quit \n[HUAWEI] aaa \n[HUAWEI-aaa] local-user admin password irreversible-cipher admin@123    //创建与SSH用户同名的本地用户和对应的登录密码 \n[HUAWEI-aaa] local-user admin service-type ssh terminal    //配置本地用户的服务方式 \n[HUAWEI-aaa] local-user admin privilege level 15    //配置本地用户级别 \n[HUAWEI-aaa] quit \n[HUAWEI] ssh user admin    //创建SSH用户 \n[HUAWEI] ssh user admin authentication-type password    //配置SSH用户的认证方式为password \n[HUAWEI] ssh user admin service-type stelnet    //配置SSH用户的服务方式 \n[HUAWEI] stelnet server enable    //使能设备的STelnet服务器功能\n</code></pre>\n<blockquote>\n<p>注意：确保SSH用户名称与本地用户名称相同。<br>本页面只介绍了使用Password认证方式实现通过STelnet协议登录设备。更多配置Telnet或STelnet协议实现远程登录的详细操作参见配置通过Telnet登录设备或配置通过STelnet登录设备。</p>\n</blockquote>\n<h2 id=\"执行命令display-current-configuration，查看设备当前配置。\"><a href=\"#执行命令display-current-configuration，查看设备当前配置。\" class=\"headerlink\" title=\"执行命令display current-configuration，查看设备当前配置。\"></a>执行命令display current-configuration，查看设备当前配置。</h2><pre><code class=\"lang-powershell\">&lt;HUAWEI&gt; system-view \n[HUAWEI] display current-configuration | include ip \n ip address 10.10.10.2 255.255.255.0                                            \nip route-static 0.0.0.0 0.0.0.0 10.10.10.1\n</code></pre>\n<h2 id=\"查询系统信息的命令（常用！）\"><a href=\"#查询系统信息的命令（常用！）\" class=\"headerlink\" title=\"查询系统信息的命令（常用！）\"></a>查询系统信息的命令（常用！）</h2><ul>\n<li><code>display current-configuration</code>，查看系统配置。</li>\n<li><code>display interface brief</code>，查看接口摘要信息。</li>\n<li><code>display clock</code>，查看系统当前日期和时钟。</li>\n<li><code>display ip interface brief</code>，查看接口上IP地址的简要信息。</li>\n<li><code>display ip routing-table</code>，查看系统路由信息。</li>\n<li><code>display user-interface</code>，查看用户界面的物理属性和配置。</li>\n<li><code>display local-user</code>，查看本地用户列表。</li>\n<li><code>display ssh user-information</code>，在SSH服务器端查看SSH用户信息。</li>\n<li><code>display ssh server status</code>，查看SSH服务器的全局配置信息。</li>\n<li><code>display ssh server session</code>，查看与SSH客户端连接的会话信息。</li>\n<li><code>display mac-address</code>，查看交换机MAC、VLAN下的MAC绑定</li>\n<li><code>display interface vlanif1</code>，显示VLANIF1的MAC地址</li>\n</ul>\n<blockquote>\n<p>参考文档：华为交换机命令总结<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaGZ0aWFuL3AvODg1ODM0My5odG1s\">https://www.cnblogs.com/hftian/p/8858343.html</span></p>\n</blockquote>\n<h1 id=\"交换机分类\"><a href=\"#交换机分类\" class=\"headerlink\" title=\"交换机分类\"></a>交换机分类</h1><table>\n    <tr>\n        <th>划分方式</th>\n        <th>交换分类</th>\n        <th>特点</th>\n    </tr>\n    <tr>\n        <td rowspan=3>交换方式</td>\n        <td>存储转发</td>\n        <td>存储、校验、延时大</td>\n    </tr>\n    <tr>\n        <td>直通式</td>\n        <td>直接、不校验、速度快</td>\n    </tr>\n        <td>碎片过滤</td>\n        <td>64字节、小的丢弃</td>\n    </tr>\n        <td rowspan=3>协议层次</td>\n        <td>二层交换</td>\n        <td>MAC地址交换</td>\n    </tr>\n        <td>三层交换</td>\n        <td>IP地址交换</td>\n    </tr>\n        <td>多层交换</td>\n        <td>端口号、协议交换</td>\n    </tr>\n        <td rowspan=2>交换结构</td>\n        <td>固定式</td>\n        <td>固定数量端口，如24口</td>\n    </tr>\n        <td>模块式</td>\n        <td>预留插槽、插入模块扩展</td>\n    </tr>\n        <td rowspan=2>配置方式</td>\n        <td>堆叠式</td>\n        <td>堆叠口、4到9层、统一</td>\n    </tr>\n        <td>非堆叠</td>\n        <td>级联、不超4层</td>\n    </tr>\n        <td rowspan=3>管理类型</td>\n        <td>网管型</td>\n        <td>支持SNMP和MIB网管协议</td>\n    </tr>\n        <td>非网管</td>\n        <td>傻瓜交换机、不需配置</td>\n    </tr>\n        <td>智能型</td>\n        <td>支持WEB配置和SNMP、MIB</td>\n    </tr>\n        <td rowspan=3>适用范围</td>\n        <td>接入层</td>\n        <td>用户接入、多接口</td>\n    </tr>\n        <td>汇聚层</td>\n        <td>策略控制ACL、VLAN、QoS</td>\n    </tr>\n        <td>核心层</td>\n        <td>高速转发、冗余、均衡</td>\n    </tr>\n\n</table>\n\n<h1 id=\"典型的三层交换机、\"><a href=\"#典型的三层交换机、\" class=\"headerlink\" title=\"典型的三层交换机、\"></a>典型的三层交换机、</h1><ol>\n<li>接入层交换机，如S2700。</li>\n<li>汇聚层交换机，如S3700。</li>\n<li>核心层交换机，如S5700</li>\n</ol>\n<p><img data-src=\"https://z3.ax1x.com/2021/05/08/gJMPW6.png\" alt=\"jhj\"></p>\n<h1 id=\"交换机相关计算公式\"><a href=\"#交换机相关计算公式\" class=\"headerlink\" title=\"交换机相关计算公式\"></a>交换机相关计算公式</h1><ul>\n<li>包转发率：端口吞吐率，64字节数据包转发能力，单位 pps（包/秒）。计算公式如下：</li>\n</ul>\n<script type=\"math/tex; mode=display\">包转发率=千兆端口数×1.488Mpps+百兆端口数×0.1488Mpps+其余端口×相应包转发pps</script><ul>\n<li>背板带宽：端口处理器和数据总线之间单位时间内传输的最大数据量。单位Gbps（吉比特/秒）。计算公式如下：</li>\n</ul>\n<script type=\"math/tex; mode=display\">总带宽=端口数×端口速率×2（全双工）</script><h1 id=\"配置交换机的远程登录管理Telnet\"><a href=\"#配置交换机的远程登录管理Telnet\" class=\"headerlink\" title=\"配置交换机的远程登录管理Telnet\"></a>配置交换机的远程登录管理Telnet</h1><pre><code class=\"lang-powershell\">[Swltchl]telnet server enable ## Telnet默认是关闭的，需要打开\n[Switch1]user-interface vty 0 4 ## 开启VTY线路模式\n[Switch1-ui-vtyO-4]protocol inbound telnet ## 配置telnet协议\n[Switch1-ui-vtyO-4]authentication-mode aaa ## 配置认证方式\n[Switch1-ui-vtyO-4]quit\n[Switch1]aaa  ## simple明文密码\n[Switch1-aaa]local-user admin password cipher Hello@123 ##配置用户名和密码，用户名不区分大小写，密码区分大小写\n[Switchi-aaa]local-useradmin privilege level 15 ## 将管理员的账号权限设置为巧\n[Swltchl-aaa]quit\n[Switchl]quit\n&lt;Switch1&gt;save ## 在用户视图下保存配置\n</code></pre>\n<h1 id=\"配置交换机端口隔离、速率、双工\"><a href=\"#配置交换机端口隔离、速率、双工\" class=\"headerlink\" title=\"配置交换机端口隔离、速率、双工\"></a>配置交换机端口隔离、速率、双工</h1><pre><code class=\"lang-powershell\">## 配置接口GEI/0/1和GEI/0/2的端口隔离功能，实现两个接囗之间的二层数据隔离，三层数据互通\n&lt;Switchl&gt;system-view\n[Switch1]port-isolate mode\n[Switch1]Interface gigabitethernet 1/0/1\n[Switch1-GigabitEthemet1/0/1]port-isolate enable group 1\n[Switch1-GigabitEthernet1/0/1]quit\n[Switch1]Interface gigabitethernet1/0/2\n[Switch1-GigabitEthemet1/0/2]port-isolate enable group 1\n[SwitchI-GigabitEthernet1/0/2]quit\n\n\n## 配置以太网接口GEO/0/1在自协商模式下协商速率为100Mb/s\n&lt;Switchl&gt;system-view\n[Switch1]interface gigabitethernet 0/0/1\n[Switchl-GigabitEthernet0/0/1]negotiation auto\n[Switch1-GigabitEthemet0/0/1]auto speed 100\n#配置以太网电接口GEO/0／1在自协商模式下双工模式为全双工模式\n&lt;Switchl&gt;system-view\n[Switchl]interfaceygabitethernet0/0／1\n[Switch1-GigabitEthemet0/0/1]negotiation auto\n</code></pre>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/Linux%E9%85%8D%E7%BD%AE/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/Linux%E9%85%8D%E7%BD%AE/",
            "title": "Linux配置",
            "date_published": "2021-04-19T07:26:03.000Z",
            "content_html": "<h1 id=\"LINUX网络配置\"><a href=\"#LINUX网络配置\" class=\"headerlink\" title=\"LINUX网络配置\"></a>LINUX网络配置</h1><h2 id=\"网络配置文件\"><a href=\"#网络配置文件\" class=\"headerlink\" title=\"网络配置文件\"></a>网络配置文件</h2><blockquote>\n<p>在Linux中，TCP\\IP网络是通过若干个文本文件进行配置的，系统在启动时通过读取一组有关网络配置的文件和脚本参数文件实现网络接口的初始化和控制；这些文件可以在系统运行时直接修改，更改后会立即生效。</p>\n</blockquote>\n<hr>\n<ol>\n<li><code>/etc/sysconfig/network-script/ifcfg-enoxxx</code> 文件。这是 个用来指定服务器上的网络配置信息的文件。其中常见的主要参数的含义说明如下:<pre><code class=\"lang-Bash\"> TYPE=Ethemet #网络接口类型\n BOOTPROTO=static #静态地址\n DEFROUTE=yes \n IPV4_FAILURE_FATAL=no\n IPV6INIT=yes  #是否支待 IPV6\n IPV6_AUTOCONF=yes \n IPV6_DEFROUTE=yes \n IPV6_FA _FATAL=no  \n NAME=enol6780032  #网卡名称\n UUID=l6c93842-a039-4da3-b88a-977ebl20lb3f \n ONBOOT=yes \n IPADDR0=10.0.252.198 #IP地址\n PREFIX0=24            #子网掩码\n GATEWAY0=10.0.252.254 #网关\n DNS1=61.134.1.4       # DNS地址\n HWADDR=00:50:56:95:23:CE  #物理地址\n IPV6_PEERDNS=yes \n IPV6_PEERROUTES=yes\n</code></pre>\n<ul>\n<li>配置完成后，需要使用 <code>systemctl restart network</code>命令重启网络服务</li>\n</ul>\n</li>\n</ol>\n<hr>\n<ol>\n<li><code>/etc/hostname</code> 文件，该文件包含了Linux系统的主机名</li>\n</ol>\n<pre><code class=\"lang-bash\">[root@redhat ~]       # vi /etc/hostname 修改配置文件的Redhat为Redhat-64，保存文件，然后重新登录，此时，主机名已经改变\n[root@redhet-64 ~]# hostnamectl status\n    Status hostname:redhat-64\n</code></pre>\n<ul>\n<li>此时表明静态主机名修改成功</li>\n<li>这个文件是在启动时从 <code>/etc/sysconfig/network</code> 的HOSTNAME行得到，用于在启动时设置系统的主机名</li>\n</ul>\n<hr>\n<ol>\n<li><code>/etc/resolv.conf</code> 文件。<code>/etc/resolv.conf</code> 文件配 DNS 客户，它包含了主机的域名搜索顺序和 DNS 服务器的地址，每一行应包含一个关键字和一个或多个由空格隔开的 下面是<br>个例子：<pre><code class=\"lang-bash\"> search mydomain.edu.cn \n nameserver 210.34.0.14 \n nameserver 210.34.0.13\n</code></pre>\n</li>\n</ol>\n<ul>\n<li><strong>常用参数及其意义说明如下。</strong><ul>\n<li><code>nameserver</code>: 表明 DNS 服务器的 IP 地址。 ==可以有很多行的nameserver== , 每一个带一个IP 地址。在查询时就按 nameserver 在本文件中的顺序进行，且只有当第一个nameserver 没有反应时才查询下面的 nameserver</li>\n<li><code>domain</code>: ==声明主机的域名== 。很多程序用到它，如邮件系统，当为没有域名的主机进行DNS 查询时也要用到 如果没有域名，主机名将被使用，删除所有在第一个点（.）前面的内容</li>\n<li><code>search</code>: 它的多个参数指明域名的查询顺序。当要查询没有域名的主机时，主机将在search 声明的域中分别查找。 ==domain和search 不能共存==</li>\n<li><code>sortlist</code>: 允许将得到的域名结果进行特定的排序。它的参数为网络／掩码对， 允许任意的排列顺序。在 Red Hat Linux 中没有提供默认的<code>/etc/resolv.conf</code>文件，它的内容是根据在安装时给出的选项 ==动态创建的==</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"安装网卡\"><a href=\"#安装网卡\" class=\"headerlink\" title=\"安装网卡\"></a>安装网卡</h2><blockquote>\n<p>网卡的驱动程序是作为模块加载到内核中去的。所有Linux 支待的网卡驱动程序都是存放在目录<code>/lib/modules/ (Linux版本号）net/</code>下，可以通过修改模块配置文件来更换网卡或者增加网卡。</p>\n</blockquote>\n<h2 id=\"网络配置命令\"><a href=\"#网络配置命令\" class=\"headerlink\" title=\"网络配置命令\"></a>网络配置命令</h2><h3 id=\"ifconfig\"><a href=\"#ifconfig\" class=\"headerlink\" title=\"ifconfig\"></a>ifconfig</h3><ul>\n<li>Linux 系统中通过 <code>ifconfig</code> 命令进行指定网络接口的<br>TCP/IP 网络参数设置。执行 <code>ifconfig</code> 配置命令后，系统将在内核表中设置必要的网络参数，这样Linux 系统就知道如何与网络上的网卡通信了。基本命令格式如下：<pre><code class=\"lang-bash\">ifconfig Interface-name ip-address up/down\n</code></pre>\n</li>\n</ul>\n<h3 id=\"route\"><a href=\"#route\" class=\"headerlink\" title=\"route\"></a>route</h3><ul>\n<li>配置路由命令 <code>route</code> 。通常在系统使用 <code>ifconfig</code> 命令配置网络接口后，需用<code>route</code> 命令<br>设定主机或局域网的出口 IP 地址。 <code>route</code> 命令的调用参数复杂，它的主要功能是 ==管理 Linux<br>统内核中的路由表== 。 <code>route</code> 命令的基本格式如下。</li>\n</ul>\n<pre><code class=\"lang-bash\">    route [-f] [-p] [Command [Destination] [mask Netmask] [Gateway] [metric Metric]] [if Interface]]\n</code></pre>\n<h4 id=\"常用参数及其说明：\"><a href=\"#常用参数及其说明：\" class=\"headerlink\" title=\"常用参数及其说明：\"></a>常用参数及其说明：</h4><ul>\n<li><code>-c</code> 显示更多信息</li>\n<li><code>-n</code> 不解析名字</li>\n<li><code>-v</code> 显示详细的处理信息</li>\n<li><code>-F</code> 显示发送信息</li>\n<li><code>-C</code> 显示路由缓存</li>\n<li><code>-f</code> 清除所有网关入口的路由表。 </li>\n<li><code>-p</code> 与 add 命令一起使用时使路由具有永久性。</li>\n</ul>\n<hr>\n<ul>\n<li><p><code>add</code> :添加一条新路由。</p>\n</li>\n<li><p><code>del</code>:删除一条路由。</p>\n</li>\n<li><p><code>-net</code>:目标地址是一个网络。</p>\n</li>\n<li><p><code>-host</code>:目标地址是一个主机。</p>\n</li>\n<li><p><code>netmask</code>:当添加一个网络路由时，需要使用网络掩码。</p>\n</li>\n<li><p><code>gw</code>:路由数据包通过网关。注意，你指定的网关必须能够达到。</p>\n</li>\n<li><p><code>metric</code>：设置路由跳数。</p>\n</li>\n<li><p><code>Command</code>: 指定您想运行的命令 (Add/Change/Delete/Print)。 </p>\n</li>\n<li><p><code>Destination</code>: 指定该路由的网络目标。 </p>\n</li>\n<li><p><code>mask Netmask:</code> 指定与网络目标相关的网络掩码（也被称作子网掩码）。 </p>\n</li>\n<li><p><code>Gateway</code> 指定网络目标定义的地址集和子网掩码可以到达的前进或下一跃点 IP 地址。 </p>\n</li>\n<li><p><code>metric Metric</code> :为路由指定一个整数成本值标（从 1 至 9999），当在路由表(与转发的数据包目标地址最匹配)的多个路由中进行选择时可以使用。 </p>\n</li>\n<li><p><code>if Interface:</code> 为可以访问目标的接口指定接口索引。若要获得一个接口列表和它们相应的接口索引，使用 route print 命令的显示功能。可以使用十进制或十六进制值进行接口索引。</p>\n</li>\n</ul>\n<h3 id=\"ping\"><a href=\"#ping\" class=\"headerlink\" title=\"ping\"></a>ping</h3><ul>\n<li><code>ping</code> 命令是常用的网络命令，它通常 ==用来测试与目标主机的连通性== ，我们经常会说“ping一下某机器，看是不是开着”、不能打开网页时会说“你先ping网关地址192.168.1.1试试”。它通过发送ICMP ECHO_REQUEST数据包到网络主机（<code>send ICMP ECHO_REQUEST to network hosts</code>），并显示响应情况，这样我们就可以根据它输出的信息来确定目标主机是否可访问（但这不是绝对的）。</li>\n<li>标准的命令格式：</li>\n</ul>\n<pre><code class=\"lang-bash\">    ping [参数] [主机名或IP地址]\n</code></pre>\n<h4 id=\"命令功能\"><a href=\"#命令功能\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li><code>ping</code> 命令用于： ==确定网络和各外部主机的状态；跟踪和隔离硬件和软件问题；测试、评估和管理网络== 。如果主机正在运行并连在网上，它就对回送信号进行响应。</li>\n<li><code>ping</code> 命令每秒发送一个数据报并且为每个接收到的响应打印一行输出。ping 命令计算信号往返时间和(信息)包丢失情况的统计信息，并且在完成之后显示一个简要总结。ping 命令在程序超时或当接收到 SIGINT 信号时结束。Host 参数或者是一个有效的主机名或者是因特网地址。</li>\n</ul>\n<h4 id=\"相关参数\"><a href=\"#相关参数\" class=\"headerlink\" title=\"相关参数\"></a>相关参数</h4><ul>\n<li><code>-d</code> 使用Socket的SO_DEBUG功能。</li>\n<li><code>-f</code>  极限检测。大量且快速地送网络封包给一台机器，看它的回应。</li>\n<li><code>-n</code> 只输出数值。</li>\n<li><code>-q</code> 不显示任何传送封包的信息，只显示最后的结果。</li>\n<li><code>-r</code> 忽略普通的Routing Table，直接将数据包送到远端主机上。通常是查看本机的网络接口是否有问题。</li>\n<li><code>-R</code> 记录路由过程。</li>\n<li><code>-v</code> 详细显示指令的执行过程。</li>\n<li><code>&lt;p&gt;-c</code> 数目：在发送指定数目的包后停止。</li>\n<li><code>-i</code> 秒数：设定间隔几秒送一个网络封包给一台机器，预设值是一秒送一次。</li>\n<li><code>-I</code> 网络界面：使用指定的网络界面送出数据包。</li>\n<li><code>-l</code> 前置载入：设置在送出要求信息之前，先行发出的数据包。</li>\n<li><code>-p</code> 范本样式：设置填满数据包的范本样式。</li>\n<li><code>-s</code> 字节数：指定发送的数据字节数，预设值是56，加上8字节的ICMP头，一共是64ICMP数据字节。</li>\n<li><code>-t</code> 存活数值：设置存活数值TTL的大小。</li>\n</ul>\n<h3 id=\"netstat\"><a href=\"#netstat\" class=\"headerlink\" title=\"netstat\"></a>netstat</h3><ul>\n<li><code>netstat</code>命令 ==用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况== 。netstat是在内核中访问网络及相关信息的程序，它能提供TCP连接，TCP和UDP监听，进程内存管理的相关报告。</li>\n<li>标准的命令格式：</li>\n</ul>\n<pre><code class=\"lang-bash\">    netstat [-acCeFghilMnNoprstuvVwx][-A&lt;网络类型&gt;][--ip]\n</code></pre>\n<h4 id=\"相关参数-1\"><a href=\"#相关参数-1\" class=\"headerlink\" title=\"相关参数\"></a>相关参数</h4><ul>\n<li><code>-a</code>或<code>–all</code> 显示所有连线中的Socket。</li>\n<li><code>-A&lt;网络类型&gt;</code>或<code>–&lt;网络类型&gt;</code> 列出该网络类型连线中的相关地址。</li>\n<li><code>-c</code>或<code>–continuous</code> 持续列出网络状态。</li>\n<li><code>-C</code>或<code>–cache</code> 显示路由器配置的快取信息。</li>\n<li><code>-e</code>或<code>–extend</code> 显示网络其他相关信息。</li>\n<li><code>-F</code>或<code>–fib</code> 显示FIB。</li>\n<li><code>-g</code>或<code>–groups</code> 显示多重广播功能群组组员名单。</li>\n<li><code>-h</code>或<code>–help</code> 在线帮助。</li>\n<li><code>-i</code>或<code>–interfaces</code> 显示网络界面信息表单。</li>\n<li><code>-l</code>或<code>–listening</code> 显示监控中的服务器的Socket。</li>\n<li><code>-M</code>或<code>–masquerade</code> 显示伪装的网络连线。</li>\n<li><code>-n</code>或<code>–numeric</code> 直接使用IP地址，而不通过域名服务器。</li>\n<li><code>-N</code>或<code>–netlink</code>或<code>–symbolic</code> 显示网络硬件外围设备的符号连接名称。</li>\n<li><code>-o</code>或<code>–timers</code> 显示计时器。</li>\n<li><code>-p</code>或<code>–programs</code> 显示正在使用Socket的程序识别码和程序名称。</li>\n<li><code>-r</code>或<code>–route</code> 显示Routing Table。</li>\n<li><code>-s</code>或<code>–statistice</code> 显示网络工作信息统计表。</li>\n<li><code>-t</code>或<code>–tcp</code> 显示TCP传输协议的连线状况。</li>\n<li><code>-u</code>或<code>–udp</code> 显示UDP传输协议的连线状况。</li>\n<li><code>-v</code>或<code>–verbose</code> 显示指令执行过程。</li>\n<li><code>-V</code>或<code>–version</code> 显示版本信息。</li>\n<li><code>-w</code>或<code>–raw</code> 显示RAW传输协议的连线状况。</li>\n<li><code>-x</code>或<code>–unix</code> 此参数的效果和指定”-A unix”参数相同。</li>\n<li><code>–ip</code>或<code>–inet</code> 此参数的效果和指定”-A inet”参数相同。</li>\n</ul>\n<h1 id=\"LINUX文件与目录管理\"><a href=\"#LINUX文件与目录管理\" class=\"headerlink\" title=\"LINUX文件与目录管理\"></a>LINUX文件与目录管理</h1><h2 id=\"Linux文件组织和结构\"><a href=\"#Linux文件组织和结构\" class=\"headerlink\" title=\"Linux文件组织和结构\"></a>Linux文件组织和结构</h2><h3 id=\"LINUX文件组织\"><a href=\"#LINUX文件组织\" class=\"headerlink\" title=\"LINUX文件组织\"></a>LINUX文件组织</h3><ul>\n<li><strong>文件系统组织</strong> 是指 ==文件存在的物理空间== ，Linux 系统中的每个分区都是一个文件系统，都有自己的目录层次结构，Linux 将这些分属不同分区的、单独的文件系统按一定的方式形成个系统的总目录层次结构。</li>\n<li>LINUX 文件系统 ==使用索引节点来记录文件信息== ，作用与 Windows 的文件分配表类似。索引节点是数据结构，它包一个文件的文件名、位置、大小、建立或修改时间、访问权限、所属关系等文件控制信息。</li>\n<li>对于每个文件都有一个唯一的索引节点号与之对应，而对于一个索引节点号，却可以有多个文件名与之对应 。因此， 在磁盘上的同一个文件可以通过不同的路径去访问它。 Linux 操作系统可以用 1n 命令对一个已经存在的文件再建立一个新的连接，而不复制文件的内容 。连接有软连接和硬连接之分，软连接又叫符号连接。</li>\n</ul>\n<h3 id=\"LINUX文件结构\"><a href=\"#LINUX文件结构\" class=\"headerlink\" title=\"LINUX文件结构\"></a>LINUX文件结构</h3><ul>\n<li>Linux 文件系统 ==采用多级目录的树型层次结构== 管理文件。树型结构的 ==最上层是根目录== ，用”/“表示，其他的所有目录都是从根目录出发生成的。 Linux 将所有的软件、硬件都作为文件来管理，每个文件被保存在目录中</li>\n<li>微软的 DOS Windows 也是采用树型结构，但是在 DOS Windows 中这样的树型结构的根是磁盘分区的盘符， 有几个分区就有几个树型结构，它们之间的关系是并列的。而在LINUX中， ==不管操作系统管理多少个磁盘分区，这样的目录树都只有一个== </li>\n</ul>\n<h3 id=\"LINUX文件挂载\"><a href=\"#LINUX文件挂载\" class=\"headerlink\" title=\"LINUX文件挂载\"></a>LINUX文件挂载</h3><ul>\n<li><strong>所谓挂载</strong> ：就是将一个文件系统的顶层目录挂到另一个文件系统的子目录上，使它们成为一个整体，上一层文件系统的子目录就称为挂载点。这里要注意以下两个间题<ol>\n<li>挂载点必须是一个目录，而不能是一个文件。</li>\n<li>一个分区挂载在一个已存在的目录上，这个目录可以不为空，但挂载后这个目录下以前的内容将不可用。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"Linux文件类型和访问权限\"><a href=\"#Linux文件类型和访问权限\" class=\"headerlink\" title=\"Linux文件类型和访问权限\"></a>Linux文件类型和访问权限</h2><h3 id=\"文件名与文件类型\"><a href=\"#文件名与文件类型\" class=\"headerlink\" title=\"文件名与文件类型\"></a>文件名与文件类型</h3><ul>\n<li>是由字母、数字、下划线、圆点组成， 最大的长度是 255 个字符</li>\n<li>Linux包括五种基本文件类型：<ul>\n<li><strong>普通文件</strong> ：计算机用户和操作系统 ==用于存放数据、程序等信息的文件== ，一般又分为文本文件和二进制文件，例如C语言源代码、 Shell 脚本、二进制的可执行文件等。</li>\n<li><strong>目录文件</strong> ： 目录文件是文件系统中一个目录所包含的目录项组成的文件，包括文件名、子目录名及其指针。用户进程可以读取目录文件，但不能对它们进行修改。</li>\n<li><strong>链接文件</strong> ：链接文件又称符号链接文件， ==通过在不同的文件系统之间建立链接关系来实现对文件的访间== ，它提供了共享文件的一种方法。</li>\n<li><strong>设备文件</strong> ：在Linux 系统中， ==把每一种I/O设备都映射成为一个设备文件，可以像普通文件一样处理== ，这就使得文件与设备的操作尽可能统一.</li>\n<li><strong>管道文件</strong> ： ==主要用于在进程间传递数据== 。 Linux对管道的操作与文件操作相同，它把管道作为文件进行处理 。管道文件又称先进先出 (FIFO) 文件。<blockquote>\n<p>从对文件内容处理的角度而言 ，无论是哪种类型的文件， Linux <strong>都把它们看作是无结构的流式文件</strong> ，即把文件的内容看作是一系列有序的字符</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"文件和目录访问权限\"><a href=\"#文件和目录访问权限\" class=\"headerlink\" title=\"文件和目录访问权限\"></a>文件和目录访问权限</h3><ul>\n<li><strong>Linux对文件访问的三级权限</strong><ul>\n<li>文件所有者</li>\n<li>与文件所有者同组的用户</li>\n<li>其他用户</li>\n</ul>\n</li>\n<li><strong>Linux对文件的访问设定了三级权限</strong><ul>\n<li>读取</li>\n<li>写入</li>\n<li>执行</li>\n</ul>\n</li>\n</ul>\n<hr>\n<blockquote>\n<p>当用 <code>ls -l</code>命令显示文件后目录的详细信息时，每一个文件或目录的列表信息分为4个部分，其中最左边的一位是第一部分，标识Linux操作系统的文件类型，其余三部分是三组访问权限，每组用三位表示，如下图：</p>\n</blockquote>\n<p> <img data-src=\"https://z3.ax1x.com/2021/04/19/cTgL7T.png\" alt=\"wjlx\"></p>\n<ul>\n<li>在默认状态下，系统将创建的普通文件的权限设置为 <code>-rw-r-r--</code>，即文件所有者对该文件可读可写（rw），而同组用户和其他用户都只可读；同样，在默认配置中，将每一个用户所有者目录的权限都设置为 <code>drwx------</code>，即只有文件所有者对该目录可读、可写和可查询（rwx），即用户不能读取其他用户目录中的内容</li>\n</ul>\n<h2 id=\"Linux文件和目录操作命令\"><a href=\"#Linux文件和目录操作命令\" class=\"headerlink\" title=\"Linux文件和目录操作命令\"></a>Linux文件和目录操作命令</h2><h3 id=\"cat\"><a href=\"#cat\" class=\"headerlink\" title=\"cat\"></a>cat</h3><ul>\n<li>cat命令的用途是连接文件或标准输入并打印。这个命令常用来显示文件内容，或者将几个文件连接起来显示，或者从标准输入读取内容并显示，它常与重定向符号配合使用。</li>\n</ul>\n<h4 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">cat [选项] [文件]...\n</code></pre>\n<h4 id=\"cat三大功能\"><a href=\"#cat三大功能\" class=\"headerlink\" title=\"cat三大功能\"></a>cat三大功能</h4><ol>\n<li><p>一次显示整个文件:<code>cat filename</code></p>\n</li>\n<li><p>从键盘创建一个文件:<code>cat &gt; filename</code> 只能创建新文件,不能编辑已有文件.</p>\n</li>\n<li><p>将几个文件合并为一个文件:<code>cat file1 file2 &gt; file</code></p>\n</li>\n</ol>\n<h4 id=\"命令参数\"><a href=\"#命令参数\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><code>-A</code>, <code>--show-all</code>           等价于 -vET</li>\n<li><code>-b</code>, <code>--number-nonblank</code>    对非空输出行编号</li>\n<li><code>-e</code>                       等价于 -vE</li>\n<li><code>-E</code>, <code>--show-ends</code>          在每行结束处显示 $</li>\n<li><code>-n</code>, <code>--number</code>     对输出的所有行编号,由1开始对所有输出的行数编号</li>\n<li><code>-s</code>, <code>--squeeze-blank</code>  有连续两行以上的空白行，就代换为一行的空白行 </li>\n<li><code>-t</code>                       与 -vT 等价</li>\n<li><code>-T</code>, <code>--show-tabs</code>         将跳格字符显示为 ^I</li>\n<li><code>-u</code>                       (被忽略)</li>\n<li><code>-v</code>, <code>--show-nonprinting</code>   使用 ^ 和 M- 引用，除了 LFD 和 TAB 之外</li>\n</ul>\n<hr>\n<h3 id=\"more\"><a href=\"#more\" class=\"headerlink\" title=\"more\"></a>more</h3><ul>\n<li><code>more</code>命令，功能类似 <code>cat</code> ，<code>cat</code>命令是整个文件的内容从上到下显示在屏幕上。 <code>more</code>会 ==以一页一页的显示方便使用者逐页阅读== ，而最基本的指令就是按空白键（space）就往下一页显示，按 <code>b</code> 键就会往回（back）一页显示，而且还有搜寻字串的功能 。<code>more</code>命令从前向后读取文件，因此在启动时就加载整个文件。</li>\n</ul>\n<h4 id=\"命令格式-1\"><a href=\"#命令格式-1\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">  more [-dlfpcsu ] [-num ] [+/ pattern] [+ linenum] [file ... ]\n</code></pre>\n<h4 id=\"命令功能-1\"><a href=\"#命令功能-1\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li><code>more</code>命令和<code>cat</code>的功能一样都是查看文件里的内容，但有所不同的是<code>more</code>  ==可以按页来查看文件的内容，还支持直接跳转行等功能==</li>\n</ul>\n<h4 id=\"命令参数-1\"><a href=\"#命令参数-1\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><code>+n</code>       从笫n行开始显示</li>\n<li><code>-n</code>        定义屏幕大小为n行</li>\n<li><code>+/pattern</code> 在每个档案显示前搜寻该字串（pattern），然后从该字串前两行之后开始显示  </li>\n<li><code>-c</code>       从顶部清屏，然后显示</li>\n<li><code>-d</code>       提示“Press space to continue，’q’ to quit（按空格键继续，按q键退出）”，禁用响铃功能</li>\n<li><code>-l</code>        忽略Ctrl+l（换页）字符</li>\n<li><code>-p</code>       通过清除窗口而不是滚屏来对文件进行换页，与-c选项相似</li>\n<li><code>-s</code>       把连续的多个空行显示为一行</li>\n<li><code>-u</code>       把文件内容中的下画线去掉</li>\n</ul>\n<hr>\n<h3 id=\"less\"><a href=\"#less\" class=\"headerlink\" title=\"less\"></a>less</h3><ul>\n<li><code>less</code> 工具也是 ==对文件或其它输出进行分页显示的工具== ，应该说是linux正统查看文件内容的工具，功能极其强大。<code>less</code> 的用法比起 <code>more</code> 更加的有弹性。在使用<code>more</code> 的时候，我们并没有办法向前面翻， 只能往后面看，但若使用了<code>less</code> 时，就可以使用<code>[pageup] [pagedown]</code>等按键的功能来往前往后翻看文件，更容易用来查看一个文件的内容！除此之外，在 <code>less</code> 里头可以拥有更多的搜索功能，不止可以向下搜，也可以向上搜。<h4 id=\"命令格式-2\"><a href=\"#命令格式-2\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">less [参数]  文件\n</code></pre>\n<h4 id=\"命令功能-2\"><a href=\"#命令功能-2\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4></li>\n<li><code>less</code> 与 <code>more</code> 类似，但使用 <code>less</code> 可以随意浏览文件，而 <code>more</code> 仅能向前移动，却不能向后移动，而且 <code>less</code> 在查看之前不会加载整个文件。</li>\n</ul>\n<h4 id=\"命令参数-2\"><a href=\"#命令参数-2\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><code>-b</code> &lt;缓冲区大小&gt; 设置缓冲区的大小</li>\n<li><code>-e</code>  当文件显示结束后，自动离开</li>\n<li><code>-f</code>  强迫打开特殊文件，例如外围设备代号、目录和二进制文件</li>\n<li><code>-g</code>  只标志最后搜索的关键词</li>\n<li><code>-i</code>  忽略搜索时的大小写</li>\n<li><code>-m</code>  显示类似more命令的百分比</li>\n<li><code>-N</code>  显示每行的行号</li>\n<li><code>-o</code> &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来</li>\n<li><code>-Q</code>  不使用警告音</li>\n<li><code>-s</code>  显示连续空行为一行</li>\n<li><code>-S</code>  行过长时间将超出部分舍弃</li>\n<li><code>-x</code> &lt;数字&gt; 将“tab”键显示为规定的数字空格</li>\n<li><code>/字符串</code>：向下搜索“字符串”的功能</li>\n<li><code>?字符串</code>：向上搜索“字符串”的功能</li>\n<li><code>n</code>  重复前一个搜索（与 / 或 ? 有关）</li>\n<li><code>N</code>  反向重复前一个搜索（与 / 或 ? 有关）</li>\n<li><code>b</code>  向后翻一页</li>\n<li><code>d</code>  向后翻半页</li>\n<li><code>h</code>  显示帮助界面</li>\n<li><code>Q</code>  退出less 命令</li>\n<li><code>u</code>  向前滚动半页</li>\n<li><code>y</code>  向前滚动一行</li>\n<li><code>空格键</code> 滚动一行</li>\n<li><code>回车键</code> 滚动一页</li>\n<li><code>[pagedown]</code> ： 向下翻动一页</li>\n<li><code>[pageup]</code>：   向上翻动一页</li>\n</ul>\n<hr>\n<h3 id=\"cp\"><a href=\"#cp\" class=\"headerlink\" title=\"cp\"></a>cp</h3><ul>\n<li><code>cp</code>命令 ==用来复制文件或者目录== ，是Linux系统中最常用的命令之一。一般情况下，shell会设置一个别名，在命令行下复制文件时，如果目标文件已经存在，就会询问是否覆盖，不管你是否使用<code>-i</code>参数。但是如果是在shell脚本中执行<code>cp</code>时，没有<code>-i</code>参数时不会询问是否覆盖。这说明命令行和shell脚本的执行方式有些不同。</li>\n</ul>\n<h4 id=\"命令格式-3\"><a href=\"#命令格式-3\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">       cp [选项]... [-T] 源文件 目的文件\n\n       或：cp [选项]... 源... 目录\n\n       或：cp [选项]... -t 目录 源...\n</code></pre>\n<h4 id=\"命令功能-3\"><a href=\"#命令功能-3\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li>将源文件复制至目标文件，或将多个源文件复制至目标目录。</li>\n<li>目标文件是普通文件，会询问是否要覆盖它</li>\n<li>目标文件如果不存在，则会执行正常的复制操作</li>\n</ul>\n<h4 id=\"命令参数：\"><a href=\"#命令参数：\" class=\"headerlink\" title=\"命令参数：\"></a>命令参数：</h4><ul>\n<li><code>-a</code>, <code>--archive</code>   等于<code>-dR --preserve=all</code><pre><code>--backup[=CONTROL    为每个已存在的目标文件创建备份\n</code></pre></li>\n<li><code>-d</code>,若目标文件为“链接文件”，则保留该“链接文件的属性”</li>\n<li><code>-f</code>, <code>--force</code>        如果目标文件无法打开则将其移除并重试(当 -n 选项存在时则不需再选此项)</li>\n<li><p><code>-i</code>, <code>--interactive</code>        覆盖前询问(使前面的 -n 选项失效)</p>\n</li>\n<li><p><code>-P</code>, <code>--no-dereference</code>   不跟随源文件中的符号链接</p>\n</li>\n<li><p><code>-p</code>                等于<code>--preserve=模式</code>,所有权,时间戳<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>--preserve</code>[=属性列表   保持指定的属性(默认：模式,所有权,时间戳)，如果可能保持附加属性：环境、链接、xattr 等</p>\n</li>\n<li><p><code>-R</code>, <code>-r</code>, <code>--recursive</code> 复制目录及目录内的所有项目</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"mv\"><a href=\"#mv\" class=\"headerlink\" title=\"mv\"></a>mv</h3><ul>\n<li>mv命令是move的缩写，可以 ==用来移动文件或者将文件改名== （move (rename) files），是Linux系统下常用的命令，经常 ==用来备份文件或者目录== </li>\n</ul>\n<h4 id=\"命令格式-4\"><a href=\"#命令格式-4\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">    mv [选项] 源文件或目录[目标路径|目标文件名]\n</code></pre>\n<h4 id=\"命令功能-4\"><a href=\"#命令功能-4\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li>视mv命令中第二个参数类型的不同（是目标文件还是目标目录），mv命令 ==将文件重命名或将其移至一个新的目录中== 。当第二个参数类型是文件时，mv命令完成文件重命名，此时，源文件只能有一个（也可以是源目录名），它将所给的源文件或目录重命名为给定的目标文件名。当第二个参数是已存在的目录名称时，源文件或目录参数可以有多个，mv命令将各参数指定的源文件均移至目标目录中。在跨文件系统移动文件时，mv先拷贝，再将原有文件删除，而链至该文件的链接也将丢失。</li>\n</ul>\n<h4 id=\"命令参数-3\"><a href=\"#命令参数-3\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><code>-b</code> ：若需覆盖文件，则覆盖前先行备份。 </li>\n<li><code>-f</code> ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；</li>\n<li><code>-i</code> ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！</li>\n<li><code>-u</code> ：若目标文件已经存在，且 source 比较新，才会更新(update)</li>\n<li><code>-t</code> ： <code>--target-directory</code>=<code>DIRECTORY move all SOURCE arguments into DIRECTORY</code>，即指定mv的目标目录，该选项适用于移多个源文件到一个目录的情况，此时目标目录在前，源文件在后。</li>\n</ul>\n<blockquote>\n<p>注意：<code>mv</code> <code>cp</code> 的结果不同。 <code>mv</code> 好像文件＂搬家”，文件个数并未增加；而 <code>cp</code> 对文件进行复制，文件个数增加了</p>\n</blockquote>\n<hr>\n<h3 id=\"rm\"><a href=\"#rm\" class=\"headerlink\" title=\"rm\"></a>rm</h3><ul>\n<li><p><code>rm</code> 是常用的命令，该命令的功能为==删除一个目录中的一个或多个文件或目录==，它也可以将某个目录及其下的所有文件及子目录均删除。 ==对于链接文件，只是删除了链接，原有文件均保持不变== 。</p>\n</li>\n<li><p><code>rm</code> 是一个危险的命令，使用的时候要特别当心，尤其对于新手，否则整个系统就会毁在这个命令（比如在/（根目录）下执行<code>rm * -rf</code>）。所以，我们在执行<code>rm</code>之前最好先确认一下在哪个目录，到底要删除什么东西，操作时保持高度清醒的头脑。</p>\n</li>\n</ul>\n<h4 id=\"命令格式-5\"><a href=\"#命令格式-5\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">  rm [选项] 文件…\n</code></pre>\n<h4 id=\"命令功能-5\"><a href=\"#命令功能-5\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li>删除一个目录中的一个或多个文件或目录，如果没有使用<code>-r</code>选项，则<code>rm</code>不会删除目录。如果使用<code>rm</code> 来删除文件，通常仍可以将该文件恢复原状。</li>\n</ul>\n<h4 id=\"命令参数-4\"><a href=\"#命令参数-4\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><code>-f</code>, <code>--force</code>    忽略不存在的文件，从不给出提示。</li>\n<li><code>-i</code>, <code>--interactive</code> 进行交互式删除</li>\n<li><code>-r</code>, <code>-R, --recursive</code>   指示rm将参数中列出的全部目录和子目录均递归地删除。</li>\n<li><code>-v</code>, <code>--verbose</code>    详细显示进行的步骤-<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <code>--help</code>     显示此帮助信息并退出-<br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <code>--version</code> 输出版本信息并退出</li>\n</ul>\n<hr>\n<h3 id=\"mkdir\"><a href=\"#mkdir\" class=\"headerlink\" title=\"mkdir\"></a>mkdir</h3><ul>\n<li>linux <code>mkdir</code> 命令用来创建指定的名称的目录，要求创建目录的用户在当前目录中具有写权限，并且指定的目录名不能是当前目录中已有的目录。</li>\n</ul>\n<h4 id=\"命令格式-6\"><a href=\"#命令格式-6\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">  mkdir [选项] 目录...\n</code></pre>\n<h4 id=\"命令功能-6\"><a href=\"#命令功能-6\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li>通过 <code>mkdir</code> 命令可以实现在指定位置创建以 DirName(指定的文件名)命名的文件夹或目录。要创建文件夹或目录的用户必须对所创建的文件夹的父文件夹具有写权限。并且，所创建的文件夹(目录)不能与其父目录(即父文件夹)中的文件名重名，即 ==同一个目录下不能有同名的(区分大小写)== 。 </li>\n</ul>\n<h4 id=\"命令参数-5\"><a href=\"#命令参数-5\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><code>-m</code>, <code>--mode</code>=模式，设定权限&lt;模式&gt; (类似 chmod)，而不是 rwxrwxrwx 减 umask</li>\n<li><code>-p</code>, <code>--parents</code>  可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,一次-以建立多个目录; </li>\n<li><p><code>-v</code>, <code>--verbose</code>  每次创建新目录都显示信息</p>\n<p>  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;    <code>--help</code>  显示此帮助信息并退出</p>\n<p>  &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;    <code>--version</code>  输出版本信息并退出</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"cd\"><a href=\"#cd\" class=\"headerlink\" title=\"cd\"></a>cd</h3><ul>\n<li>Linux <code>cd</code> 命令可以说是Linux中最基本的命令语句，其他的命令语句要进行操作，都是建立在使用 <code>cd</code> 命令上的。</li>\n</ul>\n<h4 id=\"命令格式-7\"><a href=\"#命令格式-7\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">  cd [目录名]\n</code></pre>\n<h4 id=\"命令功能-7\"><a href=\"#命令功能-7\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li>切换当前目录至dirNames</li>\n</ul>\n<h3 id=\"pwd\"><a href=\"#pwd\" class=\"headerlink\" title=\"pwd\"></a>pwd</h3><ul>\n<li><code>pwd</code>命令 ==用于显示用户当前所处的工作目录== ，当不太确定当前位置时，就会使用<code>pwd</code>来判定当前目录在文件系统内的确切位置。<h4 id=\"命令格式-8\"><a href=\"#命令格式-8\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\"> pwd [选项]\n</code></pre>\n</li>\n</ul>\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><ul>\n<li><code>ls</code>命令是linux下最常用的命令。<code>ls</code>命令就是list的缩写, ==缺省下<code>ls</code>用来打印出当前目录的清单== ;如果<code>ls</code>指定其他目录,那么就会显示指定目录里的文件及文件夹清单。 通过<code>ls</code> 命令不仅可以查看linux文件夹包含的文件,而且可以查看文件权限(包括目录、文件夹、文件权限)查看目录信息等等。</li>\n</ul>\n<h4 id=\"命令格式-9\"><a href=\"#命令格式-9\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">  ls [选项] [目录名|文件]\n</code></pre>\n<h4 id=\"命令功能-8\"><a href=\"#命令功能-8\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li>列出目标目录中所有的子目录和文件。</li>\n</ul>\n<h4 id=\"命令参数-6\"><a href=\"#命令参数-6\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><code>-a</code>, <code>–all</code>列出目录下的所有文件，包括以 . 开头的隐含文件</li>\n<li><code>-A</code>, 同<code>-a</code>，但不列出“.”(表示当前目录)和“..”(表示当前目录的父目录)。</li>\n<li><code>-c</code>,  配合 <code>-lt</code>：根据 ctime 排序及显示 ctime (文件状态最后更改的时间)配合 -l：显示 ctime 但根据名称排序否则：根据 ctime 排序</li>\n<li><code>-C</code>, 每栏由上至下列出项目</li>\n<li><code>-d</code>, <code>–directory</code> 将目录象文件一样显示，而不是显示其下的文件。</li>\n<li><code>-D</code>, <code>–dired</code> 产生适合 Emacs 的 dired 模式使用的结果</li>\n<li><code>-f</code>, 对输出的文件不进行排序，-aU 选项生效，-lst 选项失效</li>\n<li><code>-g</code>, 类似 <code>-l</code>,但不列出所有者</li>\n<li><code>-G</code>, <code>–no-group</code> 不列出任何有关组的信息</li>\n<li><code>-i</code>, <code>–inode</code> 印出每个文件的 inode 号</li>\n<li><code>-I</code>, <code>–ignore</code>=样式 不印出任何符合 shell 万用字符&lt;样式&gt;的项目</li>\n<li><code>-l</code>, 除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来。</li>\n</ul>\n<hr>\n<h3 id=\"chmod\"><a href=\"#chmod\" class=\"headerlink\" title=\"chmod\"></a>chmod</h3><ul>\n<li><code>chmod</code>命令用于 ==改变linux系统文件或目录的访问权限== 。用它 ==控制文件或目录的访问权限== 。该命令有两种用法。一种是包含字母和操作符表达式的文字设定法；另一种是包含数字的数字设定法。</li>\n<li>Linux系统中的每个文件和目录都有访问许可权限，用它来确定谁可以通过何种方式对文件和目录进行访问和操作。</li>\n</ul>\n<h4 id=\"命令格式-10\"><a href=\"#命令格式-10\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\">  chmod [-cfvR] [--help] [--version] mode file\n</code></pre>\n<h4 id=\"命令功能-9\"><a href=\"#命令功能-9\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li>用于改变文件或目录的访问权限，用它控制文件或目录的访问权限。</li>\n</ul>\n<h4 id=\"命令参数-7\"><a href=\"#命令参数-7\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><code>-c</code> ,若该档案权限确实已经更改，才显示其更改动作</li>\n<li><code>-V</code> ,显示权限变更的详细资料</li>\n<li><code>-R</code> ,对当前目录下的所有文件与子目录进行相同的权限变更</li>\n<li><code>-mode</code>,权限设定字符串</li>\n</ul>\n<hr>\n<h3 id=\"ln\"><a href=\"#ln\" class=\"headerlink\" title=\"ln\"></a>ln</h3><ul>\n<li><code>ln</code>是linux中又一个非常重要命令，它的功能是 ==为某一个文件在另外一个位置建立一个同步的链接== .当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在其它的目录下用<code>ln</code>命令链接（link）它就可以，不必重复的占用磁盘空间。</li>\n</ul>\n<h4 id=\"命令格式-11\"><a href=\"#命令格式-11\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h4><pre><code class=\"lang-bash\"> ln [参数][源文件或目录][目标文件或目录]\n</code></pre>\n<h4 id=\"命令功能-10\"><a href=\"#命令功能-10\" class=\"headerlink\" title=\"命令功能\"></a>命令功能</h4><ul>\n<li>Linux文件系统中，有所谓的链接(link)，我们可以将其视为档案的别名，而链接又可分为两种 : 硬链接(hard link)与软链接(symbolic link)，硬链接的意思是一个档案可以有多个名称，而软链接的方式则是产生一个特殊的档案，该档案的内容是指向另一个档案的位置。硬链接是存在同一个文件系统中，而软链接却可以跨越不同的文件系统。</li>\n</ul>\n<h4 id=\"命令参数-8\"><a href=\"#命令参数-8\" class=\"headerlink\" title=\"命令参数\"></a>命令参数</h4><ul>\n<li><strong>必要参数</strong> :<ul>\n<li><code>-b</code> 删除，覆盖以前建立的链接</li>\n<li><code>-d</code> 允许超级用户制作目录的硬链接</li>\n<li><code>-f</code> 强制执行</li>\n<li><code>-i</code> 交互模式，文件存在则提示用户是否覆盖</li>\n<li><code>-n</code> 把符号链接视为一般目录</li>\n<li><code>-s</code> 软链接(符号链接)</li>\n<li><code>-v</code> 显示详细的处理过程</li>\n</ul>\n</li>\n<li><strong>选择参数</strong> :<ul>\n<li><code>-S</code> “-S&lt;字尾备份字符串&gt; ”或 “<code>--suffix</code>=&lt;字尾备份字符串&gt;”</li>\n<li><code>-V</code> “-V&lt;备份方式&gt;”或“<code>--version-control</code>=&lt;备份方式&gt;”<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>--help</code> 显示帮助信息<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>--version</code> 显示版本信息</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"Linux用户和组管理\"><a href=\"#Linux用户和组管理\" class=\"headerlink\" title=\"Linux用户和组管理\"></a>Linux用户和组管理</h2><h3 id=\"用户管理概述\"><a href=\"#用户管理概述\" class=\"headerlink\" title=\"用户管理概述\"></a>用户管理概述</h3><ul>\n<li>在Linux中，每个文件和程序都必须属于某个用户，每个用户对应一个账号，其中， <strong>最重要的就是超级用户root</strong></li>\n<li><strong>超级用户root管理系统的一切任务，可控制所有的程序，访问所有的文件。Linux系统中的其他一些组群和用户都是由root来创建的</strong></li>\n</ul>\n<h4 id=\"用户和组群管理概念\"><a href=\"#用户和组群管理概念\" class=\"headerlink\" title=\"用户和组群管理概念\"></a>用户和组群管理概念</h4><ul>\n<li><strong>用户标识</strong> （UID）：系统中用来表示用户的数字</li>\n<li><strong>用户主目录</strong> ：也就是用户的起始工作目录，它是用户在登录系统后所在的目录，用户的文件都放在此处</li>\n<li><strong>登录Shell</strong> ：用户登录后启动以接收用户得到输入并执行输入相应命令的脚本程序，Shell是用户与Linux系统之间的接口</li>\n<li><strong>用户组/组群</strong> ：具有相似属性的多个用户被分配到一个组中</li>\n<li><strong>组标识</strong> （GID）：用来表示用户组的数字标识</li>\n</ul>\n<blockquote>\n<p>超级用户在系统中的用户ID和组ID都是0，普通用户的用户ID（UID）从500开始编号，并且默认属于与用户名同名的组，组ID也是从500开始编号</p>\n</blockquote>\n<h3 id=\"用户管理配置文件\"><a href=\"#用户管理配置文件\" class=\"headerlink\" title=\"用户管理配置文件\"></a>用户管理配置文件</h3><h4 id=\"etc-passwd文件\"><a href=\"#etc-passwd文件\" class=\"headerlink\" title=\"/etc/passwd文件\"></a>/etc/passwd文件</h4><ul>\n<li>/etc/passwd文件是Linux中 ==用于用户管理得到最重要文件，该文件对所有用户均可读== 。每个用户在该文件中都有一行对应的记录，每条记录都用冒号（:）分成7个域，记录了这个用户的基本属性，形式如下：</li>\n</ul>\n<pre><code class=\"lang-bash\">  用户名:加密的命令:用户ID(UID):组ID(GID):用户的全名或描述:登录目录:登录shell\n</code></pre>\n<ul>\n<li>用户ID（UID）对于的每个用户必须是 <strong>唯一的</strong>， 一般情况下，它与用户名是一一对应的</li>\n<li>==编号0是root用户的UID，编号1-99是系统保留的UID，100以上给用户做标识== 。</li>\n<li>Linux把每个用户看成一个数字，每个用户只有唯一的UID来识别，配置文件/etc/passwd给出了系统用户ID与用户名之间及其他信息的对应关系。</li>\n<li>由于/etc/passwd文件 <strong>对所有用户都可读</strong> ，所有现在的Linux系统都使用shadow技术，把真正加密后的用户口令字存放在/etc/shadow文件中，而在/etc/passwd文件的口令字段只存放一个特殊的字符，如x或“*”，并且该文件只有根用户可读，大大提高系统安全性</li>\n</ul>\n<h4 id=\"etc-shadow文件\"><a href=\"#etc-shadow文件\" class=\"headerlink\" title=\"/etc/shadow文件\"></a>/etc/shadow文件</h4><ul>\n<li>/etc/shadow文件是为了保证系统用户的安全性， ==建立的只有一个超级用户root才能读取的文件/etc/shadow== ，该文件包含了系统中所有用户及其口令等相关信息，用冒号(:)分层9个域，下面是其格式：<ol>\n<li>用户登录名</li>\n<li>用户加密后的口令（若为空，表示该用户不需口令即可登录；若为*好，表示该账号被禁止）</li>\n<li>从1970/1/1至口令最近一次被修改的天数</li>\n<li>口令在多少天内不能被用户修改</li>\n<li>口令在多少天后必须被修改</li>\n<li>口令过期多少天后用户账户被禁止</li>\n<li>口令在到期多少天内给用户发出警告</li>\n<li>口令自1970/1/1其被禁止的天数</li>\n<li>保留域</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"etc-group文件\"><a href=\"#etc-group文件\" class=\"headerlink\" title=\"/etc/group文件\"></a>/etc/group文件</h4><ul>\n<li>/etc/group文件。在Linux中，使用组来赋予同组的多个用户相同的文件访问权限。 <strong>一个用户也可以同时属于多个组</strong>，管理用户组的基本文件是/etc/group,与用户账户基本文件相似，每行记录用冒号（:）分成4个域，格式如下：</li>\n</ul>\n<pre><code class=\"lang-bash\">  用户组名:加密后的组口令:组ID:组成员列表\n</code></pre>\n<ul>\n<li>用户组sys在/etc/group中对应的记录行<pre><code class=\"lang-bash\">sys:x:3:root,bin,adm\n</code></pre>\n<ul>\n<li>其代表额信息包括系统中有一个称为sys的用户组，设有口令，组ID为3，组中成员有root,bin,adm</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"用户和组管理命令\"><a href=\"#用户和组管理命令\" class=\"headerlink\" title=\"用户和组管理命令\"></a>用户和组管理命令</h3><h4 id=\"用户管理\"><a href=\"#用户管理\" class=\"headerlink\" title=\"用户管理\"></a>用户管理</h4><ul>\n<li>作用是 ==通过建立一个合法的用户账户、设置后管理用户密码、修改用户的账户属性以及必要式删除已经废弃的用户账号==</li>\n<li>在Linux中增加一个用户就是在系统中创建一个新账号，然后给新账号分配用户号、用户组、主目录和登录shell等资源， ==在Linux中，只有具有超级用户root权限的用户才能创建新的用户== ， <strong>增加用户</strong> 的格式如下：</li>\n</ul>\n<pre><code class=\"lang-bash\">  adduser [-选项] username\n</code></pre>\n<ul>\n<li><strong>常用选项参数</strong><ul>\n<li><code>-d</code>,指定用于取代默认/home/username的用户主目录</li>\n<li><code>-g</code>,用户所属用户组的组名或组ID（用户组在指定前应该存在）</li>\n<li><code>-m</code>,若指定用户主目录不存在则创建</li>\n<li><code>-p</code>,使用crypt加密的口令</li>\n<li><code>-s</code>,指定用户登录shell，默认为/bin/bash</li>\n<li><code>-u uid</code>,指定用户的UID，它必须是唯一的且大于499</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>Linux出于安全考虑，每个用户除了用户名，还设置了登录系统的用户口令。当用户账号刚刚创建时没有口令，但是被系统锁定，不可用，必须为其指定口令后才可使用。</li>\n<li>超级用户可以为自己和其他用户指定口令，但普通用户只能修改自己的口令，passwd的格式如下</li>\n</ul>\n<pre><code class=\"lang-bash\">  passwd [-选项][username]\n</code></pre>\n<ul>\n<li><strong>常用参数说明</strong><ul>\n<li><code>-l</code>,锁定口令</li>\n<li><code>-u</code>,口令解锁</li>\n<li><code>-d</code>,使账号无口令</li>\n<li><code>-f</code>,强迫用户下次登录时修改口令</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>删除用户命令 <code>userdel</code> 的功能是系统中如果一个用户的账号不再使用，可以将其从系统中删除。删除一个用户的命令格式如下：<pre><code class=\"lang-bash\">userdel [-选项] username\n</code></pre>\n</li>\n<li>常用的参数选项是 <code>-r</code>, 它的作用是把用户的主目录一起删除。</li>\n<li>删除用户账号就是要将 /etc/passwd 等系统文件中的该用户记录删除，必要时还删除用户的目录，可以使用 “<code>userdel -r 用户名</code>”来实现这一目的;因此，完全删除一个用户包括:<ol>\n<li>删除 /etc/passwd 文件中此用户的记录；</li>\n<li>删除/etc/group 文件中该用户的信息；</li>\n<li>删除用户的主目录；</li>\n<li>删除用户所创建的或属于此用户的文件</li>\n</ol>\n</li>\n</ul>\n<hr>\n<ul>\n<li>用户在系统使用过程中可以随时使用 <code>SU</code> 命令来改变身份。例如，系统管理员在平时工作时可以用普通账号登录，在 要进行系统维护时用 <code>SU</code>命令获得 root 权限，之后为了安全再用<code>SU</code> 回到原账号。 <code>SU</code> 命令的一般格式如下：<pre><code class=\"lang-bash\">su [usermame]\n</code></pre>\n</li>\n<li><code>username</code> 是要切换到的用户名，如果不指定用户名，则默认将用户身份切换为 root, 系统会要求给出正确的口令。</li>\n</ul>\n<hr>\n<h4 id=\"用户组管理\"><a href=\"#用户组管理\" class=\"headerlink\" title=\"用户组管理\"></a>用户组管理</h4><ul>\n<li><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。默认 Linux下的用户属千与它同名的用户组，这个用户组在创建用户时同时创建。与用户管理相类似，用户组的管理包括组的增加、删除和修改，实际上就是通过修改 /etc/group 文件实现这些操作</p>\n</li>\n<li><p>Linux 系统中将一个新用户组加入系统的命令是 <code>groupadd</code> 。该命令的一般格式如下。</p>\n</li>\n</ul>\n<pre><code class=\"lang-bash\">  groupadd [-选项] groupname\n</code></pre>\n<ul>\n<li><strong>常用选项参数说明如下</strong><ul>\n<li><code>-g GID</code>: 指定用户组的 GID, 它必须是唯 的，且大于 499</li>\n<li><code>-r</code>: 创建小千 500 的系统用户组</li>\n<li><code>-f</code>: 若用户组已存在，退出并显示错误（原用户组不会被改变）。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><strong>删除一个用户组时要注意以下几点</strong><ol>\n<li>组中的文件不能自行删除，也不能自行改变文件所属的组；</li>\n<li>如果组是用户的基本组（即 etc passwd 文件中显示为该用户的组），则这个组无法删除；</li>\n<li>如果组中有用户在系统中处千登录状态则不能删除该组， 最好删除用户后再删除组。</li>\n</ol>\n</li>\n<li>修改用户组的属性使用 <code>groupmod</code> 命令，其格式如下。</li>\n</ul>\n<pre><code class=\"lang-bash\">  groupmod [-选项] groupname\n</code></pre>\n<ul>\n<li><strong>常用选项参数说明如下</strong><ul>\n<li><code>-g</code>: 为用户组指定新的组标识号</li>\n<li><code>-n</code>: 将用户组的名字改为新名字</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E4%B8%8E%E8%AE%BE%E8%AE%A1/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92%E4%B8%8E%E8%AE%BE%E8%AE%A1/",
            "title": "网络规划与设计",
            "date_published": "2021-03-25T09:13:25.000Z",
            "content_html": "<h1 id=\"综合布线技术\"><a href=\"#综合布线技术\" class=\"headerlink\" title=\"综合布线技术\"></a>综合布线技术</h1><blockquote>\n<p>结构化综合布线系统(<code>Structured Cabling System</code>，SCS)：是基于现代计算机技术的通信物理平台，集成了语音、数据、图像、多媒体的传输功能，消除了原有通信线路在传输介质上的差别。</p>\n</blockquote>\n<ul>\n<li><strong>结构化综合布线系统包括</strong> ：<ul>\n<li>建筑物综合布线系统（PDS）</li>\n<li>智能大厦布线系统（IBS）</li>\n<li>工业布线系统（IDS）</li>\n</ul>\n</li>\n<li>结构化综合布线系统应满足<ul>\n<li>==标准化、实用性、先进性、开放性以及结构化、层次化==。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"六大子系统\"><a href=\"#六大子系统\" class=\"headerlink\" title=\"六大子系统\"></a>六大子系统</h2><ul>\n<li><strong>工作区子系统</strong> ：<ul>\n<li>有终端到信息插座的整个区域。包括信息插座、跳线、适配器。</li>\n<li>要求：<ul>\n<li>==信息插座与电源插座保持在30．150cm的距离==。</li>\n<li>==信息插座据地面一般在30cm，面积为9平方米==。</li>\n<li>==UTP/STP布线距离为10m==。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><strong>水平子系统</strong> ：<ul>\n<li>各个楼层的接线间配线架到工作区信息插座之间的电缆构成。在结构化布线中，水平子系统==起支线作用==，它将用户端通过线缆连接至配线架上。</li>\n<li>==UTP/STP布线距离为90m==。</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>管理子系统</strong> ：</p>\n<ul>\n<li>对布线电缆进行端接和配线管理的子系统，通常设置在楼层的配线间内。由交联设备（双绞线配线架、光纤配线架）、集线器和交换机等交换设备组成</li>\n</ul>\n</li>\n<li><p><strong>干线子系统（垂直子系统）</strong> ：</p>\n<ul>\n<li>连接管理间和设备间的子系统。一般由多对数的光缆和双绞线组成。</li>\n<li>语音系统采用三类大对数双绞线，数据通信采用高品质五类双绞线也可以采用光缆。==布线距离光纤一般2000米，STP为800米，UTP为700米。建议每1．5米设置一个线缆支撑点==。</li>\n</ul>\n</li>\n<li><p><strong>设备间子系统</strong> ：</p>\n<ul>\n<li>用于安放网络关键设备。</li>\n<li>要求：<ul>\n<li>==湿度要求在20％．80％，温度20-30℃==。</li>\n<li>综合考虑配电、安全接地和消防等因素。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>建筑群子系统</strong> ：</p>\n<ul>\n<li>由连接楼群之间的通信传输介质和各种支持设备组成。==布线距离光纤一般2000米，STP为800米，UTP为700米==。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>综合布线测试参数:<br>双绞线: 最大衰减值、回波耗损限值、近端串扰衰减值、开路/短路、是否错对;<br>光纤: 最大衰减值、回波耗损限值、波长窗口参数、时延、长度;</p>\n</blockquote>\n<h1 id=\"网络分析与设计过程\"><a href=\"#网络分析与设计过程\" class=\"headerlink\" title=\"网络分析与设计过程\"></a>网络分析与设计过程</h1><ul>\n<li><p>网络生命周期至少包括==系统构思与计划运行和维护的过程==。常见的迭代周期分<br>为==四阶段周期、五阶段周期、六阶段周期。==</p>\n</li>\n<li><p><strong>四阶段周期</strong></p>\n<ul>\n<li>构思与计划阶段、构思与计划阶段、实施与构建阶段、运行和维护阶段。</li>\n</ul>\n</li>\n<li><strong>五阶段周期</strong><ul>\n<li>需求规范、通信规范、逻辑网络设计、物理网络设计、安装与维护。</li>\n</ul>\n</li>\n<li><strong>六阶段周期</strong><ul>\n<li>逻辑设计、物理设计、设计优化、实施及测试、监测及性能优化。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"网络系统建设\"><a href=\"#网络系统建设\" class=\"headerlink\" title=\"网络系统建设\"></a>网络系统建设</h1><ul>\n<li>根据五阶段迭代周期模型，网络系统建设可以被划分为以下五个阶段。<ul>\n<li>需求分析。</li>\n<li>现有网络体系分析，即通信规范分析。</li>\n<li>确定网络逻辑结构，即逻辑网络设计。</li>\n<li>确定网络物理结构，即物理网络设计。</li>\n<li>安装与维护</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h1><blockquote>\n<p>收集不同用户的网络需求，主要包括： <strong>业务需求、用户需求、应用需求、计算机平台需求、网络通信需求和未来需求</strong> 。需求分析产生一份==需求规范，需要管理者与设计者签字，这是规避网络建设风险的关键==。</p>\n</blockquote>\n<h2 id=\"现有网络体系分析\"><a href=\"#现有网络体系分析\" class=\"headerlink\" title=\"现有网络体系分析\"></a>现有网络体系分析</h2><blockquote>\n<p>主要目的是描述资源分布，以便在升级时保护已有的投资，该阶段给出一份通信规范说明文档作为下一阶段的输入。</p>\n<ul>\n<li><strong>主要包括</strong><ol>\n<li>现有网络拓扑结构。</li>\n<li>现有网络容量，新网络所需通信量和通信模式。</li>\n<li>详细统计数据，直接反映现有网络新能的测量值。</li>\n<li>Internet接囗以及广域网提供的服务质量报告</li>\n<li>限制因素列表，如电缆和设备清单。</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"确定网络逻辑结构\"><a href=\"#确定网络逻辑结构\" class=\"headerlink\" title=\"确定网络逻辑结构\"></a>确定网络逻辑结构</h1><blockquote>\n<p>根据需求规范和通信规范确定比较适宜的网络逻辑结构，并实施后续的资源分配规划、安全规划等内容，该阶段给出一份逻辑设计文档。</p>\n<ul>\n<li><strong>内容主要包括</strong><ol>\n<li>网络逻辑设计图。</li>\n<li>IP地址分配方案。</li>\n<li>安全管理方案。</li>\n<li>具体软硬件、广域网连接设备和基本网络服务</li>\n<li>照片和培训网络员工的具体说明</li>\n<li>如硬件费用、服务提供费用和培训费用的估算</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"确定网络物理结构\"><a href=\"#确定网络物理结构\" class=\"headerlink\" title=\"确定网络物理结构\"></a>确定网络物理结构</h1><blockquote>\n<p>对设备的具体物理分布、运行环境等的确定来使网络的物理连接符合逻辑设计要求，该阶段得到一份网络物理结构设计文档。</p>\n<ul>\n<li><strong>主要包括</strong><ol>\n<li>网络物理结构图和布线方案。</li>\n<li>设备和部件的详细列表清单。</li>\n<li>软硬件和安装费用估算。</li>\n<li>安装日程表、说明服务的时间和期限。</li>\n<li>安装后的测试计划。</li>\n<li>用户的培训计划。</li>\n</ol>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"安装与维护\"><a href=\"#安装与维护\" class=\"headerlink\" title=\"安装与维护\"></a>安装与维护</h1><blockquote>\n<p>第五个阶段又可分为两个小阶段：安装与维护。</p>\n<ul>\n<li><strong>安装</strong><br>根据前面的工程结果实施环境准备、设备安装调试的过程。<ul>\n<li>本阶段应输出如下<ol>\n<li>逻辑网络结构图和物理网络部署图。</li>\n<li>符合规范的设备连接图和布线图。</li>\n<li>运营维护记录和文档。</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><strong>维护</strong><ul>\n<li>网络安装完成后，接受用户的反馈意见和监控网络的运行，需要做大量的故障检测和故障恢复以及网络升级和性能优化等工作</li>\n</ul>\n</li>\n</ul>\n<p>在这五个阶段中，每个阶段都必须依据上一阶段成果，完成本阶段的规则</p>\n</blockquote>\n<h1 id=\"网络结构设计\"><a href=\"#网络结构设计\" class=\"headerlink\" title=\"网络结构设计\"></a>网络结构设计</h1><blockquote>\n<p>层次化网络设计经典的三层模型，是将网络分为核心、汇聚和接入层。</p>\n<h2 id=\"核心层\"><a href=\"#核心层\" class=\"headerlink\" title=\"核心层\"></a>核心层</h2><p>提供不同区域或者下层的高速连接和最优传输路径，主要设备是高端路由器或者交换机。</p>\n<ul>\n<li><strong>设计原则</strong><ul>\n<li>核心层是英特网的高速骨干，由于其重要性应采用==冗余组件==设计，使其具备高可靠性，能快涑适应变化。核心层拥有==高可靠性、高带宽和高吞吐率。尽量避免数据包过滤和策略路由等降低数据包转发处理的机制，已实现数据包的高速转发==。<h2 id=\"汇聚层\"><a href=\"#汇聚层\" class=\"headerlink\" title=\"汇聚层\"></a>汇聚层</h2>将网络业务连接到接入层，并且实施安全、流量负载和路由相关策略。主要设备是实现策略的路由器或者交换机。</li>\n</ul>\n</li>\n<li><strong>设计原则</strong><ul>\n<li>汇聚层时核心层与接入层的分界点，尽量将出于安全原因对资源的访问控制及出于性能原因对核心层的流量控制都在汇聚层实施。</li>\n<li><strong>汇聚层主要完成协议转换、策略路由、流量控制等</strong> 。<h2 id=\"接入层\"><a href=\"#接入层\" class=\"headerlink\" title=\"接入层\"></a>接入层</h2>为终端用户访问网络提供接入。主要设备是低端交换机</li>\n</ul>\n</li>\n<li><strong>设计原则</strong><ul>\n<li>接入层主要解决相邻用户之间的互访，为这些互访提供丰富的接囗类型及足够的带宽。同时还负责一些==用户管理功能==（如地址认证、用户认证、计费理）和==用户信息收集==（IP与MAC绑定、访问日志）工作。</li>\n<li>除此之外辑网络设计还应包括以下内容：物理层技术设计、局域网技术选择及应用、广域网技术选择及应用、地址设计和命名模型、路由协议选择、网络管理、网络安全、逻辑网络设计文档。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"物理网络设计\"><a href=\"#物理网络设计\" class=\"headerlink\" title=\"物理网络设计\"></a>物理网络设计</h1><ul>\n<li>物理网络设计主要包含以下几方面：<ul>\n<li>PDS综合布线系统</li>\n<li>布线系统设备清单</li>\n<li>机房设计</li>\n<li>物理设计（工程概述、物理设计图标、资产说明、最终费用估算）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"网络安全设计原则：\"><a href=\"#网络安全设计原则：\" class=\"headerlink\" title=\"网络安全设计原则：\"></a>网络安全设计原则：</h2><ul>\n<li><strong>从工程技术角度，网络安全应设计遵循以下原则</strong><ol>\n<li>信息安全与保密的“木桶原则“。==强调对信息均衡、全面地进行安全保护==。充分、全面、完整的对系统的安全漏洞和安全威胁进行分析、评估和检测使设计网络安全系统的必要前提条件。</li>\n<li>安全系统的整体性原则。强调安全防护、检测和应急恢复。要求在网络发生被攻击情况下，尽快的恢复信息中心的服务，减少损失。</li>\n<li>安全系统的有效性和实用性原则。网络安全以不影响正常运行和合法用户的操作活动为前提。</li>\n<li>安全系统的”等级性“原则。良好的安全系统必须划分不同的等级。</li>\n<li>自主和可控性原则。网络安全产不能依赖国外进口产。</li>\n<li>安全有价原则。考虑网络安全问题解决方案时之须考虑性能和价格的平衡。不同的网络安全侧重点不同。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"网络设备选型原则：\"><a href=\"#网络设备选型原则：\" class=\"headerlink\" title=\"网络设备选型原则：\"></a>网络设备选型原则：</h2><ol>\n<li>尽可能选择同一厂家产品。这样的设备在互连性、协议的互操作性、技术支持和亻介格等方面有优势。</li>\n<li>主干设备应考虑预留一定的扩展能力，低端设备够用即可。</li>\n<li>根据方案实际选型。根据网络实际带宽性能需求、端囗类型和端囗密度选型。如果旧网改造，应尽可能保留用户原有网络投资，减少在资全投入的浪费。</li>\n<li>选择性价比高、质量过硬的产品。</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%90%84%E9%87%8D%E7%82%B9%E5%8D%8F%E8%AE%AE%E5%8F%8A%E5%B8%A7%E6%A0%BC%E5%BC%8F%E8%AF%A6%E8%A7%A3/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%90%84%E9%87%8D%E7%82%B9%E5%8D%8F%E8%AE%AE%E5%8F%8A%E5%B8%A7%E6%A0%BC%E5%BC%8F%E8%AF%A6%E8%A7%A3/",
            "title": "各重点协议及帧格式详解",
            "date_published": "2021-03-17T14:05:55.000Z",
            "content_html": "<h1 id=\"常见重点协议及帧格式\"><a href=\"#常见重点协议及帧格式\" class=\"headerlink\" title=\"常见重点协议及帧格式\"></a>常见重点协议及帧格式</h1><h2 id=\"01-nbsp-HDLC协议\"><a href=\"#01-nbsp-HDLC协议\" class=\"headerlink\" title=\"01&nbsp;HDLC协议\"></a>01&nbsp;HDLC协议</h2><h3 id=\"HDLC定义\"><a href=\"#HDLC定义\" class=\"headerlink\" title=\"HDLC定义\"></a>HDLC定义</h3><ul>\n<li>HDLC 协议的全称是==高级链路控制协议（High Level Data Link Control）==，是一种在网上同步传输数据，<font color=blue>面向比特的数据链路层协议</font>，广泛用于公用数据网， <strong>支持全双工或半双工传输</strong> ，使用后退 N 帧 ARQ 流控方案。</li>\n<li>HDLC 定义了 3 种类型的站（主站、从站、复合站），两种链路配置（不平衡配置、平衡配置），3种数据传输方式（NRM(正常响应模式)、ABM(异步平衡模式)、ARM(异步响应模式)）。<h3 id=\"主要功能\"><a href=\"#主要功能\" class=\"headerlink\" title=\"主要功能\"></a>主要功能</h3></li>\n<li><font color=red>流量控制</font><h3 id=\"限制条件\"><a href=\"#限制条件\" class=\"headerlink\" title=\"限制条件\"></a>限制条件</h3></li>\n</ul>\n<ol>\n<li>只支持点对点连接</li>\n<li>只可工作与同步方式</li>\n<li>不支持验证</li>\n<li><p>不支持IP地址协商</p>\n<h3 id=\"帧格式\"><a href=\"#帧格式\" class=\"headerlink\" title=\"帧格式\"></a>帧格式</h3><p><img data-src=\"https://s3.ax1x.com/2021/03/18/6g7Rfg.png\" alt=\"hdlcxy\"></p>\n</li>\n</ol>\n<ul>\n<li><strong>帧标志F</strong> ：<ul>\n<li>HDLC 用一种特殊的位模式 <code>01111110</code> 作为标志以确定帧的边界，采用位填充技术来区分是标志字段还是数据字段，发送站的数据比特序列一旦发现 0 后有 5 个 1，则在第 7 位插入 0。</li>\n</ul>\n</li>\n<li><strong>地址字段A</strong> :<ul>\n<li>地址字段用于标识从站的地址，用在点对多点的链路中，地址通常是 8 位长。</li>\n</ul>\n</li>\n<li><p><strong>控制字段C</strong> ：</p>\n<ul>\n<li>帧编号 N(S),捎带的肯定应答序号 N(R),PF 位，P 询问、F 终止</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/18/6g7hlj.png\" alt=\"czzd\"></p>\n</li>\n<li><p><strong>帧校验序列FCS</strong> ：</p>\n<ul>\n<li>含有除标志字段之外的所有其他字段的校验和。通常使用 16 比特的 CRC-CCITT<br><br><script type=\"math/tex\">G(x)=X^{16}+X^{12}+X^5+1</script>标准产生校验序列，有时也采用 CRC-32 产生 32 位的校序列。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-nbsp-X-25的帧格式及协议\"><a href=\"#02-nbsp-X-25的帧格式及协议\" class=\"headerlink\" title=\"02&nbsp;X.25的帧格式及协议\"></a>02&nbsp;X.25的帧格式及协议</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ul>\n<li>X.25 是 CCITT 公布的<font color=blue>用于连接数据终端至分组交换数据网络</font>的推荐标准，==X.25是一个面向连接的接口==，采用虚电路传递数据分组至网络上的适当终点处。</li>\n<li>在 X.25 的网络中，用户的计算机终端设备将与分组/拆装设备（PAD）连接，负责完成分割分组、寻址、重组装分组的工作，而不同的 X.25 网络之间则要使用 X.75 协议互联。</li>\n<li>X.25 是一个基于分组交换技术构建的网络，分组交换本身是适于无连接业务的，要为用户提供面向连接的接口服务，则必须借助虚拟电路技术（VC），虚电路服务具有两种形式，一种是交换虚电路SVC一种是永久虚电路 PVC。</li>\n<li>==最常见的 X.25 协议支持的最大传输速率为 64Kb/s。==<h3 id=\"服务的层级\"><a href=\"#服务的层级\" class=\"headerlink\" title=\"服务的层级\"></a>服务的层级</h3></li>\n<li>OSI底3层：<font color=red>物理层、数据链路层、网络层（分层体系结构）</font></li>\n</ul>\n<h3 id=\"x-25三层结构\"><a href=\"#x-25三层结构\" class=\"headerlink\" title=\"x.25三层结构\"></a>x.25三层结构</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">X.25层次结构</th>\n<th style=\"text-align:center\">对应OSI层</th>\n<th style=\"text-align:center\">相应标准</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">分组层</td>\n<td style=\"text-align:center\">网络层</td>\n<td style=\"text-align:center\">X.25 PLP 通过建立虚拟连接，提供 <strong>点对点、面向连接服务</strong> 。X.25 PLP 层采用后退 N帧 ARQ 流控协议。<br>PLP 协议把用户数据分成一定大小的块 ，一般为 128 字节，再加上24位或32位的分组头组成数据分组</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">链路访问层</td>\n<td style=\"text-align:center\">数据链路层</td>\n<td style=\"text-align:center\">使用平衡式链路访问规程 LAPB，LAPB 是源于 HDLC 的一种面向位的协议，实际上是平衡的异步方式类别下的 HDLC。LAPB 是 HDLC 的一个子集</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物理层</td>\n<td style=\"text-align:center\">物理层</td>\n<td style=\"text-align:center\">X.21，但可以使用 RS-232C 和 V.35 代替</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><ul>\n<li><strong>选择重发ARQ协议（有噪声环境双工）</strong> ：<ul>\n<li>滑动窗口协议与自动请求重发技术的结合，当收到否定应答（NAK）时，只重发出错的帧。 <ul>\n<li>$W_发=W_收\\leq2^K-1$</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>后退N帧ARQ协议（有噪声环境双工）</strong> ：<ul>\n<li>滑动窗口协议与自动请求重发技术的结合，当收到否定应答（NAK）时，将从出错处重发已发出过的 N 个帧。==接收窗口 $W_收$$=1$ 同时, $W_收\\leq2^K-1$（K为帧编号的位数）==</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-nbsp-帧中继的帧格式\"><a href=\"#03-nbsp-帧中继的帧格式\" class=\"headerlink\" title=\"03&nbsp;帧中继的帧格式\"></a>03&nbsp;帧中继的帧格式</h2><h3 id=\"定义-1\"><a href=\"#定义-1\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ul>\n<li>帧中继是综合业务数字网络（ISDN）的一个产物，没有专门定义物理层接口（可以使用 X.21，V.35等接口协议）， </li>\n<li><strong>帧中继在第二层建立虚电路</strong> ，因而第三层被简化掉了，FR 的帧层也比 HDLC 操作简单， ==只做检错，不再重传，没有滑动窗口式的流控，只有拥塞控制== ，把复杂的检错丢给高层去处理。</li>\n<li>帧中继使用的核心协议是 LAPD，它比 LAPB 简单，省去了控制字段。帧中继是基于分组（帧）交换的透明传输，可以承载 IP 数据报；可提供面向连接的服务，支持交换虚电路（SVC）和永久虚电路（PVC）；帧长可变，长度可达 1600～4096 字节，可以承载各种局域网的数据帧；可以应付突发的数据传输，可以提供 2～45Mb/s 的数据率；<font color=red>帧中继不适于延迟较敏感的应用（音频和视频），无法保证可靠提交</font>。</li>\n</ul>\n<h3 id=\"帧中继格式\"><a href=\"#帧中继格式\" class=\"headerlink\" title=\"帧中继格式\"></a>帧中继格式</h3><p> <img data-src=\"https://s3.ax1x.com/2021/03/18/6g746s.png\" alt=\"zzj\"></p>\n<ul>\n<li><strong>标志字段</strong> ：LAPD 的帧头和帧尾都是一个字节的帧标志字段，编码为 01111110，与 HDLC 一样。</li>\n<li><strong>地址字段</strong> ：<ul>\n<li>==EA== ：地址扩展比特。该比特为 0 时表示地址向后扩展一个字节，为 1 时表示最后一个字节。</li>\n<li>==C/R==：命令/响应比特。协议本身不使用这个比特，用户可以用这个比特区分不同的帧。</li>\n<li>==FECN==：向前拥塞比特。若网络置该位为 1，则表示在帧的传送方向上出现了拥塞，该帧到达接收端后，接收方可根据此调整发送方的数据率。</li>\n<li>==BECN==：向后拥塞比特。若网络置该位为 1，则表示在帧传送相反的方向上出现了拥塞，该帧到达发送端后，发送方可据此调整发送数据速率。</li>\n<li>==DE==：优先丢弃比特。当网络发生拥塞时，DE 位置 1 的帧会优先丢弃。</li>\n<li>==DLCI==：数据链路连接标识符。帧中继使用虚拟电路的方式提供面向连接的服务，在帧头中包括 DLCI字段，每个 DLCI 都标识一个虚电路，其中 DLCI0 用于信令传输。信息字段：信息字段长度可变，1600 是默认最大长度。帧校验序列：与 HDLC 相同。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"帧中继的拥塞控制\"><a href=\"#帧中继的拥塞控制\" class=\"headerlink\" title=\"帧中继的拥塞控制\"></a>帧中继的拥塞控制</h3><ul>\n<li>在帧中继承载业务中，使用显式信令和隐式信令来避免拥塞的发生。显示信令利用 FECN 和 BECN 比特位置 1 来向端用户发出拥塞警告，以避免拥塞的发生。隐式信令是指上层协议对网络拥塞的监控，当网络开始丢帧时，上层协议就自动降低发送速率，以便网络从拥塞中恢复正常运行。帧中继还可以利用 CLLM（强化链路层管理）的方法，缓解拥塞。</li>\n</ul>\n<h2 id=\"04-nbsp-ATM问题\"><a href=\"#04-nbsp-ATM问题\" class=\"headerlink\" title=\"04&nbsp;ATM问题\"></a>04&nbsp;ATM问题</h2><h3 id=\"定义-2\"><a href=\"#定义-2\" class=\"headerlink\" title=\"定义\"></a>定义</h3><ul>\n<li>ATM 是一种可以将局域网功能、广域网功能、语音、视频和数据，集成进一个统一的协议设计。</li>\n<li>在 ATM 传输中，ATM 把用户数据组成 53B 的信元作为分组交换的信息单位，采用统计时分复用模式，提供面向连接的虚电路服务。ATM连接可以是点到点的连接，也可以是点到多点的连接，分为 PVC 和 SVC 两种虚电路。</li>\n<li>ATM 通常是<font color=red>在光纤的基础上建立的</font>，==典型的数据速率为 155.5Mb/s==，因此它是不提供应答的，将少量的错误交给高层处理。</li>\n<li>ATM的==目的是实现实时通信，对于偶然的信元错误是不重传的，对于要重传的信息由高层处理==</li>\n</ul>\n<h3 id=\"ATM分层结构\"><a href=\"#ATM分层结构\" class=\"headerlink\" title=\"ATM分层结构\"></a>ATM分层结构</h3><p>  <img data-src=\"https://s3.ax1x.com/2021/03/18/6g7vc9.png\" alt=\"atmfc\"></p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHp0x.png\" alt=\"atmbg\"></p>\n<h3 id=\"ATM信元头结构\"><a href=\"#ATM信元头结构\" class=\"headerlink\" title=\"ATM信元头结构\"></a>ATM信元头结构</h3><p> <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHPAK.png\" alt=\"atmxyt\"></p>\n<ul>\n<li><strong>流控标志（GFC）</strong> ：用于主机和网络之间的流控或优先级控制。 </li>\n<li><strong>虚通路标识符（VPI）</strong> ：8 位（UNI）或 12 位（NNI），常用是 8 位，因此一个主机上的虚通路数 256个。</li>\n<li><strong>虚信道标识符（VCI）</strong> ：16 位，理论上每个主机上的虚通路可以包含 65536 个虚信道，不过部分信道是用于控制的，并不传送用户数据。 </li>\n</ul>\n<blockquote>\n<p>在 ATM 中，虚电路有两级：虚通路（VP）和虚信道（VC），虚通路是由多条虚信道捆绑在一起形成的。在 ATM 逻辑通道中，是使用 VPI+VCI 的组合来标识连接的，在做 VP 交换或交叉连接时，只需交换 VP，无需改变 VCI 的值。</p>\n</blockquote>\n<ul>\n<li><strong>负载类型（PTI）</strong> ：区分不同的拥塞信息。</li>\n<li><strong>信元丢失优先级（CLP）</strong> ：这一位用于区分信息的优先级，如果出现拥塞，交换机优先丢弃 CLP 被置1的信元。</li>\n<li><strong>头校验和（HEC）</strong> ：它支队信元头进行校验，采用的是<script type=\"math/tex\">X^8+X^2+X+1</script>的 8 位 CRC 校验。</li>\n</ul>\n<h2 id=\"05-nbsp-PPP帧格式\"><a href=\"#05-nbsp-PPP帧格式\" class=\"headerlink\" title=\"05&nbsp;PPP帧格式\"></a>05&nbsp;PPP帧格式</h2><p>  <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHE1H.png\" alt=\"ppp\"></p>\n<h2 id=\"06-nbsp-局域网帧格式\"><a href=\"#06-nbsp-局域网帧格式\" class=\"headerlink\" title=\"06&nbsp;局域网帧格式\"></a>06&nbsp;局域网帧格式</h2><p>  <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHZjA.png\" alt=\"jywzgs\"></p>\n<h2 id=\"07-nbsp-IPv4协议\"><a href=\"#07-nbsp-IPv4协议\" class=\"headerlink\" title=\"07&nbsp;IPv4协议\"></a>07&nbsp;IPv4协议</h2><h3 id=\"IPv4数据报格式\"><a href=\"#IPv4数据报格式\" class=\"headerlink\" title=\"IPv4数据报格式\"></a>IPv4数据报格式</h3><p>  <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHMAf.png\" alt=\"ipv4sjb\"></p>\n<ul>\n<li><strong>版本号</strong> ：占 4 比特，指 IP 协议的版本，目前广泛使用 IPv4。 </li>\n<li><strong>首部长度（IHL）</strong> ：IP 头长度，占 4 比特，最大值 15 个单位（1 个单位 4 字节）。</li>\n<li><strong>服务类型</strong> ：该字段包括一个 3 比特的优先级子字段（现在已废弃不用），还包括一个 4 比特的 ToS子字段，最后 1 比特必须置 0。ToS 中的 4 比特分别代表：最小时延（D）、最大吞吐率（T）、最高可靠性（R）和最小费用（C）,只能有 1 比特置 1。如果所有 4 比特均为 0，那就是一般服务。 </li>\n<li><strong>标识符</strong> ：由主机指定同样的标识符。当原主机对数据分段时，对同一上层协议数据单元划分出的各个数据报指定同样的标识符，目标主机上层协议用这个字段进行重装配。 </li>\n<li><strong>标志</strong> ：包括三个标志位。一个标志位没有使用；M 标志用于分段和重装配；D 标志为禁止分段标志。</li>\n<li><strong>段偏置值</strong> ：指明该段处于原来数据报中的位置，已 8 字节为单位。</li>\n<li><strong>生存期（TTL）</strong> ：用经过的路由器个数表示，源站设置一个数（32 或 64），每经过一个路由器减 1。如果某个路由器发现 TTL 字段为 0，则丢弃该数据报，不再转发。</li>\n<li><strong>协议</strong> ：上层协议（TCP 或 UDP）。</li>\n<li><strong>头检验和</strong> ：对 IP 头的检验序列。</li>\n<li><strong>任选数据</strong> ：可变长，包含发送者想要发送的控制数据。</li>\n</ul>\n<hr>\n<h3 id=\"IP协议簇\"><a href=\"#IP协议簇\" class=\"headerlink\" title=\"IP协议簇\"></a>IP协议簇</h3><p>  <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHl4S.png\" alt=\"ipxyz\"></p>\n<h2 id=\"08-nbsp-ICMP协议\"><a href=\"#08-nbsp-ICMP协议\" class=\"headerlink\" title=\"08&nbsp;ICMP协议\"></a>08&nbsp;ICMP协议</h2><h3 id=\"ICMP定义\"><a href=\"#ICMP定义\" class=\"headerlink\" title=\"ICMP定义\"></a>ICMP定义</h3><ul>\n<li>ICMP（Internet Control Message Protocol）与 IP 协议同==属于网络层==，封装在 IP 数据报中传输，传送有关网络层通信问题的信息。</li>\n<li><p>ICMP 常见应用有：</p>\n<ul>\n<li>报告访问失效（报告源主机网络不可达）；</li>\n<li>报告网络拥塞（发送源抑制报文给源主机，降低发送速率）；</li>\n<li>帮助排错（利用 ICMP 回声功能，ping 工具）；</li>\n<li>声明报文超时（TraceRoute 工具，利用较小的 TTL 值发现中间设备）。<h3 id=\"ICMP报文格式\"><a href=\"#ICMP报文格式\" class=\"headerlink\" title=\"ICMP报文格式\"></a>ICMP报文格式</h3></li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/18/6gHJjs.png\" alt=\"icmpbw\"></p>\n</li>\n</ul>\n<h2 id=\"09-nbsp-TCP格式\"><a href=\"#09-nbsp-TCP格式\" class=\"headerlink\" title=\"09&nbsp;TCP格式\"></a>09&nbsp;TCP格式</h2><p> <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHtun.png\" alt=\"tcpgs\"></p>\n<h3 id=\"TCP报文格式\"><a href=\"#TCP报文格式\" class=\"headerlink\" title=\"TCP报文格式\"></a>TCP报文格式</h3><ul>\n<li><strong>源端口和目的端口</strong> ：<ul>\n<li>都是 <code>16</code> 个比特，分别表示发送方和接收方的端口号。==端口号和IP地址构成套接字(socket)地址的主要内容==。源端和目的端的套接字合起来唯一地表示一条连接。网络应用程序在通信时直接向套接字发送和接收数据。</li>\n</ul>\n</li>\n<li><strong>序列号和确认号</strong> ：<ul>\n<li>都是 <code>32</code> 位的无符号整数，可以表示 0-4G(232)字节的范围。其中，序列号表示数据部分第一个字节的序列号，而确认号表示该数据报的接收者希望对方发送的下一个字节的序号(即序号小于确认号的数据都已正确地被接收)。</li>\n</ul>\n</li>\n<li><strong>头长度(HLEN)</strong> ：<ul>\n<li>表示 TCP 报文头的长度。长度以 <code>32-bit</code> 为单位来计算。所以如果选项部分的长度不是 4 个字节的整数倍，则要加上填充(padding)。</li>\n</ul>\n</li>\n<li><p><strong>保留域</strong> ：</p>\n<ul>\n<li>紧接在头长度字段后有 6 个比特，应该把它设置为 0。</li>\n</ul>\n<hr>\n</li>\n</ul>\n<p><strong>再后则是6个标志位。标志位特定的含义：</strong> <br></p>\n<ul>\n<li><strong>URG(urgent)</strong> 为==紧急数据标志==。如果它为 1，则表示本数据报中包含紧急数据。此时紧急数据指针表示的值有效。它表示在紧急数据之后的第一个字节的偏侈值(即紧急数据的总长度)。</li>\n<li><strong>ACK(acknowledge)</strong> 为==确认标志位==。如果 ACK 为 1，则表示报文中的确认号是有效的。否则，报文中的确认号无效，接收端可以忽略它。</li>\n<li><strong>PSH(push)</strong> 标志位。被置位后，要求发送方的 TCP 协议软件马上发送该数据报，接收方在收到数据后也应该立即上交给应用程序，即使其接收缓冲区尚未填满。</li>\n<li><strong>RST(reset)</strong> 标志位。用来复位一条连接。RST 标志置位的报文称为复位报文。一般情况下，如果 TCP收到的一个报文明显不是属于该主机上的任何个连接，则向远端发送一个复位报文。</li>\n<li><strong>SYN(synchronous)</strong> 标志位。用来建立连接，让连接双方同步序列号。如果 SYN=1 而 ACK=0，则表示该数据报为连接请求，如 SYN=1 而 ACK=1 则表示是接受连接。</li>\n<li><p><strong>FIN(finish)</strong> 标志位。表示发送方已经没有数据要传输了，希望释放连接。</p>\n<hr>\n</li>\n<li><p><strong>窗口(window)字段</strong></p>\n<ul>\n<li>窗口表示的是从被确认的字节开始，==发送方最多可以连续发送的字节的个数==。接收方通过设置该窗口值的大小，可以调节源端发送数据的速度，从而实现流控。</li>\n</ul>\n</li>\n<li><strong>校验和(checksum)域</strong><ul>\n<li>是 TCP 协议提供的一种检错机制。与我们在前面的章节中学过的 UDP 协议类似，在计算校验和时不仅要计算 TCP 报文自身(报文头和数据)，还要增加一些额外的信息内容 – 12 个字节的“伪包头”。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"TCP三次握手过程\"><a href=\"#TCP三次握手过程\" class=\"headerlink\" title=\"TCP三次握手过程\"></a>TCP三次握手过程</h3><ul>\n<li>TCP 采用三次握手过程建立连接，首先是发起方发送一个 SYN 标志置位的段，其中的发送顺序号为某个值 X，称为初始顺序号 ISN（Initial Sequence Number），接收方以 SYN 和 ACK 标志置位的段响应，其中的应答顺序号应为 X+1（表示期望从第 $X+1$ 个字节处开始接收数据），发送顺序号为某个值 Y（接收端指定的 ISN）。这个段到达发起端后，发起端以 ACK 标志置位，应答顺序号为 $Y+1$ 的段回答，连接就正式建立了，连接建立的同时发起方还可以发送数据。</li>\n<li><p>TCP 采用的流控方式与数据链路层的流控方式不同，属于可变大小的滑动窗口协议，也叫信贷（Credit）滑窗协议，它更适合于两个相距遥远的主机在无连接的网络上实现流量控制。</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/18/6gH2Hx.png\" alt=\"scwsgc\"></p>\n</li>\n</ul>\n<h2 id=\"10-nbsp-UDP格式\"><a href=\"#10-nbsp-UDP格式\" class=\"headerlink\" title=\"10&nbsp;UDP格式\"></a>10&nbsp;UDP格式</h2><p>  <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHfUK.png\" alt=\"udpbwgs\"></p>\n<h3 id=\"UDP报文格式\"><a href=\"#UDP报文格式\" class=\"headerlink\" title=\"UDP报文格式\"></a>UDP报文格式</h3><p><strong>源端口(Source Port)和目的端口(Destination Port)字段</strong></p>\n<ul>\n<li>包含了 16 比特的 UDP 协议端口号，它使得多个应用程序可以多路复用同一个传输层协议 – UDP 协议，仅通过不同的端口号来区分不同的应用程序。</li>\n</ul>\n<p><strong>长度(Length)字段</strong></p>\n<ul>\n<li>记录了该 UDP 数据包的总长度(以字节为单位)，包括 8 字节的 UDP 头和其后的数据部分。最小值是 8(即报文头的长度)，==最大值为65,535字节==。<br>UDP 检验和(Checksum)的内容超出了 UDP 数据报文本身的范围，实际上，它的值是通过计算 UDP 数据报及一个伪包头而得到的。但校验和的计算方法与通用的一样，都是累加求和。</li>\n</ul>\n<ul>\n<li>所谓“伪首部”是因为这种伪首部并不是 UDP 用户数据报的真正首部。只是在计算检验和时，临时和UDP用户数据报连接在一起，得到一个过渡的 UDP 用户数据报。检验和就是按照这个过渡的 UDP 用户数据报来计算的。伪首部既不向下传送也不向上递交，而仅仅是为了计算检验和。</li>\n</ul>\n<h2 id=\"11-nbsp-IPv6报文格式\"><a href=\"#11-nbsp-IPv6报文格式\" class=\"headerlink\" title=\"11&nbsp;IPv6报文格式\"></a>11&nbsp;IPv6报文格式</h2><p> <img data-src=\"https://s3.ax1x.com/2021/03/18/6gHI8e.png\" alt=\"ipv6bwgs\"></p>\n<h3 id=\"IPv6数据报格式\"><a href=\"#IPv6数据报格式\" class=\"headerlink\" title=\"IPv6数据报格式\"></a>IPv6数据报格式</h3><ul>\n<li>IPv6 包头==长度固定为 40 字节==，去掉了 IPv4 中一切可选项，只包括 8 个必要的字段，因此尽管 <font color=red>IPv6地址长度为 IPv4 的四倍，IPv6 包头长度仅为 IPv4 包头长度的两倍</font>。</li>\n</ul>\n<p><strong>其中的各个字段分别为：</strong> </p>\n<ul>\n<li><strong>Version（版本号）</strong> ：<ul>\n<li>==4 位==，IP 协议版本号，值=6。</li>\n</ul>\n</li>\n<li><strong>Traffice Class（通信类别）</strong> ：<ul>\n<li>==8 位==，指示 IPv6 数据流通信类别或优先级。功能类似于 IPv4 的服务类型（TOS）字段。</li>\n</ul>\n</li>\n<li><strong>Flow Label（流标记）</strong> ：<ul>\n<li>==20 位==，IPv6 新增字段，标记需要 IPv6 路由器特殊处理的数据流。该字段用于某些对连接的服务质量有特殊要求的通信，诸如音频或视频等实时数据传输。在 IPv6 中，同一信源和信宿之间可以有多种不同的数据流，彼此之间以非“0”流标记区分。如果不要求路由器做特殊处理，则该字段值置为“0”。</li>\n</ul>\n</li>\n<li><strong>Payload Length（负载长度）</strong> ：<ul>\n<li>==16 位负载长度==。负载长度包括扩展头和上层 PDU，16 位最多可表示65535 字节负载长度。超过这一字节数的负载，该字段值置为“0”，使用扩展头逐个跳段（Hop-by-Hop）选项中的巨量负载（Jumbo Payload）选项。</li>\n</ul>\n</li>\n<li><strong>Next Header（下一包头）</strong> ：<ul>\n<li>==8 位==，识别紧跟 IPv6 头后的包头类型，如扩展头（有的话）或某个传输层协议头（诸如 TCP，UDP 或着 ICMPv6）。</li>\n</ul>\n</li>\n<li><strong>Hop Limit（跳段数限制）</strong> ：<ul>\n<li>==8 位==，类似于 IPv4 的 TTL（生命期）字段。与 IPv4 用时间来限定包的生命期不同，IPv6 用包在路由器之间的转发次数来限定包的生命期。包每经过一次转发，该字段减 1，减到 0 时就把这个包丢弃。</li>\n</ul>\n</li>\n<li><strong>Source Address（源地址）</strong> ：<ul>\n<li>==128 位==，发送方主机地址。</li>\n</ul>\n</li>\n<li><strong>Destination Address（目的地址）</strong> ：<ul>\n<li>==128 位==，在大多数情况下，目的地址即信宿地址。但如果存在路由扩展头的话，目的地址可能是发送方路由表中下一个路由器接口。</li>\n</ul>\n</li>\n<li><p><strong>扩展首部</strong> ：</p>\n<ul>\n<li>IPv6 包头设计中对原 IPv4 包头所做的一项重要改进就是将所有可选字段移出 IPv6 包头，置于扩展头中。由于除 Hop-by-Hop 选项扩展头外，其他扩展头不受中转路由器检查或处理，这样就能提高路由器处理包含选项的 IPv6 分组的性能。</li>\n</ul>\n<hr>\n</li>\n</ul>\n<blockquote>\n<p>通常，一个典型的 IPv6 包，没有扩展头。仅当需要路由器或目的节点做某些特殊处理时，才由发送方添加一个或多个扩展头。与 IPv4 不同，IPv6 扩展头长度任意，不受 40 字节限制，以便于日后扩充新增选项，这一特征加上选项的处理方式使得 IPv6 选项能得以真正的利用。 但是为了提高处理选项头和传输层协议的性能，扩展头总是 8 字节长度的整数倍。</p>\n<p>目前，RFC 2460 中定义了以下 6 个 IPv6 扩展头：Hop-by-Hop（逐个跳段）选项包头、目的地选项包头、路由包头、分段包头、认证包头和 ESP 协议包头。</p>\n</blockquote>\n<hr>\n<h3 id=\"从-IPv4-向-IPv6-过渡的策略\"><a href=\"#从-IPv4-向-IPv6-过渡的策略\" class=\"headerlink\" title=\"从 IPv4 向 IPv6 过渡的策略\"></a>从 IPv4 向 IPv6 过渡的策略</h3><p><strong>两种向 IPv6 过渡的策略，即使用双协议栈和隧道技术</strong></p>\n<ul>\n<li>==双协议栈(dual stack)== 是指在完全过渡到IPv6 之前，使一部分主机（或路由器）装有两个协议栈，一个 IPv4 和一个 IPv6。因此双协议栈主机（或路由器）既能够和 IPv6 的系统通信，又能够和 IPv4 的系统进行通信。双协议栈的主机（或路由器）记为IPv6/ IPv4，表明它具有两种 IP 地址：一个 IPv6 地址和一个 IPv4 地址。</li>\n<li>==隧道技术（tunneling）==。这种方法的要点就是在 IPv6 数据报要进入 IPv4 网络时，将 IPv6 数据报封装成IPv4 数据报（整个的 IPv6 数据变成了 IPv4 数据报的数据部分）。然后 IPv6 数据报就在 IPv4 网络的隧道中传输。当 IPv4 的数据报离开 IPv4 网络中的隧道时再将其数据部分（即原来的 IPv6 数据报）交给主机的 IPv6 协议栈。</li>\n</ul>\n<h1 id=\"网络新技术总结\"><a href=\"#网络新技术总结\" class=\"headerlink\" title=\"网络新技术总结\"></a>网络新技术总结</h1><h2 id=\"01-nbsp-IP交换技术\"><a href=\"#01-nbsp-IP交换技术\" class=\"headerlink\" title=\"01&nbsp;IP交换技术\"></a>01&nbsp;IP交换技术</h2><ul>\n<li><p>所谓 IP 交换技术是指==利用第二层交换技术传送 IP 分组的一组协议和机制==，它<font color=blue>利用交换机的高带宽和低延迟优势</font>尽可能快地传送分组通过网络。由于 IP 是无连接的协议，对每个分组都必须单独选择路由，因此路由器的转发速度是比较慢的。IP 交换的目的是在快速交换硬件上获得最有效的 IP 实现，并非连接的 IP 和面向连接的 ATM 的优点互补。Ipsilon 公司开发的 IP 交换机提供了快捷通道（<code>Cut Through</code>），使得 IP 路由器的转发能力提高了 5 倍。IP 交换机之间的信令使用流管协议 IFMP（<code>Ipsilon Flow Management Protocol</code>）和通用交换机管理协议 GSMP（<code>General Switch Management Protocol</code>）。</p>\n<ul>\n<li>IFMP（RFC1953）的功能是建立结点间之间的邻接关系，并把一个第二层标记绑定到一个特殊的 IP 数据流上。==所谓“流”，是指具有相同源地址和目标地址、共同的上层协议（UDP、TCP）和服务类型的一个分组序列== 。利用标记可以实现对 IP 流进行分类，并更有效地访问有关数据流的路由信息，带有标记的分组无需经过后继结点的第三层转发，而是通过第二层交换快速传输。IFMP 报文包装在 IPv4 分组中广播出去。</li>\n<li>GSMP（RFC1987）是一个通用的 ATM 交换机控制协议。GSMP 的功能是建立和释放连接，在组播通信中增加和删除叶子节点，管理交换机的端口，获取配置信息和统计数据等。可变长度的 GSMP 报文封装在 AAL5协议数据单元中。<br><br></li>\n</ul>\n</li>\n<li><p>IP 交换的转发过程：一个流一旦被识别出来，IP 交换机就通知上游的结点使用新的虚电路（VC）传送这个流，同样的信令也会从下游结点传送过来。当 IP 流通过指定的 VC 传送时，就不再通过路由表转发，而是直接使用 ATM 交换硬件进行处理，同时把第二层标记附加在每个分组的头部，以便加快路由缓冲区的查找。</p>\n</li>\n<li><strong>一台IP交换机主要由三个模块组成：ATM交换模块、IP交换控制器和专用的管理协议组成。</strong></li>\n</ul>\n<h2 id=\"02-nbsp-MPLS：Multi-Protocol-Label-Switching\"><a href=\"#02-nbsp-MPLS：Multi-Protocol-Label-Switching\" class=\"headerlink\" title=\"02&nbsp;MPLS：Multi-Protocol Label Switching\"></a>02&nbsp;MPLS：Multi-Protocol Label Switching</h2><h3 id=\"MPLS定义\"><a href=\"#MPLS定义\" class=\"headerlink\" title=\"MPLS定义\"></a>MPLS定义</h3><ul>\n<li><strong>MPLS（多协议标签转换技术）</strong> 是一种可以在多种第二层媒质上进行标记交换的网络技术。这一技术结合了第二层的交换和第三层路由的特点，将第二层的基础设施和第三层的路由有机地结合起来。第三层的路由在网络的边缘实施，而在 MPLS 的网络核心采用第二层交换，==可见MPLS相当于2.5层协议==。</li>\n<li><p>MPLS 通过在每一个节点的标签交换来实现包的转发。它不改变现有的路由协议，并可以在多种第二层的物理媒质上实施，目前有 ATM、FR(帧中继)、Ethernet 以及 PPP 等媒质。</p>\n<hr>\n</li>\n<li><p>通过 MPLS，第三层的路由可以得到第二层技术的很好补充，充分发挥第二层良好的流量设计管理以及第三层 <code>“Hop-By-Hop（逐跳寻径）”</code>路由的灵活性，以实现端到端的 QoS 保证。</p>\n</li>\n<li>MPLS 作为 <strong>一种分类转发技术</strong> ，将具有相同转发处理方式的分组归为一类，称为转发等价类 FEC（<code>Forwarding Equivalence Class</code>）。相同转发等价类的分组在 MPLS 网络中将获得完全相同的处理。转发等价类的划分方式非常灵活，可以是源地址、目的地址、源端口、目的端口、协议类型、VPN 等的任意组合。例如，在传统的采用最长匹配算法的 IP 转发中，到同一个目的地址的所有报文就是一个转发等价类。</li>\n<li><p><strong>标签</strong> 是一个长度固定、只具有本地意义的短标识符，用于唯一标识一个分组所属的转发等价类 FEC。在某些情况下，例如要进行负载分担，对应一个 FEC 可能会有多个标签，但是一个标签只能代表一个 FEC。标签由报文的头部所携带，不包含拓扑信息，只具有局部意义。标签的长度为 4 个字节。</p>\n<hr>\n</li>\n<li><p>MPLS 是一种特殊的转发机制，它为进入网络中的 IP 数据包分配标记，并通过对标记的交换来实现 IP数据包的转发。标记作为 IP 包头在网络中的替代品而存在，在网络内部 MPLS 在数据包所经过的路径沿途通过交换标记(而不是看 IP 包头)来实现转发；当数据包要退出 MPLS 网络时，数据包被解开封装，继续按照 IP 包的路由方式到达目的地。</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/18/6gHbDI.png\" alt=\"pct\"></p>\n</li>\n</ul>\n<blockquote>\n<p>如图所示，MPLS 网络包含一些基本的元素。在网络边缘的节点就称做标记边缘路由器(LER)，而网络的核心节点就称做为标记交换路由器(LSR)。LER 节点在 MPLS 网络中完成的是 IP 包的进入和退出过程；LSR节点在网络中提供高速交换功能。在 MPLS 节点之间的路径就叫做标记交换路径。一条 LSP 可以看做是一条贯穿网络的单向隧道。</p>\n</blockquote>\n<h3 id=\"MLPS相关术语\"><a href=\"#MLPS相关术语\" class=\"headerlink\" title=\"MLPS相关术语\"></a>MLPS相关术语</h3><ul>\n<li><strong>LDP</strong> （<code>Label Distribution Protocol</code>），标记分配协议</li>\n<li><strong>LSP</strong> （<code>Label Switched Path</code>），标记交换路径</li>\n<li><strong>FEC</strong> （<code>Forwarding Equivalence Class</code>），转发等价类</li>\n<li><strong>LSR</strong> （<code>Label Switching Router</code>），标记交换路由器</li>\n<li><strong>LER</strong> （<code>Label Edge Router</code>），标记边缘路由器</li>\n<li><strong>CR-LDP</strong> （<code>Constraint Route Label Distribution Protocol</code>），限制路由的标记分配协议</li>\n</ul>\n<h2 id=\"03-nbsp-DQDB-网分布式队列双总线协议\"><a href=\"#03-nbsp-DQDB-网分布式队列双总线协议\" class=\"headerlink\" title=\"03&nbsp;DQDB 网分布式队列双总线协议\"></a>03&nbsp;DQDB 网分布式队列双总线协议</h2><ul>\n<li><p>IEEE802.6 城域网采用了分布式队列双总线（<code>Distributed Queue Dual Bus, DQDB</code>）协议。这种双总线一般采用光纤介质，如图所示，在这种配置中，每个站同时连接到两根总线上。一个站要发送数据时必须选择一根总线，使接收站成为它的下游站。</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/18/6gHXUf.png\" alt=\"dbqb\"></p>\n</li>\n</ul>\n<blockquote>\n<p>图中的黑圆点表示 A 总线和 B 总线的端头，它们不停地产生固定长度为 53 字节的时槽。当时槽沿沿着总线流动到达末端时由终端匹配器（黑方块）吸收。结点可以从忙时槽中读数据，也可以向空时槽中写数据。总线的运行由周期为 125μs 的时钟控制，一个时钟周期内端头可以产生多个时槽，时槽数量决定了总线的实际速率。</p>\n</blockquote>\n<ul>\n<li><p>时槽分为两类，一类叫作排队仲裁（Queue-Arbitrated）时槽，用 QA 表示，用于分组交换业务；另一类叫作预仲裁（Pre-Arbitrated）时槽，用 PA 表示，由电路交换业务使用，可提供等时服务。时槽由 1个控制字节和 52 字节长的段组成，段头 4 字节，信息实际占 48 字节。</p>\n</li>\n<li><p>DQDB 是一个很有效的协议，可与 802.3 和 802.5 媲美。在重负载下，CD 的值很小，甚至为 0，空时槽是很富裕的。这样就像 CSMA/CD 协议一样，可以很快的访问信道，几乎没有延迟。在重负载下，实际上每个时槽都被等待发送的站利用，信道利用率达到 100％，性能 一点不比令牌环网差。轻负载下的快速访问和重负载下可预见的排队系统的奇妙结合使得 DQDB 成为最适合 MAN 的协议。</p>\n</li>\n</ul>\n<h2 id=\"03-nbsp-LANE：LAN-Emulated\"><a href=\"#03-nbsp-LANE：LAN-Emulated\" class=\"headerlink\" title=\"03&nbsp;LANE：LAN Emulated\"></a>03&nbsp;LANE：LAN Emulated</h2><ul>\n<li>ATM 论坛开发了 ATM LAN 仿真标准（LAN Emulated, LANE），用以解决不同局域网上的端系统相互作用问题，使得现有的共享介质网络上的主机也可以通过 ATM 网络进行通信。ATM-LAN 转换器对 ATM 信源流和MAC 帧进行转换。ATM 论坛提议使用 AAL5 对 MAC 帧进行分段和重装配。<br><br></li>\n</ul>\n<p><strong>在概念上LANE结构包括客户机和服务器两种成分</strong> ：</p>\n<ul>\n<li>LAN 仿真客户机（LEC）:是指传统的网络设备，它按照原有的 MAC 协议进行操作，并具有唯一的ATM 地址。例如 LAN 交换机就可以被看成 LEC，它有一个 ATM 地址，同时又通过各个端口访问对应的 MAC网卡。</li>\n<li>LAN 仿真服务器（LES）:具有唯一的 ATM 地址，它提供控制功能，处理 LEC 的连接请求，并为它管理的一组 LEC 建立 MAC 地址与 ATM 地址的映像表。</li>\n<li>LAN 仿真配置服务器（LECS）:其作用是根据配置数据库的信息和 LEC 的请求把 LEC 分配个特定的LES，每个管理域中只有一个 LECS。</li>\n<li>广播和未知服务器（BUS）：第一个作用是实现广播和组播的传输，所有目标地址为广播地址（全 1）的数据帧都被发送给 BUS 传送。它的另外一个作用是利用广播功能实现未知地址的解析，即建立 ATM 地址与 MAC 地址的映像。</li>\n</ul>\n<h1 id=\"几个重要的认证方式\"><a href=\"#几个重要的认证方式\" class=\"headerlink\" title=\"几个重要的认证方式\"></a>几个重要的认证方式</h1><h2 id=\"01-nbsp-SSL认证过程\"><a href=\"#01-nbsp-SSL认证过程\" class=\"headerlink\" title=\"01&nbsp;SSL认证过程\"></a>01&nbsp;SSL认证过程</h2><p> <img data-src=\"https://s3.ax1x.com/2021/03/18/6gbibq.png\" alt=\"sslrz\"></p>\n<ul>\n<li><strong>安全套接字协议</strong> SSL（<code>Secure Socket Layer</code>）==工作在应用层和传输层之间==，==提供身份认证和保密通信功能==。<ul>\n<li>SSL 所包含的协议有 SSL 握手协议、SSL 修改密文协议、SSL 警告协议和 SSL 记录协议。<ul>\n<li>SSL 握手协议负责身份认证和密钥生成。</li>\n<li>SSL 记录协议负责接收应用层报文，并将数据划分成可管理的块（214 个字节），选择性地压缩数据，应用报文认证码（MAC）对数据进行加密，并增加首部，通过 TCP 报文段传输数据；接收者将数据进行解密、验证、解压，重装配成应用报文，然后交付更高级的用户。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<ul>\n<li>在客户端与服务器间传输的数据是通过使用对称算法（如 DES 或 RC4）进行加密的。公用密钥算法（通常为 RSA）是用来获得加密密钥交换和数字签名的，此算法使用服务器的SSL数字证书中的公用密钥。有了服务器的 SSL 数字证书，客户端也可以验证服务器的身份。SSL 协议的版本 1 和 2 只提供服务器认证。版本 3 添加了客户端认证，此认证同时需要客户端和服务器的数字证书。</li>\n</ul>\n<p><br></p>\n<ul>\n<li>SSL 安全连接 ==建立在TCP443端口== ，统一资源定位器使用 <code>HTTPS://开头</code>。</li>\n</ul>\n<h2 id=\"02-nbsp-Kerberos-认证\"><a href=\"#02-nbsp-Kerberos-认证\" class=\"headerlink\" title=\"02&nbsp;Kerberos 认证\"></a>02&nbsp;Kerberos 认证</h2><p> <img data-src=\"https://s3.ax1x.com/2021/03/18/6gbkV0.png\" alt=\"kdc\"></p>\n<p><strong>整个流程大体上包含以下3个子过程</strong> ：</p>\n<ol>\n<li>Client 向 KDC 申请 TGT（<code>Ticket Granting Ticket</code>）。</li>\n<li>Client 通过获得 TGT 向 KDC 申请用于访问 Server 的 Ticket。</li>\n<li>Client 最终向为了 Server 对自己的认证向其提交 Ticket。</li>\n</ol>\n<h2 id=\"03-nbsp-WLAN接入认证方式\"><a href=\"#03-nbsp-WLAN接入认证方式\" class=\"headerlink\" title=\"03&nbsp;WLAN接入认证方式\"></a>03&nbsp;WLAN接入认证方式</h2><ul>\n<li>WLAN 开放的传输介质使得只要符合协议要求的无线系统均可能在信号覆盖范围内收到所有信息，为达到和有线网络同等的安全性能，IEEE802.11 采取了认证和加密措施。</li>\n<li>认证程序控制 WLAN 接入的能力，这一过程被所有无线终端用来建立自己的合法接入到 AP 的身份标志，如果 AP 和工作站之间无法完成相互间的认证，那么它们之间就不能建立有效的连接。==IEEE802.11协议支持多个不同的认证过程，并且允许认证方案扩充==。</li>\n<li>==IEEE802.11提供的加密方式采用WEP机制== ，WEP 对数据的加密和解密使用同样的算法和密钥。它包括“共享密钥”认证和数据加密两个过程。“共享密钥”认证使得那些没有正确 WEP 密钥的用户无法访问网络，而加密则要求网络中所有数据的发送和接收都必须使用密钥加密。</li>\n<li>认证采用了一个标准的询问和响应帧格式。执行过程中，AP 根据 RC4 算法运用共享密钥对 128 字节的随机序列进行加密后作为询问帧发给用户，用户将收到的询问帧进行解密后以正文形式响应 AP,AP 将正文与原始序列进行比较，如果两者一致，则通过认证。</li>\n</ul>\n<h1 id=\"路由协议总结\"><a href=\"#路由协议总结\" class=\"headerlink\" title=\"路由协议总结\"></a>路由协议总结</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">协议名称</th>\n<th style=\"text-align:center\">协议概述</th>\n<th style=\"text-align:center\">报文类型</th>\n<th style=\"text-align:center\">传输协议</th>\n<th style=\"text-align:center\">维护与更新</th>\n<th style=\"text-align:center\">路由配置要点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>BGP-4</strong></td>\n<td style=\"text-align:center\">BGP是一种不同自治系统的路由器之间进行通信的==外部网关协议==。BGP 的==主要功能是控制路由策略==，BGP 系统与其他BGP系统之间交换网络可到达信息。这些信息包括数据到达这些网络所必须经过的自治系统 AS 中的所有路径。这些信息足以构造一幅自治系统连接图。然后，可以根据连接图删除选路环，制订选路策略。==BGP是一个距离向量协议。支持无类别的域间路由（CIDR）==</td>\n<td style=\"text-align:center\">1.建立（open）：建立邻居关系 <br>2. 保持活动状态（ keepalive ）： 对open 报文的应答/周期的确认邻居关系<br>3.更新：发送新的路由信息<br>4.通告：报告检测到的错误</td>\n<td style=\"text-align:center\">BGP 邻居之间通过TCP 连接交换路由信息， <strong>使用端口号为179</strong></td>\n<td style=\"text-align:center\">BGP 通过定期发送<code>keepalive</code>报文给其邻站来检测TCP连接对端的链路或主机失败。初始连接建立时要发送全部路由信息，以后只发送改变了的路由信息。BGP 路由器不需要进行周期性路由更新。</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>RIP</strong></td>\n<td style=\"text-align:center\">RIP 协议的全称是 ==路由信息协议==，它是==一种内部网关协议（IGP）==，用于一个自治系统（AS）内的路由信息的传递。==RIP协议是基于距离矢量算法（Bellman-ford）的==，它使用“跳数”，衡量到达目标地址的路由距离。RIP 使用非常广泛，简单可靠便于配置。==RIPv2支持CIDR、VLSM 和不连续子网==，使用组播地址（224.0.0.9）而不是广播传播路由更新报文，并且采用了触发更新机制来加速路由收敛。==RIPv2支持认证==，使用经过散的口令字来限制更新信息的传播。==RIP只适用小型同构网络，允许的最大跳数为 15，任何超过 15 个站点的目的地均被标记为不可达==。</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">RIP 使用 UDP 作为其传输层协议， <strong>端口为520</strong></td>\n<td style=\"text-align:center\">==RIP的更新是经过定时广播实现的== ，在默认情况下，==路由器每隔30秒向相联的网络广播自己的路由表==，收到广播的路由器将收到的信息添加到自身的路由表，每个路由器都如此广播，最终网络上的路由器将得知全网的路由信息。<br>正常情况下，==路由器每50秒就可以得到一条路由的信息确认==，==经过180秒6个更新周期一个路由项没有被确认，路由器就认为该路由器失效，若经过240秒路由项没有得到确认，就将该由器从路由表中删除==。</td>\n<td style=\"text-align:center\"><code>router rip network network</code> (相连网络，即相连的网段号) <br> <code>version 1/2</code><br> <code>show ip route rip</code> <br> <code>no logging console</code> (防止大量端口状态变化和报警信息对配置过程的影响)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>IGRP</strong></td>\n<td style=\"text-align:center\">==内部网关路由协议（IGRP）== 是Cisco 公司 20 世纪 80 年代开发的，是==一种动态的、长跨度（最大可支持255跳）的路由协议==，使用度量（向量）来确定到达一个网络的最佳路由，由延时、带宽、可靠性和负载等来计算最优路由，它在同个自治系统内具有高跨度，适合复杂的网络，==但本质上讲，IGRP还是一种距离矢量路由协议。== Cisco IOS 允许路由器管理员对IGRP的网络带宽、延时、可靠性和负载进行权重设置，以影响度量的计算。==IGRP不支持VLSM和不连续子网==。</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">IGRP 使用 UDP 发送路由表项</td>\n<td style=\"text-align:center\">默认情况下，==IGRP路由器每隔90s更新一次路由信息，如果 270s 内没有收到某路由器的回应，则认为该路由器不可到达；如果630s内仍未收到应答，则 IGRP 进程将从路由表中删除该路由==。</td>\n<td style=\"text-align:center\"><code>router igrp AS number</code> ( 创建 IGRP 路由进程)<br> <code>network network</code> (相连网络)<br> <code>clockrate</code> (DCE端串口配置时钟信号，用于同步) <br> <code>bandwidth</code>  (指定相应端口带宽) <br> <code>bandwidth</code> (指定相应端口带宽) <br><code>show ip route igrp</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>OSPF</strong></td>\n<td style=\"text-align:center\">==开放式最短路径优先（OSPF）是一种链路状态选择协议== ，是由 IETF开发的内部网关路由协议，==基于Dijkstra算法== 。OSPF 的链路状态信息通过链路状态公告（LSA）发布到网上的每台路由器，每台路由器通过 LSA 建立一个关于网络的拓扑数据库。在一个区域（Area）中的路由器（区域边界路由器除外），都应具有相同的链路状态数据库。==OSPF是一种层次化的路由选择协议== ，区域 0（也称主干区域）是 OSPF 网络中必须具有的区域，其他所有区域要求与区域 0 互连到一起。 ==OSPF采用触发更新，支持VLSM及CIDR，对跳数没有限制==</td>\n<td style=\"text-align:center\">1.Hello 数据包：用于建立和维护邻居关系，在广播网络中Hello 分组还用于动态发现邻居路由器。<br>2.链路状态更新数据包：向邻居路由器发送链路状态公告（LSA）<br>3.链路状态应答数据包：对链路状态更新数据包的应答<br>4.数据库描述数据包：描述一个路由器OSPF链路状态数据库的内容<br>5.链路状态请求数据包：请求相邻路由器发送其链路数据库中的具体条目</td>\n<td style=\"text-align:center\">OSPF 路由信息利用 IP 数据报直接传送，IP 数据报的报头中“协议”字段的值为 89 （即 <strong>协议号为 89</strong> ）</td>\n<td style=\"text-align:center\">OSPF路由器以 ==固定的时间间隔== ，通常为 10 秒，发送Hello数据包建立和维护邻居路由器间的关系。如果 40 秒没有从特定邻居收到 Hello 分组，路由器就认为那个邻居不存在了，并且产生声明该邻居丢失的 LSA。Hello定时器的值可以改变，但是在一个网段中所有路由器的定时器必须保持一致，在稳定状态下，大的链路状态更新分组 30分钟才传送一次。每一个区域都具有该区域专用的链路状态数据库。一个区域的网络拓扑结构在区域外是不可见的。同样，每一个区域内路由器对区域外的网络结构也不了解，也就是说，区域内的LSA广播被区域边界挡住了，这样就减少了网络中的广播数据包，也减少了链路状态数据库的大小。随着区域概念的引入，AS 内的所有路由器不再具有相同的链路状态数据库，而是只具有所在区域的链路状态数据库。区域边界路由器则具有与其相连的所有区域的链路状态数据库。</td>\n<td style=\"text-align:center\"><code>router ospf process-id</code> (指定使用 OSPF 协议，进程号只在路由器内部起作用，不同路由器的进程号可以不同) <br><code>network address wildcard-mask</code> <br> <code>area area-id</code> (指定与该路由器相连的网络，区域号为十进制数，0 为主干区域) <br> <code>show ip route</code><br><code>show ip route ospf</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>EIGRP</strong></td>\n<td style=\"text-align:center\">EIGRP 是 ==增强型的IGRP协议== ，是典型的平衡混合路由选择协议，融合了距离矢量和链路状态两种路由选择协议的优点， ==使用弥散修正算法（DUAL）快速收敛== ，采用不定期更新（触发更新）以减少带宽消耗。==EIGRP支持VLSM及不连续子网。EIGRP最大的跳数限制为 224== 。支持对自动路由汇总功能的设定，支持多种网络层协议，支持 IP、IPX、AppleTalk、Novell 等。</td>\n<td style=\"text-align:center\">1.hello 包：用于邻居发现与恢复，组播方式发送（224.0.0.10）<br>2.更新包：当路由器发现新邻居时使用更新包（单播）<br>3.确认包：对更新包的确认 <br>4.查询包：当 EIGRP路由器想从特定邻居或所有邻居那里获得特定的信息，EIGRP路由器使用查询包（单播或多播）<br>5.响应包：对查询包的响应</td>\n<td style=\"text-align:center\">EIGRP使用RTP（可靠的传输层协议）传输数据包， ==不依赖TCP/IP协议。RTP支持多播、组播和单播==</td>\n<td style=\"text-align:center\">EIGRP 通过使用 hello 数据包与邻居路由器建立联系，缺省情况下，hello数据包每间隔5秒发送一次。</td>\n<td style=\"text-align:center\"><code>router eigrp AS number</code> ( 创 建EIGRP 路由进程)<br> <code>network address wildcard-mask</code>(EIGRP 的网段声明中，如果是没有划分子网的 A、B、C 类主网地址，只需输入此网络地址；如果网络划分了子网，则必须在网络地址后面写入反掩码) <br> <code>no auto-summary</code> (关闭 EIGRP 协议的路由汇总功能，默认配置是自动汇总生效。在处理VLSM 时，通常需要关闭该功能)</td>\n</tr>\n</tbody>\n</table>\n</div>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80/",
            "title": "操作系统基础",
            "date_published": "2021-03-11T02:45:47.000Z",
            "content_html": "<h1 id=\"进程管理\"><a href=\"#进程管理\" class=\"headerlink\" title=\"进程管理\"></a>进程管理</h1><hr>\n<h2 id=\"1-1-nbsp-进程状态\"><a href=\"#1-1-nbsp-进程状态\" class=\"headerlink\" title=\"1.1&nbsp;进程状态\"></a>1.1&nbsp;进程状态</h2><ul>\n<li><strong>运行态</strong> ：<ul>\n<li>占有处理器正在运行。</li>\n</ul>\n</li>\n<li><strong>就绪态</strong> ：<ul>\n<li>具备运行条件，等待系统分配处理器以便运行。</li>\n</ul>\n</li>\n<li><p><strong>等待态（阻塞态）</strong> ：</p>\n<ul>\n<li>不具备运行条件，正在等待某个事件的完成。</li>\n</ul>\n</li>\n<li><p>一个进程在创建后将处于就绪状态。在执行过程中，每个进程任一时刻只会处于这3种状态之一。</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/11/6Nm6wq.png\" alt=\"jczt\"></p>\n</li>\n<li><p>运行态→等待态：处于运行状态的进程在运行的过程中需要等待某一事件发生后，才能继续运行，于是该进程由运行状态变成等待状态。例如等待 I/O 完成。</p>\n</li>\n<li>等待态→就绪态：处于等待状态的进程，假如其等待的事件已经发生结束。于是进程由等待状态变成就绪状态。</li>\n<li>就绪态→运行态：当处于就绪状态的进程被进程调度程序选中后，就分配到处理器来运行，进程由就绪状态变成运行状态。</li>\n<li>运行态→就绪态：处于运行状态的进程在运行的过程中，因分给它的处理器时间片已用完而不得不让出处理器，于是进程由运行状态变成就绪状态。</li>\n</ul>\n<h2 id=\"进程死锁\"><a href=\"#进程死锁\" class=\"headerlink\" title=\"进程死锁\"></a>进程死锁</h2><ul>\n<li>一个进程在等待的是一个不可能发生的事件，系统会将该进程死锁，若多个进程产生死锁，则系统自身会死锁</li>\n</ul>\n<h3 id=\"死锁的四个必要因素\"><a href=\"#死锁的四个必要因素\" class=\"headerlink\" title=\"死锁的四个必要因素\"></a>死锁的四个必要因素</h3><ul>\n<li><strong>互斥</strong> ：至少有一个资源必须处于非共享模式，即一次只有一个进程可使用。如果另一进程申请该资源，那么申请进程应等到该资源释放为止。</li>\n<li><strong>占有并等待</strong> ：一个进程应占有至少一个资源，并等待另一个资源，而该资源为其他进程所占有。</li>\n<li><strong>非抢占</strong> ：资源不能被抢占，即资源只能被进程在完成任务后自愿释放。</li>\n<li><strong>循环等待</strong> ：有一组等待进程{$P_0$ ，$P_1$ ，…，$P_n$ }，$P_0$等待的资源为$P_1$占有，$P_1$等待的资源为$P_2$占有，……，$P_{n-1}$ 等待的资源为$P_n$占有，$P_n$等待的资源为$P_0$占有。</li>\n</ul>\n<h3 id=\"解决死锁的策略\"><a href=\"#解决死锁的策略\" class=\"headerlink\" title=\"解决死锁的策略\"></a>解决死锁的策略</h3><ol>\n<li><strong>死锁预防</strong> ：<ul>\n<li>例如，要求用户申请资源时一次性申请所需要的全部资源，这样就破坏了保持和等待条件；将资源分层，得到上一层资源后，才能够申请下一层资源，它破坏了环路等待条件。预防通常会降低系统的效率。</li>\n</ul>\n</li>\n<li><strong>死锁避免</strong> ：<ul>\n<li>避免是指进程在每次申请资源时判断这些操作是否安全，典型算法是银行家算法。但这种算法会增加系统的开销。</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><strong>所谓银行家算法</strong> ，是指在分配资源之前，先看清楚，如果资源分配下去后，是否会导致系统死锁。如果会死锁，则不分配，否则就分配。具体来说，银行家算法分配资源的原则总结如下：<ol>\n<li>当一个进程对资源的最大需求量不超过系统中的资源数时可以接纳该进程。</li>\n<li>进程可以分期请求资源，但请求的总数不能超过最大需求量。</li>\n<li>当系统现有的资源不能满足进程尚需资源数时，对进程的请求可以推迟分配，但总能使进程在有限的时间里得到资源。</li>\n</ol>\n</li>\n<li>注意：<ul>\n<li>如果系统中有 N 个并发进程，若规定每个进程需要申请 R 个某类资源，则当系统提供 ==$K=N<script type=\"math/tex\">\\times</script>（R-1）+1$== 个同类资源时，无论采用何种方式申请使用，一定不会发生死锁。</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>死锁检测</strong> ：<ul>\n<li>前两者是事前措施，而死锁的检测则是判断系统是否处于死锁状态，如果是，则执行死锁解除策略。</li>\n</ul>\n</li>\n<li><strong>死锁解除</strong> ：<ul>\n<li>这是与死锁检测结合使用的，它使用的方式就是剥夺。即将某进程所拥有的资源强行收回，分配给其他的进程。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"进程的同步与互斥\"><a href=\"#进程的同步与互斥\" class=\"headerlink\" title=\"进程的同步与互斥\"></a>进程的同步与互斥</h2><ol>\n<li><strong>同步</strong><ul>\n<li>进程同步也是进程之间直接的制约关系，是为完成某种任务而建立的两个或多个线程，这个线程需要在某些位置上协调他们的工作次序而等待、传递信息所产生的制约关系。进程间的直接制约关系来源于他们之间的合作。</li>\n<li>比如说进程 A 需要从缓冲区读取进程 B 产生的信息，当缓冲区为空时，进程 B 因为读取不到信息而被阻塞。而当进程 A 产生信息放入缓冲区时，进程 B 才会被唤醒。</li>\n</ul>\n</li>\n<li><strong>互斥</strong><ul>\n<li>进程互斥是进程之间的间接制约关系。当一个进程进入临界区使用临界资源时，另一个进程必须等待。只有当使用临界资源的进程退出临界区后，这个进程才会解除阻塞状态。</li>\n<li>比如进程 B 需要访问打印机，但此时进程 A 占有了打印机，进程 B 会被阻塞，直到进程 A 释放了打印机资源，进程 B 才可以继续执行。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"信号量与PV操作\"><a href=\"#信号量与PV操作\" class=\"headerlink\" title=\"信号量与PV操作\"></a>信号量与PV操作</h2><ul>\n<li><strong>信号量</strong><ul>\n<li>信号量 S 可以直接理解成计数器，是一个整数。信号量的值仅能由 PV 操作来改变。通过 PV 操作控制信号量来实现进程的同步和互斥。</li>\n</ul>\n</li>\n<li><strong>PV操作</strong><ul>\n<li>PV 操作：解决互斥和同步的问题。</li>\n<li>PV 操作是分开来看的：</li>\n<li>P 操作：使 S=S-1，若 S $\\geq$ 0，则该进程继续执行，否则该进程排入等待队列。</li>\n<li>V 操作：使 S=S+1，若 S $\\leq$ 0，唤醒等待队列中的一个进程。</li>\n<li>在资源使用之前将会执行 P 操作，之后将会执行 V 操作。在互斥关系中 PV 操作在一个进程中成对出现，而在同步关系中则一定在两个或多个进程中成对出现。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"存储管理\"><a href=\"#存储管理\" class=\"headerlink\" title=\"存储管理\"></a>存储管理</h1><hr>\n<h2 id=\"页式存储管理\"><a href=\"#页式存储管理\" class=\"headerlink\" title=\"页式存储管理\"></a>页式存储管理</h2><ul>\n<li><p>页式存储管理是通过引入==进程的逻辑地址==，把进程地址空间与实际物理存储位置分离，从而增加存储管理的灵活性。我们把逻辑地址空间划分为一些相等的片，这些片称为页或页面。同样，物理地址空间也被划分为同样大小的片，称为块。这样用户程序进入内存时，通过页表就可以将一页对应存入到一个块中。这些物理块不必连续。所以内存利用率可以大大提高。</p>\n</li>\n<li><p>在页式系统中，指令所给出的逻辑地址分为两部分：逻辑页号和页内地址。其中页号与页内地址所占多少位，与主存的最大容量、页面的大小有关。</p>\n</li>\n<li><p>CPU 中的内存管理单元按逻辑页号查找页表（操作系统为每一个进程维护了一个从虚拟地址到物理地址的映射关系的数据结构，页表的内容就是该进程的虚拟地址到物理地址的一个映射）得到物理页号，将物理页号与页内地址相加形成物理地址。</p>\n</li>\n</ul>\n<h2 id=\"页面置换算法\"><a href=\"#页面置换算法\" class=\"headerlink\" title=\"页面置换算法\"></a>页面置换算法</h2><h2 id=\"gt-当程序的存储空间要求大于实际的内存空间时，就使得程序难以运行了。虚拟存储技术就是利用实际内存空间和相对大得多的外部储存器存储空间相结合构成一个远远大于实际内存空间的虚拟存储空间，程序就运行在这个虚拟存储空间中，能够实现虚拟存储的依据是程序的局部性原理，即程序在运行过程中经常体现出运行在某个局部范围之内的特点。即在一段时间内，整个程序的执行仅限于程序中的某一部分。虚拟存储是把一个程序所需要的存储空间分成若干页，程序运行用到的页就放在内存里，暂时不用就放在外存中，当用到外存中的页时，就把它们调到内存，反之就把它们送到外存中。由于所有的进程页面不是一次性地全部调入内存，而是部分页面装入。\"><a href=\"#gt-当程序的存储空间要求大于实际的内存空间时，就使得程序难以运行了。虚拟存储技术就是利用实际内存空间和相对大得多的外部储存器存储空间相结合构成一个远远大于实际内存空间的虚拟存储空间，程序就运行在这个虚拟存储空间中，能够实现虚拟存储的依据是程序的局部性原理，即程序在运行过程中经常体现出运行在某个局部范围之内的特点。即在一段时间内，整个程序的执行仅限于程序中的某一部分。虚拟存储是把一个程序所需要的存储空间分成若干页，程序运行用到的页就放在内存里，暂时不用就放在外存中，当用到外存中的页时，就把它们调到内存，反之就把它们送到外存中。由于所有的进程页面不是一次性地全部调入内存，而是部分页面装入。\" class=\"headerlink\" title=\"&gt;当程序的存储空间要求大于实际的内存空间时，就使得程序难以运行了。虚拟存储技术就是利用实际内存空间和相对大得多的外部储存器存储空间相结合构成一个远远大于实际内存空间的虚拟存储空间，程序就运行在这个虚拟存储空间中，能够实现虚拟存储的依据是程序的局部性原理，即程序在运行过程中经常体现出运行在某个局部范围之内的特点。即在一段时间内，整个程序的执行仅限于程序中的某一部分。虚拟存储是把一个程序所需要的存储空间分成若干页，程序运行用到的页就放在内存里，暂时不用就放在外存中，当用到外存中的页时，就把它们调到内存，反之就把它们送到外存中。由于所有的进程页面不是一次性地全部调入内存，而是部分页面装入。\"></a>&gt;当程序的存储空间要求大于实际的内存空间时，就使得程序难以运行了。虚拟存储技术就是利用实际内存空间和相对大得多的外部储存器存储空间相结合构成一个远远大于实际内存空间的虚拟存储空间，程序就运行在这个虚拟存储空间中，能够实现虚拟存储的依据是程序的局部性原理，即程序在运行过程中经常体现出运行在某个局部范围之内的特点。即在一段时间内，整个程序的执行仅限于程序中的某一部分。虚拟存储是把一个程序所需要的存储空间分成若干页，程序运行用到的页就放在内存里，暂时不用就放在外存中，当用到外存中的页时，就把它们调到内存，反之就把它们送到外存中。由于所有的进程页面不是一次性地全部调入内存，而是部分页面装入。</h2><ul>\n<li>这就有可能出现下面的情况：要访问的页面不在内存，这时系统产生缺页中断。操作系统在处理缺页中断时，要把所需页面从外存调入到内存中。如果这时内存中有空闲块，就可以直接调入该页面；如果这时内存中没有空闲块，就必须先淘汰一个已经在内存中的页面，腾出空间，再把所需的页面装入，即进行页面置换。</li>\n</ul>\n<h3 id=\"先进先出法（FIFO）\"><a href=\"#先进先出法（FIFO）\" class=\"headerlink\" title=\"先进先出法（FIFO）\"></a>先进先出法（FIFO）</h3><ul>\n<li>FIFO 算法认为最早调入内存的页不再被使用的可能性要大于刚调入内存的页，因此，先进先出法总是淘汰在内存中停留时间最长的一页，即先进入内存的页，先被换出。</li>\n<li>该算法会出现在内存块增加的情况下，缺页率不减反增<ul>\n<li>这种现象称为 <strong>贝拉迪Belady异常</strong> ————当为进程分配的物理块数增大时，缺页次数不减反增的异常现象。</li>\n<li>只有FIFO算法会产生Belady异常。另外，FIFO算法==虽然实现简单，但是该算法与进程实际运行时的规律不适应==，因为先进入的页面也有可能最经常被访问。因此，算法性能差</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"最佳置换法（OPT）\"><a href=\"#最佳置换法（OPT）\" class=\"headerlink\" title=\"最佳置换法（OPT）\"></a>最佳置换法（OPT）</h3><ul>\n<li>最佳置换算法（OPT）在为调入新页面而必须预先淘汰某个老页面时，所选择的老页面应该以后不被使用，或者是在最远的以后时间才被访问。采用这种算法，能保证有最小缺页率。（缺页率=缺页次数/总共访问页面的次数）</li>\n<li>==缺页时未必发生页面置换，有可能还有空闲的内存块等待使用==</li>\n<li><strong>是一种理想化算法，在实际应用中无法实现</strong><h3 id=\"最近最少使用置换法（LRU）\"><a href=\"#最近最少使用置换法（LRU）\" class=\"headerlink\" title=\"最近最少使用置换法（LRU）\"></a>最近最少使用置换法（LRU）</h3></li>\n<li>最近最少使用置换法（LRU）是选择在最近一段时间里最久没有使用过的页面予以淘汰。</li>\n</ul>\n<h1 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h1><h2 id=\"文件管理概念\"><a href=\"#文件管理概念\" class=\"headerlink\" title=\"文件管理概念\"></a>文件管理概念</h2><p> <img data-src=\"https://s3.ax1x.com/2021/03/11/6Nm701.png\" alt=\"wjgl\"></p>\n<ul>\n<li>在树型目录结构中，树的根结点为根目录，数据文件作为树叶，其他所有目录均作为树的结点。系统在建立每一个目录时，都会自动为它设定两个目录文件，一个是“.”，代表该目录自己；另一个是“..”，代表该目录的父目录，也就是上级目录。</li>\n<li>从逻辑上讲，用户在登录到系统中之后，每时每刻都处在某个目录之中，此目录被称作工作目录或当前目录。工作目录是可以随时改变的。</li>\n<li>对文件进行访问时，需要用到路径的概念。路径是指从树型目录中的某个目录层次到某个文件的一条道路。在树型目录结构中，从根目录到任何数据文件之间，只有一条唯一的通路，从树根开始，把全部目录文件名与数据文件名依次用“/”连接起来，构成该数据文件的路径名，且每个数据文件的路径名是唯一的。这样，可以解决文件重名问题，不同路径下的同名文件不一定是相同的文件。例如，在图 2-5 中，根目录下的文件 f1 和/D1/W1目录下的文件 f1 可能是相同的文件，也可能是不相同的文件。</li>\n</ul>\n<h1 id=\"设备管理\"><a href=\"#设备管理\" class=\"headerlink\" title=\"设备管理\"></a>设备管理</h1><ol>\n<li><strong>程序查询方式</strong><br>最简单的 I/O 控制方式是程序查询方式，要求 CPU 不断使用指令检测方法来获取外设工作状态。由于 CPU 的速度远远高于 I/O 设备，导致 CPU 的绝大部分时间都处于等待 I/O设备过程中，造成 CPU 的运行效率极低。CPU 和外围设备只能串行工作。但是它==管理简单，在要求不高的场合可以被采用==。</li>\n<li><strong>程序中断方式</strong></li>\n</ol>\n<ul>\n<li>某一外设的数据准备就绪后，它“主动”向 CPU 发出中断请求信号，请求 CPU 暂时中断目前正在执行的程序转而进行数据交换；当 CPU 响应这个中断时，便暂停运行主程序，自动转去执行该设备的中断服务程序；当中断服务程序执行完毕（数据交换结束）后，CPU又回到原来的主程序继续执行。</li>\n<li>程序中断方式虽然大大提高了主机的利用率，但是它以字（节）为单位进行数据传送，每完成一个字（节）的传送，控制器便要向 CPU 请求一次中断（做保存现场信息，恢复现场等工作），仍然占用了 CPU 的许多时间。这种方式==对于高速的块设备的 I/O 控制显然不适合==。</li>\n</ul>\n<ol>\n<li><strong>DMA方式</strong></li>\n</ol>\n<ul>\n<li><p>DMA存取方式，是一种完全由硬件执行 I/O 数据交换的工作方式。它既考虑到中断的响应，同时又要节约中断开销。此时，DMA 控制器代替 CPU 完全接管对总线的控制，数据交换不经过 CPU，直接在内存和外围设备之间成批进行。</p>\n</li>\n<li><p>优点：==速度快==，CPU 不参加传送操作，省去了CPU取指令、取数、送数等操作，也没有保存现场、恢复现场之类的工作。</p>\n</li>\n<li>缺点：批量数据传送前的准备工作，以及传送结束后的处理工作，仍由 CPU 通过执行管理程序来承担，DMA 控制器只负责具体的数据传送工作。==CPU仍然摆脱不了管理和控制外设的沉重负担，难以充分发挥高速运算的能力==。</li>\n</ul>\n<ol>\n<li><strong>I/O通道控制方式</strong></li>\n</ol>\n<ul>\n<li>通道是==一个特殊功能的处理器==，代替 CPU 管理控制外设的独立部件。有自己的指令和程序，专门负责数据输入输出的传输控制，而 CPU 在将“传输控制”功能下放给通道后，只负责“数据处理”功能。通道与 CPU 分时使用主存，实现了 CPU 内部运算与 I/O 设备的并行工作。</li>\n</ul>\n<ol>\n<li><strong>输入输出处理机方式</strong></li>\n</ol>\n<ul>\n<li>采用专用的小型通用计算机，可完成 I/O 通道所完成的 I/O 控制，还可完成码制转换、格式处理、检错纠错等操作，具有相应的运算处理部件、缓冲部件，还可形成 I/O 程序锁必需的程序转移手段。输入输出处理机基本独立于主机工作。在多数系统中，设置多台外围处理机，分别承担 I/O 控制、通信、维护等任务。</li>\n<li>目前单片机、微型机多采用程序查询、程序中断和 DMA 方式。通道方式和输入输出处理机方式一般用在大中型计算机中。</li>\n</ul>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E5%9F%BA%E7%A1%80/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E5%9F%BA%E7%A1%80/",
            "title": "计算机硬件基础(部分组成原理)",
            "date_published": "2021-03-08T13:59:16.000Z",
            "content_html": "<h1 id=\"计算机体系结构\"><a href=\"#计算机体系结构\" class=\"headerlink\" title=\"计算机体系结构\"></a>计算机体系结构</h1><h2 id=\"数据的表示\"><a href=\"#数据的表示\" class=\"headerlink\" title=\"数据的表示\"></a>数据的表示</h2><hr>\n<h3 id=\"进制转换\"><a href=\"#进制转换\" class=\"headerlink\" title=\"进制转换\"></a>进制转换</h3><ul>\n<li>n进制，逢n进一</li>\n<li>基数：<ul>\n<li>进制中允许使用的数码的个数</li>\n</ul>\n</li>\n<li>位权：<ul>\n<li>不同位置数码代表的数值</li>\n</ul>\n</li>\n<li><p><strong>十进制</strong><br>|位权|$10^3$|$10^2$|$10^1$|$10^0$|<br>|:——:|:——:|:——:|:——:|:——:|<br>|位数|4（千位）|3（百位）|2（十位）|1（个位）|</p>\n<ul>\n<li>$(123)_{10}$= 3$\\times<script type=\"math/tex\">10^0$+2$\\times</script>10^1$+1$\\times$$10^2$=3+20+100=123</li>\n<li>十转二：$(24)_{10}$= $2^4$+$2^3$=$(11000)_2$</li>\n</ul>\n</li>\n<li><p><strong>二进制</strong><br>|位权|$2^3$|$2^2$|$2^1$|$2^0$|<br>|:—:|:—:|:—:|:—:|:—:|<br>|位数|4（八）|3（四）|2（二）|1（个）|</p>\n<ul>\n<li>二转十：$(110)_2$=0$\\times<script type=\"math/tex\">2^0$+1$\\times</script>2^1$+1$\\times$$2^2$=0+2+4=$6$</li>\n</ul>\n</li>\n<li><p><strong>八进制</strong><br>|位权|$8^3$|$8^2$|$8^1$|$8^0$|<br>|:—:|:—:|:—:|:—:|:—:|<br>|位数|4（五百一十二）|3（六十四）|2（八）|1（个）|</p>\n<ul>\n<li>八转十：$(127)_8$=7$\\times<script type=\"math/tex\">8^0$+2$\\times</script>8^1$+1$\\times$$8^2$=7+16+64=$87$</li>\n</ul>\n</li>\n<li><p><strong>十六进制</strong><br>|位权|$16^2$|$16^1$|$16^0$|<br>|:—:|:—:|:—:|:—:|<br>|位数|3（二百五十六）|2（十六）|1（个）|</p>\n<ul>\n<li>十六进制表示，逢十六进一；1-9,10A,11B,12C,13D,14E,15F</li>\n<li>十六进制的10-15与二进制转换<br>|十六进制|二进制|<br>|:——:|:——:|<br>|A|1010|<br>|B|1011|<br>|C|1100|<br>|D|1101|<br>|E|1110|<br>|F|1111|</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>详细视频讲解：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMU54NDExWTdBRD9mcm9tPXNlYXJjaCZhbXA7c2VpZD0zMjY1NjI5MjkxNTkyNjIwODU4\">https://www.bilibili.com/video/BV1Nx411Y7AD?from=search&amp;seid=3265629291592620858</span></p>\n</blockquote>\n<h3 id=\"原码、反码、补码和移码\"><a href=\"#原码、反码、补码和移码\" class=\"headerlink\" title=\"原码、反码、补码和移码\"></a>原码、反码、补码和移码</h3><ul>\n<li><strong>原码</strong><ul>\n<li>原码就是符号位加上真值的绝对值，即用第一位表示符号，其余位表示值。例如：假设用 8 位表示一个数值，则 <code>+11</code> 的原码是 <code>00001011</code>，<code>-11</code> 的原码是 <code>10001011</code></li>\n</ul>\n</li>\n<li><strong>反码</strong><ul>\n<li>反码通常是用来由原码求补码或者由补码求原码的过渡码。反码表示法和原码表示法一样是在数值前面增加了一位符号位（即最高位为符号位），<font color=red>正数的反码与原码相同</font> ，<font color=red>负数的反码符号位为1 ，其余各位为该数绝对值的原码按位取反</font>。例如：<code>+11</code> 的反码是 <code>00001011</code>，<code>-11</code> 的反码为 <code>11110100</code>。</li>\n</ul>\n</li>\n<li><strong>补码</strong><ul>\n<li>补码表示法和原码表示法一样是在数值前面增加了一位符号位（即最高位为符号位），<font color=red>正数的补码与原码相同</font> ，<font color=red>负数的补码是该数的反码末尾加1</font> ，这个加 1 就是“补”。例如：<code>+11</code> 的补码是 <code>00001011</code>，<code>-11</code> 的补码为 <code>11110101</code>。</li>\n<li><strong>注意：其中负数补码转原码，符号位保留，其余各位取反+1。</strong></li>\n</ul>\n</li>\n<li><strong>移码</strong><ul>\n<li>移码（又叫增码）是<font color=red>符号位取反的补码</font>，一般用指数的移码减去 1 来做浮点数的阶码，引入的目的是为了保证浮点数的机器零为全 0。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"校验码\"><a href=\"#校验码\" class=\"headerlink\" title=\"校验码\"></a>校验码</h3><ul>\n<li><strong>码距</strong> ：<ul>\n<li>在一个编码系统中，任意两个合法编码之间至少有多少个二进制位不同</li>\n</ul>\n</li>\n<li><strong>奇偶效验码</strong> ：<ul>\n<li>通过在编码中增加 1 的个数为奇数或者偶数从而使码距为 2。</li>\n</ul>\n</li>\n<li><strong>海明码</strong> ：<ul>\n<li>利用奇偶性来检错和校验的方法。假设有 m 位信息码，加入 k 位校验码，则==m+k+1$\\leq$$2^k$==</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"处理器组成\"><a href=\"#处理器组成\" class=\"headerlink\" title=\"处理器组成\"></a>处理器组成</h2><hr>\n<h3 id=\"运算器\"><a href=\"#运算器\" class=\"headerlink\" title=\"运算器\"></a>运算器</h3><ul>\n<li>运算器通常是由 ALU（算术/逻辑单元，包括累加器、加法器等）、通用寄存器（不包含地址寄存器）等组成。</li>\n<li><p><strong>ALU</strong> ：==进行算数运算和逻辑运算。==</p>\n<ul>\n<li>支持基本的==算术运算、按位逻辑运算、移位操作、多倍精度运算、复杂运算==</li>\n<li>其中复杂运算包括： <font color=red>单周期运算、流水线运算、迭代运算</font></li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/09/68gjdx.png\" alt=\"alu\"></p>\n</li>\n<li><p><strong>累加器AC</strong> ：==暂时存放 ALU 运算的结果信息==。</p>\n</li>\n<li><strong>数据缓冲寄存器</strong> ：用来暂时存放由内存储器读出的一条指令或一个数据字。反之，当向内存存入一条指令或一个数据字时，也暂时将它们存放在数据缓冲寄存器中。状态条件寄存器（PSW）保存由算术指令和逻辑指令运算的状态和程序的工作方式。<h3 id=\"控制器\"><a href=\"#控制器\" class=\"headerlink\" title=\"控制器\"></a>控制器</h3></li>\n<li>控制器的组成包含程序计数器（PC）、指令寄存器（IR）、指令译码器、时序部件等。</li>\n<li><strong>程序计数器（PC）</strong> ：存放的是下一条指令的地址。</li>\n<li><strong>指令寄存器（IR）</strong> ：用来保存当前正在执行的一条指令。</li>\n<li><strong>指令译码器</strong> ：指令中的操作码经过指令译码器译码后，即可向操作控制器发出具体操作的特定信号。</li>\n<li><strong>时序部件</strong> ：为指令的执行产生时序信号。<h3 id=\"总线\"><a href=\"#总线\" class=\"headerlink\" title=\"总线\"></a>总线</h3></li>\n<li>微型计算机通过系统总线将各部件连接到一起，实现了微型计算机内部各部件间的信息交换。</li>\n<li><strong>数据总线DB</strong> 用于传送数据信息。</li>\n<li><strong>地址总线AB</strong> 是专门用来传送地址的，地址总线的位数决定了 CPU 可直接寻址的内存空间大小。一般来说，若地址总线为 n 位，则可寻址空间为 $2^n$ 字节。</li>\n<li><strong>控制总线CB</strong> 用来传送控制信号和时序信号。</li>\n</ul>\n<h4 id=\"地址总线总结\"><a href=\"#地址总线总结\" class=\"headerlink\" title=\"地址总线总结\"></a>地址总线总结</h4><ul>\n<li>地址总线的 <strong>位数</strong> 决定了 ==CPU可直接寻址的内存空间大小==，如8位微机的地址总线为 <strong>16位</strong> ，则其最大可寻址空间为： <script type=\"math/tex\">2^{16}=64KB</script> 16位微机的地址总线为 <strong>20位</strong>，其可寻址空间为 <script type=\"math/tex\">2^{20} =1MB</script> </li>\n<li><strong>一般来说，若地址总线为n位，则可寻址空间为$2^n$字节</strong></li>\n</ul>\n<h2 id=\"指令系统\"><a href=\"#指令系统\" class=\"headerlink\" title=\"指令系统\"></a>指令系统</h2><hr>\n<ul>\n<li>指令系统是中央处理器==所有指令的集合==，通常一条指令可分解为<font color=red>操作码和地址码两部分</font>，操作码确定指令的操作类型，地址码确定指令所要处理操作数的位置。</li>\n</ul>\n<h3 id=\"寻址方式\"><a href=\"#寻址方式\" class=\"headerlink\" title=\"寻址方式\"></a>寻址方式</h3><ul>\n<li><p>指令系统中采用不同寻址方式的目的是扩大寻址空间并提高编程灵活性。常见的寻址方式如图所示：</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/09/68R13D.png\" alt=\"xzfs\"></p>\n</li>\n</ul>\n<ol>\n<li><strong>立即寻址方式</strong> ：通常直接在指令的地址码部分给出操作数。</li>\n<li><strong>内存寻址</strong><ul>\n<li>直接寻址方式：在指令中直接给出参加运算的操作数或运算结果所存放的主存地址。</li>\n<li>间接寻址方式：在指令中给出操作数地址的地址。</li>\n<li>变址寻址方式：变址寻址就是变址寄存器中的内容加地址码中的内容即可完成寻址。</li>\n</ul>\n</li>\n<li><strong>寄存器寻址</strong><ul>\n<li>寄存器直接寻址：指令在执行过程中所需要的操作数来源于寄存器。</li>\n<li>寄存器间接寻址：寄存器存放的是操作数在主存的地址。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"RISC和CISC\"><a href=\"#RISC和CISC\" class=\"headerlink\" title=\"RISC和CISC\"></a>RISC和CISC</h3><ul>\n<li><strong>RISC和CISC都是当今CPU的两大开发技术</strong></li>\n<li><strong>RISC</strong> ，即精简指令集计算机，属于CPU的一种==设计模式==，对指令数目和寻址方式做了精简<ul>\n<li>采用 <strong>定长指令格式</strong></li>\n<li>需要较大的存储空间</li>\n<li>常见的精简指令集微处理器有 ARC、ARM、AVR等</li>\n</ul>\n</li>\n<li><p><strong>CISC</strong> ，即复杂指令集计算机，<font color=red>特点是指令数目多而复杂，每条指令字长不等</font></p>\n<ul>\n<li><strong>CISC指令系统丰富，使用频率差别大，处理特殊任务效率高</strong></li>\n<li>==高级语言实现简单，效率高==</li>\n<li>常见的复杂指令集有VAX、PDP-11、x86等</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/09/68Rzxe.png\" alt=\"zljs\"></p>\n</li>\n</ul>\n<h3 id=\"流水线\"><a href=\"#流水线\" class=\"headerlink\" title=\"流水线\"></a>流水线</h3><ul>\n<li>流水线是指在程序执行时多条指令重叠进行操作的一种准并行处理实现技术。即可以同时为多条指令的不同部分进行工作，以提高各部件的利用率和指令的平均执行速度。</li>\n</ul>\n<h4 id=\"执行指令的三大阶段\"><a href=\"#执行指令的三大阶段\" class=\"headerlink\" title=\"执行指令的三大阶段\"></a>执行指令的三大阶段</h4><ol>\n<li>取指</li>\n<li>分析</li>\n<li>执行<ol>\n<li><strong>流水线指令执行时间</strong><ul>\n<li><strong>标准算法</strong> ：==T＝第一条指令执行所需时间+（指令条数－1）×流水线周期==</li>\n<li>关于流水线的周期，我们需要知道的是，流水线周期为指令执行阶段中执行时间最长的一段。例如指令流水线把一条指令分为取指令、分析和执行 3 个部分，且 3 个部分的时间分别是取指令 2ns、分析 2ns 及执行 1ns。那么最长的是 2ns，因此 100 条指令全部执行完毕所需要的时间就是（2ns+2ns+1ns）+（100－1）$\\times$ 2ns=203ns。</li>\n</ul>\n</li>\n<li><strong>流水线的技术指标</strong><ul>\n<li><strong>吞吐率</strong> ：指的是计算机中的流水线在特定的时间内可以处理的任务数量。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=red>$TP=n/Tk$</font> <br>（n为指令条数，TK 为流水线方式时间），其中理论上的最大吞吐率是：1/流水线周期。</li>\n<li><strong>加速比</strong> ：完成一批任务，不使用流水线所用的时间与使用流水线所用的时间之比称为流水线的加速比。<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=red>$S=TS/Tk$</font> <br>（TS 为顺序执行时间，TK 为流水线方式时间）。流水线的效率指的是流水线的设备利用率。</li>\n</ul>\n</li>\n<li><strong>流水线周期等于执行时间最长给的那个指令周期</strong></li>\n<li><font color=red>$未采用流水线执行时间=(t_{取指}+t_{分析}+t_{执行}\\times总指令数)$</font>\n\n\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"存储系统\"><a href=\"#存储系统\" class=\"headerlink\" title=\"存储系统\"></a>存储系统</h2><hr>\n<h3 id=\"存储方式\"><a href=\"#存储方式\" class=\"headerlink\" title=\"存储方式\"></a>存储方式</h3><ul>\n<li>存储器中数据常用的存取方式有==顺序存取、直接存取、随机存取和相联存取==等四种。</li>\n<li><strong>顺序存取</strong> ：<ul>\n<li>存储器的数据是以记录的形式进行组织，对数据的访问必须按特定的线性顺序进行。磁带存储器的存取方式就是顺序存取。</li>\n</ul>\n</li>\n<li><strong>直接存取</strong> ：<ul>\n<li>共享读写装置，但是每个记录都有一个唯一的地址标识，共享的读写装置可以直接移动到目的数据块所在位置进行访问。访问时间与数据位置有关。磁盘存储器采用的这种方式。</li>\n</ul>\n</li>\n<li><strong>随机存取</strong> ：<ul>\n<li>存储器的每一个可寻址单元都具有唯一地址和读写装置，系统可以在相同的时间内对任意一个存储单元的数据进行访问，而与先前的访问序列无关。主存储器采用的是这种方式。</li>\n</ul>\n</li>\n<li><strong>相联存取</strong> ：<ul>\n<li>也是一种随机存取的形式，但是选择某一单元进行读写是取决于其内容而不是其地址。<code>Cache</code> 采用该方法进行访问。相联存储器是 <code>Cache</code> 一部分，<code>Cache</code> 中有按内容寻址的相联存储器，用于存放与 <code>Cache</code> 中数据相对应的主存地址，可以快速检索、判断 CPU 读取的某个字当前是否存在于 <code>Cache</code> 中。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相关术语\"><a href=\"#相关术语\" class=\"headerlink\" title=\"相关术语\"></a>相关术语</h3><ul>\n<li><strong>位(bit)：</strong> 一个二进制表示1个bit</li>\n<li><strong>字节(B,Byte)：</strong> $1B=8bit$</li>\n<li><strong>字：</strong> 表示CPU一次处理的二进制位数，通常为字节的整数倍</li>\n<li><strong>存储容量：</strong> 存储器可容纳的二进制信息的大小</li>\n</ul>\n<h3 id=\"4-3-nbsp-存储设备\"><a href=\"#4-3-nbsp-存储设备\" class=\"headerlink\" title=\"4.3&nbsp;存储设备\"></a>4.3&nbsp;存储设备</h3><ul>\n<li>传统意义上存储器分为 RAM 和 ROM。<ol>\n<li><strong>RAM和ROM</strong><ul>\n<li>RAM 是随机存储器，数据可读可写，一旦掉电，数据将消失。ROM 是只读存储器，掉电后数据依然保存。</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>RAM 有静态和动态两种：<ul>\n<li>静态 RAM 只要上电后信息不丢失，无须刷新电路过程，消耗较多功率，价格也较高。常作为芯片中的<code>Cache</code>使用。</li>\n<li>最常用的动态 RAM 需要上电后，再定时刷新电路才能保持数据，而动态 RAM 集成度高、存储密度高、成本低，功耗低，适于作大容量存储器。常用在内存中。</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li><strong>Cache</strong><ul>\n<li>在计算机执行时，需要从主存中读取指令和数据，需要将外存的数据读入内存中，这些读取的过程都是造成计算机性能下降的瓶颈，为了尽可能减少速度慢的设备对速度快的设备的约束，可以利用高速缓存<code>Cache</code>技术。</li>\n</ul>\n</li>\n<li><strong>磁盘</strong><ul>\n<li>与计算机技术一样，存储技术也在不断发展，在现代计算机中，最常见的存储介质包括机械硬盘、光盘、磁带，固态硬盘SSD等。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"存储计算\"><a href=\"#存储计算\" class=\"headerlink\" title=\"存储计算\"></a>存储计算</h3><ul>\n<li>实际的存储器总是由一片或多片存储芯片+控制电路构成的。<br><font color=red>$芯片数量≥存储器容量/存储芯片容量$</font></li>\n<li>如果存储器 <strong>有256个存储单元</strong> ，那么它的地址编码为 <code>0～255</code>，对应的二进制数是<code>00000000～11111111</code>，需要用 8 位二进制来表示，也就是地址宽度为 8 位，需要 8 根地址线。存储器中所有存储单元的总和称为这个存储器的存储容量，存储容量的单位是 B、KB、MB、GB 和 TB 等。<ul>\n<li>例如：按某存储器字节编址，地址从 A4000H 到 CBFFFH，则表示有<code>（A4000－CBFFF）＋1</code> 个字节，即 28000H 个字节，转换为十进制是 160KB。若用 16K×4bit 的存储器芯片构成该内存，共需 160K $\\times$ 8/16K $\\times$ 4=20 片。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<script type=\"math/tex; mode=display\">存储器地址编码=(最大地址-最小地址)+1</script><script type=\"math/tex; mode=display\">随机存储传输率=1/存储器周期</script><script type=\"math/tex; mode=display\">非随机存储读写N位所需要的平均时间=平均存取时间+N为/数据传输率</script><ul>\n<li><strong>平均存取时间</strong>：</li>\n</ul>\n<script type=\"math/tex; mode=display\">T=H\\times T_1+(1-H)T_2</script><p>  其中Cache的命中率为H，Cache的访问周期为 $T_1$  ,主存的访问周期为 $T_2$</p>\n<ul>\n<li><p><strong>命中率</strong>：</p>\n<script type=\"math/tex; mode=display\">H=N_1/(N_1+N2)</script></li>\n</ul>\n<p>  其中Cache的访问次数为 $N_1$ ,主存的访问次数为 $N_2$ ,H为命中率</p>\n<h3 id=\"系统可靠性\"><a href=\"#系统可靠性\" class=\"headerlink\" title=\"系统可靠性\"></a>系统可靠性</h3><ul>\n<li>计算机系统是一个复杂的系统，而且影响其可靠性的因素也非常繁复，很难直接对其进行可靠性分析。但通过建立适当的数学模型，把大系统分割成若干子系统，可以简化其分析过程。</li>\n</ul>\n<ol>\n<li><p><strong>串联系统</strong></p>\n<ul>\n<li><p>假设一个系统由 n 个子系统组成，<font color=red>当且仅当</font> 所有的子系统都能正常工作时，系统才能正常工作，这种系统称为串联系统，如图所示:</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/09/68WFat.png\" alt=\"clxt\"></p>\n</li>\n<li>设系统各个子系统的可靠性分别用 $R_1$ ，$R_2$ ，…，$R_n$ 表示，则系统的可靠性:<ul>\n<li>==R = $R_1$ $\\times$ $R_2$ $\\times$  …$\\times$  $R_n$==</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>并联系统</strong></p>\n<ul>\n<li><p>假如一个系统由n个子系统组成，<font color=red>只要</font> 有一个子系统能够正常工作，系统就能正常工作，如图所示:</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/09/68WEPf.png\" alt=\"blxt\"></p>\n</li>\n<li>设系统各个子系统的可靠性分别用 $R_1$ ，$R_2$ ，…，$R_n$ 表示，则系统的可靠性：<ul>\n<li>==R = 1-（1-$R_1$ ）$\\times$ （1- $R_2$ ）$\\times$ … $\\times$ （1 - $R_n$ ）==</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"磁盘阵列RAID\"><a href=\"#磁盘阵列RAID\" class=\"headerlink\" title=\"磁盘阵列RAID\"></a>磁盘阵列RAID</h3><ul>\n<li><strong>RAID 0</strong> ：==需要两块以上磁盘==，每个磁盘划分不同的区块，数据采用交叉存取和并行传输这种 ==磁盘利用率高（100％）==， <strong>读写速度最快</strong> ，但由于没有数据差错控制，因此==很容易发生数据错误==</li>\n<li><strong>RAID 1</strong> ：磁盘成对组成，每个工作磁盘均有对应的映射，上面保存着与工作盘完全相同的数据， <strong>具有最高的安全性</strong> 但 ==磁盘利用率为50‰==</li>\n<li><strong>RAID 3</strong> ：把奇偶校验码（只能查不能纠错）存在一个独立的磁盘，如果一个磁盘失效，其上的数据可以通过其亻也盘上数据进行异或运算得到，读盘涑度快，但写入速度慢。适用于图像处理等要求高吞吐率的场合，==磁盘利用率：$n-1/n$==.</li>\n<li><strong>RAID 5</strong> ：各块磁盘进行条带化分割，相同的条带进行分布式奇偶校验，检验数据平均分配在每一块硬盘上。==磁盘利用率：$n-1/n$==</li>\n<li><strong>组合RAID技术</strong> ：RAID1+0以及RAID0+1，是RAID0与RAID1组合形式，它提供RAID1 的安全保障同时提供RAID0近似的访问速度。RAID1+0拥有更高的数据安全性在企业中更常使用。</li>\n</ul>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%92%8C%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%92%8C%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80/",
            "title": "系统开发和项目管理基础",
            "date_published": "2021-03-08T01:23:54.000Z",
            "content_html": "<h1 id=\"软件生命周期与开发模型\"><a href=\"#软件生命周期与开发模型\" class=\"headerlink\" title=\"软件生命周期与开发模型\"></a>软件生命周期与开发模型</h1><h2 id=\"软件生命周期\"><a href=\"#软件生命周期\" class=\"headerlink\" title=\"软件生命周期\"></a>软件生命周期</h2><ul>\n<li><strong>计划周期</strong><ul>\n<li>问题定义<ul>\n<li>落实问题的性质、工程目标与规模</li>\n</ul>\n</li>\n<li>可行性研究<ul>\n<li>==估计系统的成本和效益==</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>开发周期</strong><ul>\n<li>需求分析</li>\n<li>总体设计<ul>\n<li>确立 ==总体结构和模块模块关系，定义模块之间的接口，指定综合测试规划==</li>\n</ul>\n</li>\n<li>详细设计<ul>\n<li>设计 ==模块内的细节，算法数据结构和接口信息==</li>\n</ul>\n</li>\n<li>编码 </li>\n<li>调试</li>\n</ul>\n</li>\n<li><strong>运行时期</strong><ul>\n<li>维护</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"软件开发模型\"><a href=\"#软件开发模型\" class=\"headerlink\" title=\"软件开发模型\"></a>软件开发模型</h2><blockquote>\n<p>参考模型详解： <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaHVhd2VpY2xvdWQuY29tL2FydGljbGVzL2Q3M2NjMzA2NTg5Njk3YjA1ZTBjYWUwMWNjNWM2NWUyLmh0bWw=\">https://www.huaweicloud.com/articles/d73cc306589697b05e0cae01cc5c65e2.html</span></p>\n</blockquote>\n<ul>\n<li><p><strong>瀑布模型</strong></p>\n<ul>\n<li>自顶向下，依次进行的线性模型</li>\n<li>每个步骤要进行审核，建立检查点</li>\n<li>最早的模型，现在已弃用；开发的后期测试阶段才可能找到错误，犯错成本高</li>\n<li>但若是建立一个较为成熟的软件开发模板，可使用该模型，因为该模型目的性强，功能性高，且需求明确</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/08/6l08uF.jpg\" alt=\"pbmx\"></p>\n</li>\n<li><p><strong>V模型</strong></p>\n<ul>\n<li>测试活动重点化</li>\n<li>可尽早发现问题，降低犯错成本</li>\n</ul>\n</li>\n</ul>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/03/08/6lU1wn.jpg\" alt=\"vmx\"></p>\n<ul>\n<li><p><strong>喷泉模型</strong></p>\n<ul>\n<li>是 ==面向对象设计== 的开发模型</li>\n<li>每个工作步骤之间 ==无间隙== ，可同时执行分析和设计</li>\n<li>每个工作之间  ==相互迭代==</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/08/6l0kjS.png\" alt=\"pqmx\"></p>\n</li>\n<li><p><strong>螺旋模型</strong></p>\n<ul>\n<li>对于有风险的项目可以及时止损</li>\n<li>适合 <strong>大规模开发的软件模型</strong></li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/08/6l0NNR.png\" alt=\"lxmx\"></p>\n</li>\n<li><p><strong>增量模型</strong></p>\n<ul>\n<li>能在较短的时间内向用户提交可完成部分工作的产品。</li>\n<li>逐步增加产品功能可以使用户有充裕的时间学习和适应新产品，从而减少一个 全新的软件可能给客户组织带来的冲击。</li>\n<li>规避技术风险</li>\n<li>可并行开发构件，加快开发的进度</li>\n<li>适用于 <strong>项目在既定的商业要求期限之前不可能找到足够的开发人员</strong></li>\n</ul>\n</li>\n<li><p><strong>原型化模型</strong></p>\n<ul>\n<li>对于许多 ==需求不够明确的项目== ，比较适合采用该模型。原型技术有分为三类：抛弃式、演化式和递增式。</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/08/6l0cEd.png\" alt=\"zlmx\"></p>\n</li>\n<li><p><strong>协同开发模型</strong></p>\n<ul>\n<li>适用于所有软件开发</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"软件开发与测试\"><a href=\"#软件开发与测试\" class=\"headerlink\" title=\"软件开发与测试\"></a>软件开发与测试</h1><ul>\n<li>划分软件系统模块应做到 ==高内聚，低耦合==</li>\n</ul>\n<h2 id=\"测试分类\"><a href=\"#测试分类\" class=\"headerlink\" title=\"测试分类\"></a>测试分类</h2><ul>\n<li><strong>动态测试</strong><ul>\n<li>白盒测试<ul>\n<li>即透明盒测试，是基于代码的测试，也称 ==结构测试== 、 ==逻辑测试==</li>\n<li>主要检测软件代码中的错误，修改代码的逻辑和参数</li>\n</ul>\n</li>\n<li>黑盒测试<ul>\n<li>直接让软件运行起来测试，不考虑软件的底层代码与内部结构，只关心软件的输入输出</li>\n<li>也称  ==功能测试==</li>\n<li>黑盒与白盒测试是互补的，缺一不可</li>\n</ul>\n</li>\n<li>灰盒测试<ul>\n<li>既关心软件代码，也关心软件的输入和输出，相当于是黑盒与白盒的结合</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>静态测试</strong><ul>\n<li>采用人工检测和计算机辅助静态分析的手段对程序进行检测。静态分析中进行人工测试的主要方法有桌前检查（程序员自查）、代码审查和代码走查。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"软件测试\"><a href=\"#软件测试\" class=\"headerlink\" title=\"软件测试\"></a>软件测试</h2><ul>\n<li><strong>单元测试</strong><ul>\n<li>测试的是模块接口，局部数据结构，边界条件，独立的路径，错误处理</li>\n</ul>\n</li>\n<li><strong>集成测试</strong><ul>\n<li>模块间的接口和通信</li>\n</ul>\n</li>\n<li><strong>系统测试</strong><ul>\n<li>包括恢复测试、安全性测试、强度测试、性能测试、可靠性测试和安装测试</li>\n</ul>\n</li>\n<li><strong>验收测试</strong><ul>\n<li>包括有效性测试、软件配置审查、验收测试</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"项目管理\"><a href=\"#项目管理\" class=\"headerlink\" title=\"项目管理\"></a>项目管理</h1><h2 id=\"九大知识领域\"><a href=\"#九大知识领域\" class=\"headerlink\" title=\"九大知识领域\"></a>九大知识领域</h2><ol>\n<li><strong>范围管理</strong></li>\n<li><strong>时间管理</strong></li>\n<li><strong>成本管理</strong></li>\n<li><strong>质量管理</strong></li>\n<li><strong>人力资源管理</strong></li>\n<li><strong>沟通管理</strong></li>\n<li><strong>风险管理</strong></li>\n<li><strong>采购管理</strong></li>\n<li><strong>整体管理</strong></li>\n</ol>\n<h2 id=\"甘特图-Gantt-Chart\"><a href=\"#甘特图-Gantt-Chart\" class=\"headerlink\" title=\"甘特图(Gantt Chart)\"></a>甘特图(Gantt Chart)</h2><ul>\n<li>==通过条状图来显示项目、进度和其他时间相关的系统进展的内在关系随着时间进展的情况。==</li>\n<li><strong>优点</strong><ul>\n<li>在于标明了各任务的计划进度和当前进度，能动态地反映项目进展</li>\n</ul>\n</li>\n<li><p><strong>缺点</strong></p>\n<ul>\n<li>在于难以反映多个任务之间存在的复杂逻辑关系</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/08/6l0HEj.png\" alt=\"gtt\"></p>\n</li>\n</ul>\n<h2 id=\"PERT图-计划审计方法\"><a href=\"#PERT图-计划审计方法\" class=\"headerlink\" title=\"PERT图(计划审计方法)\"></a>PERT图(计划审计方法)</h2><ul>\n<li><strong>定义</strong>：<ul>\n<li>一种 ==网络模型==，描述一个项目任务之间的关系。可以明确表达任务之间的依赖关系，即哪些任务完成后才能开始另一些任务，以及如期完成整个工程的关键路径，但是不能清晰地描述各个任务之间的并行关系。</li>\n</ul>\n</li>\n<li><strong>关键路径</strong>：<ul>\n<li>==从开始定点到结束定点的最长路径（时间开销最大路径）== 即为关键路径</li>\n</ul>\n</li>\n<li><p><strong>松弛时间</strong>：</p>\n<ul>\n<li>==松弛时间=关键路径的时间-(包含某活动最长路径所需要的时间)==</li>\n<li>第一种求法：最晚开始时间-最早开始时间</li>\n<li>第二种求法：关键路径的总时间-包含该任务的关键路径花的时间</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/08/6l0q5n.jpg\" alt=\"pret\"></p>\n</li>\n<li><p><strong>软件编码规模</strong></p>\n<ul>\n<li>==软件编码规模=(最大规模+4最可能的规模+最小规模)/6==</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8F%E8%AE%AE%E5%90%8D%E7%A7%B0%E4%B8%8E%E7%AE%80%E4%BB%8B/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%8D%8F%E8%AE%AE%E5%90%8D%E7%A7%B0%E4%B8%8E%E7%AE%80%E4%BB%8B/",
            "title": "协议名称与简介",
            "date_published": "2021-03-04T05:08:49.000Z",
            "content_html": "<h1 id=\"常用的协议名称\"><a href=\"#常用的协议名称\" class=\"headerlink\" title=\"常用的协议名称\"></a>常用的协议名称</h1><hr>\n<h2 id=\"计算机网络概论\"><a href=\"#计算机网络概论\" class=\"headerlink\" title=\"计算机网络概论\"></a>计算机网络概论</h2><ul>\n<li><strong>SAP</strong> ；<code>service access point</code> /服务访问点。<ul>\n<li>N+1 实体从 N 服务访问点 SAP 获得 N 服务。13</li>\n</ul>\n</li>\n<li><strong>CEP</strong> ；<code>connection end point</code> /连接端点。<ul>\n<li>N 连接的两端叫做 N 连接端点。14</li>\n</ul>\n</li>\n<li><strong>SNA</strong> ；系统网络体系结构。<ul>\n<li>是一种以大型主机为中心的集中式网络。18</li>\n</ul>\n</li>\n<li><strong>APPN Advanced Peer-to-Peer Networking</strong> 高级点对点网络 19</li>\n<li><strong>X.25</strong> ；包括了通信子网最下边的三个逻辑功能层，即==物理层、链路层和网络层==。20</li>\n<li><strong>VC</strong> ；<code>virtual circuit</code> /虚电路连接。20</li>\n</ul>\n<hr>\n<h2 id=\"数据通信基础\"><a href=\"#数据通信基础\" class=\"headerlink\" title=\"数据通信基础\"></a>数据通信基础</h2><ul>\n<li><strong>PCM</strong> ：脉冲调制技术 40</li>\n<li><strong>PAD</strong> ；<code>packet assembly and disassembly device</code> /分组拆装设备。<ul>\n<li>在发送端要有一个设备对信息进行分组和编号，在接收端也要有一个设备对收到的分组拆去头尾并重排顺序。具有这些功能的设备叫做 PAD.（在以数据报的传播方式中）45</li>\n</ul>\n</li>\n<li><strong>CATV</strong> ；有线电视系统。46</li>\n<li><strong>TDM</strong> ；<code>time division multiplexing</code> /时分多路复用。47</li>\n<li><strong>WDM</strong> ；<code>wave division multiplexing</code> /波分多路复用。48</li>\n<li><p><strong>FDM</strong> ：<code>Frequency-division multiplexing</code> /频分多路复用</p>\n</li>\n<li><p><strong>CRC</strong> ；<code>cyclic redundancy check</code> /循环冗余校验码。53</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"广域通信网\"><a href=\"#广域通信网\" class=\"headerlink\" title=\"广域通信网\"></a>广域通信网</h2><ul>\n<li><strong>PSTN</strong> ；<code>public switched telephone network</code> /公共交换电话网。56</li>\n<li><strong>DTE</strong> ；<code>data terminal equipment</code> /数据终端设备。57</li>\n<li><p><strong>DCE</strong> ；<code>data circuit equipment</code>/数据电路设备。 57</p>\n</li>\n<li><p><strong>Modem</strong> ：<code>modulation and demodulation</code> /调制解调器，</p>\n<ul>\n<li>家用电脑上 Internet(国际互联网)网的必备工具，在一般英汉字典中是查不到这个词的，它是调制器(MOdulator)与解调器(DEModulator)的缩写形式。Modem 是实现计算机通信的一种必不可少的外部设备。因为计算机的数据是数字信号，欲将其通过传输线路(例如电话线)传送到远距离处的另一台计算机或其它终端(如电传打字机等)，必须将数字信号转换成适合于传输的模拟信号(调制信号)。在接收端又要将接收到的模拟信号恢复成原来的数字信号，这就需要利用调制解调器。61</li>\n</ul>\n</li>\n<li><p><strong>TCM</strong> ；<code>trellis coded modulation</code> /格码调制技术。现代的高速 Modem（调制解调器）采用的技术。61</p>\n</li>\n<li><p><strong>ARQ</strong> ；（ <code>Automatic Repeat Request</code> ）ARQ 技术，</p>\n<ul>\n<li>主要思想：利用差错检测技术自动地对丢失帧和错误帧请求重发。停等 ARQ 协议，选择重发 ARQ 协议，后退 N 帧 ARQ 协议。 67</li>\n</ul>\n</li>\n<li><p><strong>HDLC</strong> ；<code>high level data link control</code> /高级数据链路控制协议。由 SDLC 协议扩充开发而成的。69</p>\n</li>\n<li><strong>PVC</strong> ；<code>permanent virtual circuit</code> /永久虚电路。<ul>\n<li>X.25 的分组层提供的虚电路服务形式中的一种。另一种是SVC(交换虚电路)。PVC 是网络指定的固定虚电路，像专用线一样，无需建立和清楚连接，可直接传送数据。PVC 适用于通过路由器维持恒定连接，从而便于在动态网络环境下传输路由选择信息的电路。75</li>\n</ul>\n</li>\n<li><strong>SVC</strong> ；<code>switched virtual call</code> /交换虚电路。<ul>\n<li>X.25 的分组层提供的虚电路服务形式中的一种。另一种是 PVC(永久虚电路)。SVC 是动态建立的虚电路，包含呼叫建立、数据传送和呼叫清除等几个过程。（以呼叫的形式通过信令来建立和释放）75</li>\n</ul>\n</li>\n<li><strong>UNI</strong> ；用户-网络接口。87</li>\n<li><strong>NNI</strong> ；<code>user-network interface</code> /网络-网络接口。87</li>\n<li><strong>DLCI</strong> ；<code>data link connection identifier</code>/数据链路连接标识符。87</li>\n<li><strong>LAP-B</strong> ；<code>Link Access Procedure-Balanced</code> /链路访问平衡协议。<ul>\n<li>是 HDLC(高级数据链路控制)的子集，是链路层提供可靠数据传输的标准。</li>\n</ul>\n</li>\n<li><strong>LAP-D</strong> ；链路访问规程 D-信道。<ul>\n<li>是 CCITT 建议的 I 系列的一部分。它是为综合业务数字网络(ISDN)连接的 D 信道而设计的。D 信道是一种 ISDN 的信号传载信道。它与传输音频和数据的 B 信道共存。D 信道也能传输分组交换数据。LAP-D 为建立复杂信道，并在两点之间获得多逻辑链路提供了途径。帧结构是典型的，它包括标志、地址信息、控制信息、数据、帧检测序列和结束标志。地址能够确定服务的类型，例如是音频和数据，并终止服务。 80</li>\n</ul>\n</li>\n<li><strong>ISDN</strong> ；<code>integrated service digital network</code> /综合业务数字网。<ul>\n<li>分为 <code>narrowband integrated service digital network</code>/N-ISDN；窄带 ISDN 和 <code>Broadband integrated service digital network</code> /B-ISDN；宽带 ISDN；83</li>\n</ul>\n</li>\n<li><strong>STM</strong> ；<code>synchronous transfer mode</code> /同步传输模式。<ul>\n<li>电路交换网络按照时分多路的原理将信息从一个节点传送到另外一个节点，这种技术叫做 STM。86</li>\n</ul>\n</li>\n<li><strong>ATM</strong> (<code>asynchronous transfer mode</code>) /异步传输模式<ul>\n<li>一种能够实时传输数据、声音、视频和帧中继通信的网络技术。数据（包括帧中继数据）都被分为多个分别包含 53 字节的数据包，而这些数据包又以 1.5 到 622 Mbps 的速率在系统的任意两个节点之间进行交换。ATM 是在宽带 ISDN 协议中与 ISO/OSI 模型的 1 层和 2 层对应的层中定义的。目前通常用于包含工作站和个人计算机的局域网中。请参阅“综合服务数字网络”以及“国际标准化组织的开放式系统互联模型”。87</li>\n</ul>\n</li>\n<li><strong>VCC</strong> ；<code>CadenceVirtual Component Co-design</code> /它是第一个为 IP 复用所设计的工业系统级 HW/SWco-design 开发平台环境。<ul>\n<li>Cadence VCC 通过电子供给链进行交流和交换设计信息,为系统库和 SOC 提供必要的框架。92</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"局域网和城域网\"><a href=\"#局域网和城域网\" class=\"headerlink\" title=\"局域网和城域网\"></a>局域网和城域网</h2><ul>\n<li><strong>Hub</strong> ；集线器。星型拓扑结构的中心节点。97</li>\n<li><strong>MAC</strong> ；<code>media access control</code> /介质访问控制子层。<ul>\n<li>IEEE802 标准吧数据链路层划分为两个子层。与物理介质相关的叫做 MAC 子层。99</li>\n</ul>\n</li>\n<li><strong>NOS</strong> ；<code>Network operating system</code> /网络操作系统。<ul>\n<li>即是，NOS 提供文件服务、打印服务、数据库服务、通信服务、信息服务、分布式服务、网络管理服务和 Internet/Intranet 服务。99</li>\n</ul>\n</li>\n<li><strong>DSAP</strong> ；目标地址。<ul>\n<li>在 IEEE802.2 中的地址字段用 DSAP 表示目标地址。101</li>\n</ul>\n</li>\n<li><strong>SSAP</strong> ；源地址。在 IEEE802.2 中的地址字段用 SSAP 表示源地址。101</li>\n<li><strong>LLC</strong> ；<code>Logic Link Control</code> /逻辑链路控制。<ul>\n<li>数据链路层划分为逻辑链路层 LLC 子层和介质访问控制 MAC子层。LLC 负责识别网络层协议，然后对它们进行封装。LLC 报头告诉数据链路层一旦帧被接收到时，应当对数据包做何处理。它的工作原理是这样的：主机接收到帧并查看其 LLC 报头，以找到数据包的目的地，如网际层的 IP 协议。LLC 子层也可以提供流量控制并控制比特流的排序。102</li>\n</ul>\n</li>\n<li><strong>CSMA/CD协议</strong> ；载波监听多路访问协议。<ul>\n<li>CSMA 基本原理：站在发送数据前，先监听信道上是否有别的站发送的载波信号，若有，说明信道正忙，否则信道是空闲的。则根据预定的策略决定：<ul>\n<li>1.若信道空闲，是否立即发送。</li>\n<li>2.若信道忙，是否继续监听。103</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>ALOHA协议</strong> ，和 CSMA/CD 都是随访问或竞争发送协议。 103</li>\n<li><strong>MAN</strong> ；<code>Metropolitan Area Network</code> /城域网。<ul>\n<li>其作用范围在广域网和局域网之间。城域网的传输速率也在 1Mbps 以上，其作用距离约为 5km—50km。106</li>\n</ul>\n</li>\n<li><strong>NIC</strong> ；网卡。110</li>\n<li><strong>EDLC</strong> ；<code>Ethernet data link controller</code> /以太网数据链路控制器。<ul>\n<li>是网卡上的主要器件，有两套独立的系统，分别用于发送和接收。111</li>\n</ul>\n</li>\n<li><strong>VLAN</strong> （<code>Virtual Local Area Network</code>）的中文名为”虚拟局域网”。<ul>\n<li>VLAN 是一种将局域网设备从逻辑上划分成一个个网段，从而实现虚拟工作组的新兴数据交换技术。118</li>\n</ul>\n</li>\n<li><strong>BPDU</strong> ；网桥协议数据单元。<ul>\n<li>网桥之间要交换信息，这种信息以网桥协议数据单元的形式在所有网桥之间传播。126</li>\n</ul>\n</li>\n<li><strong>RSTP</strong> :<code>Rapid Spanning Tree Protocol</code> /快速生成树协议<ul>\n<li>用于加快生成树的收敛速度。128</li>\n</ul>\n</li>\n<li><strong>RPR</strong> ；<code>Resilient Packet Ring</code> /弹性分组环。<ul>\n<li>是一种采用环型拓扑的城域网技术。135</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"无线通信网\"><a href=\"#无线通信网\" class=\"headerlink\" title=\"无线通信网\"></a>无线通信网</h2><ul>\n<li><strong>CDMA</strong> ；<code>code division multiple access</code> /码分多路复用。141</li>\n<li><strong>WLAN</strong> ；(<code>Wireless Local Area Networks</code>) /无线局域网络。<ul>\n<li>这是相当便利的数据传输系统，它利用射频(RadioFrequency； RF)的技术，取代旧式碍手碍脚的双绞铜线(Coaxial)所构成的局域网络，使得无线局域网络能利用简单的存取架构让用户透过。143</li>\n</ul>\n</li>\n<li><strong>BSS</strong> ; <code>Basic Service Set</code> /基本业务集。接入点 AP 控制的所有终端组成一个 BSS。144</li>\n<li><strong>DS</strong> ; <code>distribution system</code>/分布式系统。144</li>\n<li><strong>AP</strong> ；<code>Access Point</code> 接入点，无线终端通过 AP 访问骨干网络。144</li>\n<li><strong>BSA</strong> ; <code>Basic Service Area</code> /基本业务区。一个接入点 AP 覆盖的区域叫做 BSA。144</li>\n<li><strong>IR</strong> ：<code>Infrared Ray</code> /红外线通信技术。<ul>\n<li>红外线设备简单便宜，但受光照影响较大，对眼睛产生不良影响。145</li>\n</ul>\n</li>\n<li><strong>PAM</strong> ；脉冲幅度调制。146</li>\n<li><strong>PDM</strong> ；脉冲宽度调制。146</li>\n<li><strong>PPM</strong> ；脉冲位置调制。146</li>\n<li><strong>DSSS</strong> ；<code>direct sequence spread spectrum</code> /直接序列扩展频谱。146</li>\n<li><strong>FHSS</strong> ；<code>ferquency-hopping spread spectrum</code> /频率跳动扩展频谱。146</li>\n<li><strong>PLCP</strong> ；<code>physical layer convergence protocol</code> /物理层汇聚协议。<ul>\n<li>物理层分为物理层汇聚协议、物理介质相关子层和 PHY 管理子层。150</li>\n</ul>\n</li>\n<li><strong>CSMA/CA</strong> ；载波监听多路访问/冲突避免协议。类似于 CSMA/CD 协议。152</li>\n<li><strong>RTS/CTS</strong> ；在 RTS/CTS 机制中，源终端先发送一个“请求发送”帧 RTS，目标终端收到 RTS 后等待一个 SIFS时间，然后发送“允许发送”帧 CTS。153</li>\n<li><strong>MAC子层定义了三种访问控制机制</strong> ：CSMA/CA 支持竞争访问，RTS/CTS 和点协调功能支持无竞争的访问。154</li>\n<li><strong>WEP</strong> ：<code>Wired Equivalent Privacy</code>/有线等效保密技术<ul>\n<li>运用于IEEE 802.11，又称无线加密协议，包括共享密钥认证和数据加密两个过程。156</li>\n</ul>\n</li>\n<li><strong>DSDV</strong> ：<code>Destination-Sequenced Distance Vector</code>/目标排序的距离矢量协议<ul>\n<li>一种扁平式的==路由协议== 159</li>\n</ul>\n</li>\n<li><strong>AODV</strong> ：<code>Ad hoc On-Demand Distance Vector</code>/按需分配的距离矢量协议<ul>\n<li>一种扁平式的==路由协议== 162</li>\n</ul>\n</li>\n<li><p><strong>OFDM</strong> ： <code>Orthogonal Frequency Division Multiplexing</code>/正交频分复用技术</p>\n<ul>\n<li>是一种多载波调制技术。168</li>\n</ul>\n</li>\n<li><p><strong>PBB</strong> ；（<code>Provider Backbone Bridge</code>） /运营商主干网桥协议。</p>\n<ul>\n<li>PBB 基于运营商 MAC 地址，而不是基于用户 MAC 地址转发流量。PBB 技术主要定义了双层 MAC 地址的帧结构，在转发行为上并没有改变，仍然是采用了传统的 MAC 交换，这体现在 PBB 技术它的名字仍然是桥接（Bridge）上。不过交换的 MAC 地址是运营商定义的 MAC 地址，而不是用户的MAC 地址，因而这个 MAC 交换从某种角度上，也可以看成是MAC 标签交换。148</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"网络互联与互联网\"><a href=\"#网络互联与互联网\" class=\"headerlink\" title=\"网络互联与互联网\"></a>网络互联与互联网</h2><ul>\n<li><strong>TP</strong> ；传输层。186<ul>\n<li>中继器（Repeater） </li>\n<li>网桥（Bridge）</li>\n<li>交换机（Switch） </li>\n<li>路由器（Router）</li>\n<li>域（Domain）</li>\n</ul>\n</li>\n<li><strong>SNACP</strong> ；<code>subnetwork access protocol</code> /子网访问协议。191</li>\n<li><strong>SNDCP</strong> ；<code>subnetwork dependent convergence protocol</code> /会聚协议。与子网相关。191</li>\n<li><strong>SNICP</strong> ；<code>subnetwork independent convergence protocol</code> /会聚协议。与子网无关。192</li>\n<li><strong>CLNP</strong> ；<code>connectionless network protocol</code>/无连接的网络协议。与 IP 协议相似。194</li>\n<li><strong>IP</strong> ；<code>Internet protocol</code> /因特网协议。是为 ARPAnet 研制的网际数据报协议。197</li>\n<li><strong>VLSM</strong> ；<code>variable length subnetwork mask</code> /可变长子网掩码。199</li>\n<li><strong>ID</strong> ；数据单元标识。<ul>\n<li>IP 数据报报头中，包含下列内容：数据单元标识(ID)，数据长度，偏移(offset)，还有标识(more flag)。 201</li>\n</ul>\n</li>\n<li><strong>ICMP</strong> ；<code>Internet control message protocol</code> /网际控制报文协议。<ul>\n<li>ICMP 与 IP 同属于网络层，用于传送有关通信问题的信息。ICMP 报文封装在 IP 数据报中传送。是 IP 的伴随协议。所有实现 IP 协议的节点都必须实现 ICMP 协议。203</li>\n</ul>\n</li>\n<li><strong>TCP</strong> ；<code>transmission control protocol</code> /传输控制协议。<ul>\n<li>在 TCP/IP 协议簇中有两个传输协议：TCP 和 UDP。204</li>\n</ul>\n</li>\n<li><p><strong>UDP</strong> ；<code>user datagram protocol</code> /用户数据报协议。</p>\n<ul>\n<li>TCP 是面向连接的，而 UDP 是无连接的。211</li>\n</ul>\n</li>\n<li><p><strong>DNS</strong>  (<code>Domain Name System</code>) /Internet 的域名系统。</p>\n<ul>\n<li>借助该系统 Internet 上的主机具有域名地址（如microsoft.com）和 IP 地址（如 172.21.13.45）。域名地址由用户使用并自动翻译成数字 IP 地址，该地址由数据包路由软件使用。DNS 是域名服务的缩写，域名服务是执行域名系统的 Internet 实用程序。DNS 服务器也称为名称服务器，它维护包含地址的数据库并允许用户进行透明访问。213</li>\n</ul>\n</li>\n<li><strong>TLD</strong> ；<code>top-level domains</code> /顶级域。<ul>\n<li>分为国家顶级域（<code>county code top-level domains</code>，ccTLD）和通用顶级域（<code>generic top-level domains</code>，gTLD）。213</li>\n</ul>\n</li>\n<li><strong>ARP</strong> (<code>Address Resolution Protocol</code>)地址解析协议<ul>\n<li>用于在只知道一个 IP 地址（或逻辑地址）时决定与Internet 相连的局域网中节点的硬件地址（或物理地址）的 TCP/ IP 协议。向网络发送 ARP 请求，具有 IP地址的节点采用其硬件地址作出应答。虽然从技术上讲 ARP 仅指找到硬件地址，而反向 ARP (RARP) 则是指相反的过程，但是，缩写字 - ARP 通常用于描述这两种过程。ARP 受支持广播数据包的物理网络系统的限制。它在 RFC 826 中定义。 请参阅“反向地址解析协议”以及“传输控制协议/ 网际协议”。215</li>\n</ul>\n</li>\n<li><strong>IGP</strong> ；<code>interior gateway protocol</code> /内部网关协议。<ul>\n<li>在自治系统内部互相交换信息。218</li>\n</ul>\n</li>\n<li><strong>EGP</strong> ；<code>exterior gateway protocol</code> /外部网关协议。<ul>\n<li>在自治系统外部互相交换信息。218</li>\n</ul>\n</li>\n<li><strong>BGP4</strong> : <code>Border Gateway Protocol 4</code>/外部网关协议<ul>\n<li>一种动态路由发现协议，支持无类路由CIDR。219</li>\n</ul>\n</li>\n<li><strong>RIP</strong> ；<code>Routing Information Protocol</code> /路由选择信息协议。221<ul>\n<li>适用于==小型网络==，==允许最大跳数不超过15跳==</li>\n<li>分为RIPv1和RIPv2两个版本</li>\n<li>RIPv1的==默认路由更新时间为30s，持有时间180s==，是有类别的协议，必须IP地址与子网掩码相对应</li>\n<li>RIPv2是增强型RIP协议，支持VLSM和CIDR</li>\n</ul>\n</li>\n<li><strong>OSPF</strong> ；<code>Open Shortest Path First</code>/开放最短路径优先协议。224<ul>\n<li>==一种链路状态协议，支持大型网络、占用网络资源少、路由收敛快==</li>\n</ul>\n</li>\n<li><p><strong>GGP</strong> ；<code>gateway to gateway protocol</code> /核心网关协议。</p>\n<ul>\n<li>核心网关之间交换路由信息。228</li>\n</ul>\n</li>\n<li><p><strong>NAT</strong> ；<code>network address translators</code>/网络地址翻译。</p>\n<ul>\n<li>在 IPv4 中解决 IP 路由短缺问题。230</li>\n</ul>\n</li>\n<li><strong>NAPT</strong> ；<code>network address Port translation</code> /网络地址和端口翻译。230</li>\n<li><strong>CIDR</strong> ；<code>classless inter-domain routing</code>/无类域间路由。<ul>\n<li>CIDR 技术解决路由缩放问题 232</li>\n</ul>\n</li>\n<li><strong>MPLS</strong> ；<code>multiprotocol label switching</code> /多协议标记交换。<ul>\n<li>把第二层的链路状态信息（带宽、延迟、利用率等）集成到第三层的协议数据单元。用短而定长的标签来封装分组。该技术实现的核心就是在 IP 数据包之外封装一个 32 位的 MPLS 包头。从而简化和改进了第三层分组的交换过程。核心思想是利用标签交换取代复杂的路由运算和路由交换。234</li>\n</ul>\n</li>\n<li><strong>IGMP</strong> ：<code>Internet Group Managerment Protocol</code>/因特网组管理协议。238</li>\n<li><strong>QoS</strong> ；服务质量。247</li>\n<li><strong>Telnet</strong> ；远程登录协议。255</li>\n<li><strong>NVT</strong> ；<code>network virtual terminal</code> /网络虚拟终端。255</li>\n<li><strong>FTP</strong> (<code>File Transfer Protocol</code>)/文件传输协议。<ul>\n<li>Internet 最早的应用层协议。用于将文件复制到使用传输控制协议/网际协议 (TCP/IP) 的网络（如 Internet）上的远程计算机系统中或从其将复制出来的协议。该协议还允许用户使用 FTP 命令对文件进行操作，如在远程系统中列出文件和目录。256</li>\n</ul>\n</li>\n<li><strong>匿名FTP</strong> （<code>Anonymous File Transfer Protocol</code>）/匿名文件传输协议无需建立登录名和密码就允许用户从 Internet 上任何地方检索文档、文件、程序和其它存档数据。256</li>\n<li><strong>SMTP</strong> ；<code>simple mail transfer protocol</code> /简单邮件传输协议。257</li>\n<li><strong>POP3</strong> ；<code>Post Office Protocol</code> /邮局协议第 3 版。电子系统中的收件服务器。SMTP 是发件服务器。257</li>\n<li><strong>WWW</strong> : <code>World Wide Web</code> 的缩写，全球网，又称万维网。<ul>\n<li>它是一个基于超文本方式的信息检索工具，提供一种友好的信息查询接口，是目前最受欢迎同时也是最先进Internet 检索工具之一。214 WWW 的模型： WWW 的运行方式是客户端/服务器方式。Web 服务器专用端口号（80）时刻监视进来的连接请求，建立连接后用 HTTP协议和用户进行交互作用。258</li>\n</ul>\n</li>\n<li><strong>HTTP</strong> ；<code>Hyper Text Transmission Protocol</code> /超文本传输协议。是 Web 技术中的核心协议。258</li>\n<li><strong>URL</strong> ；<code>uniform resource locators</code> /统一资源定位器。浏览器通过 URL 对信息进行寻址。259</li>\n<li><strong>HTML</strong> : <code>Hyper Text Markup Language</code>,超文本标示语言。HTML 可以 描述主页(Home Page)和静态的文本。260</li>\n</ul>\n<hr>\n<h2 id=\"下一代互联网\"><a href=\"#下一代互联网\" class=\"headerlink\" title=\"下一代互联网\"></a>下一代互联网</h2><ul>\n<li><p><strong>IPv6路由协议</strong> 275</p>\n<ul>\n<li><code>RIPng</code></li>\n<li><code>OSPFv3</code></li>\n<li><code>BGP 4+</code></li>\n<li><code>ICMPv6</code></li>\n</ul>\n</li>\n<li><p><strong>ISATAP</strong> ；<code>intra-site automatic tunnel addressing protocol</code> /站内自动隧道寻址协议。</p>\n<ul>\n<li>ISATAP 过渡技术采用了双栈和隧道技术实现从 IPv4 向 IPv6 的过渡。ISATAP 隧道是点到点的自动随到技术，它将 IPv4 地址置入 IPv6 地址中。291</li>\n</ul>\n</li>\n<li><strong>NAT-PT</strong> ；<code>network address translation-protocol</code> /网络地址转换协议转换。</li>\n<li>是一种纯 IPv6 节点和 IPv4 节点间的互通方式。294</li>\n</ul>\n<hr>\n<h2 id=\"网络安全\"><a href=\"#网络安全\" class=\"headerlink\" title=\"网络安全\"></a>网络安全</h2><ul>\n<li><strong>现代加密技术</strong> 308<ul>\n<li>DES</li>\n<li>3DES</li>\n<li>IDEA</li>\n<li>AES</li>\n<li>RC4</li>\n<li>RSA</li>\n<li>公钥加密算法</li>\n</ul>\n</li>\n<li><strong>KDC</strong> ；<code>key distribution center</code> /密钥分发中心。312</li>\n<li><strong>CA</strong> (<code>certification authority</code>) /证书颁发机构 319</li>\n<li><strong>CRL</strong> （<code>certificate revocation list</code>）/证书吊销列表由证书颁发机构 (CA) 保留和发布的文档，列出已由证书颁发机构吊销的证书。请参阅“证书颁发机构”。321</li>\n<li><strong>KMI</strong> ；<code>key management infrastructure</code> /密钥管理基础结构。322</li>\n<li><strong>PKI</strong> ；<code>public key infrastructure</code> /公约基础结构。323</li>\n<li><strong>RA</strong> ；<code>registration authority</code> /注册机构。323</li>\n<li><strong>VPN</strong> ；<code>Virtual Private Network</code> /虚拟专用网。<ul>\n<li>任意一对 VPN 用户之间没有专用的物理连接。325</li>\n</ul>\n</li>\n<li><strong>PPP</strong> ；<code>point-to-point protocol</code> /点对点协议。<ul>\n<li>可以在点对点链路上传输多种上层协议的数据报。PPP 协议是一组协议，包括：<ul>\n<li>1.封装协议。</li>\n<li>2.链路控制协议（<code>link control protocol</code>，LCP）。</li>\n<li>3.网络控制协议。327</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>PPTP</strong> ；<code>point-to-point tunneling protocol</code> /点对点隧道协议。<ul>\n<li>PPTP 定义了由 PAC 和 PNS 组成的客户端/服务器结构，从而把 NAS（<code>Network Attached Storage</code>：网络附属存储）的功能分解给两个逻辑设备<ul>\n<li>{1.PPTP接入集中器（<code>PPTP access concentrator</code> ,PAC），</li>\n<li>2.PPTP 网络服务器（<code>PPTP network server</code>，PNS。</li>\n<li>运行 TCP/IP协议，可以使用任何 LAN 和 WAN 接口硬件实现。）}，以支持虚拟专用网。在一对 PAC 和 PNS 之间必须建立两条并行的 PPTP 连接，一条是运行在 TCP 协议上的控制连接，一条是传输 PPP 协议数据单元的 IP 隧道。329</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>L2TP</strong> ；<code>layer 2 tunneling protocol</code> /第 2 层隧道协议。<ul>\n<li>用于把各种拨号服务集成到 ISP 的服务提供点。332</li>\n</ul>\n</li>\n<li><strong>IPSec</strong> ；<code>IP security</code> /是 IETF 定义的一组协议，<ul>\n<li>用于增强 IP 网络的安全性。333</li>\n</ul>\n</li>\n<li><strong>SSL</strong> ；<code>secure socket layer</code> /安全套接层。<ul>\n<li>传输层安全协议，用于实现 Web 安全通信。分为两层，底层是 SSL记录协议。运行在传输层 TCP 之上，用于封装各种上层协议。上层协议是 SSL 握手协议。SSL 与 IPSec 的区别：IPSec VPN 是在网络层建立安全隧道，适用于建立固定的虚拟专用网，而 SSL 的安全连接是通过运用层的 web 连接建立的，更适合移动用户远程访问公司的虚拟专用网。337</li>\n</ul>\n</li>\n<li><strong>S-HTTP</strong> ；<code>secure HTTP</code> /安全的超文本协议。<ul>\n<li>是一个面向报文的安全通信协议。341</li>\n</ul>\n</li>\n<li><strong>PGP</strong> ；<code>pretty good privacy</code> /电子邮件加密软件包。341</li>\n<li><strong>Firewall</strong> /防火墙<ul>\n<li>一种安全系统，它试图保护公司网络不受外来的威胁，如来自 Internet 等其他网络的电脑入侵者的攻击。防火墙防止公司网络的计算机与外部计算机直接通讯，反之亦然。相反，所有通讯通过公司网络外的代理服务器进行传递，代理服务器将决定让特定信息或文件通过网络是否安全。348</li>\n</ul>\n</li>\n<li><strong>IDS</strong> ；<code>intrusion detection system</code> /入侵检测系统。主动防御技术。357</li>\n<li><strong>IPS</strong> ：<code>intrusion prevention system</code> /入侵防御系统。364</li>\n</ul>\n<hr>\n<h2 id=\"网络操作系统与应用服务器\"><a href=\"#网络操作系统与应用服务器\" class=\"headerlink\" title=\"网络操作系统与应用服务器\"></a>网络操作系统与应用服务器</h2><ul>\n<li><strong>MMC</strong> ；<code>Microsoft管理控制台</code>。MMC 不执行管理功能，但集成管理工具。381</li>\n<li><strong>IIS</strong> ；<code>Internet information server</code> /因特网信息服务器。<ul>\n<li>组建局域网时，可以利用 IIS 来构建 WWW 服务器、FTP 服务器和 SMTP 服务器。404</li>\n</ul>\n</li>\n<li><strong>DHCP</strong> (<code>Dynamic Host Configuration Protocol</code>) /动态主机配置协议<ul>\n<li>当主机与网络连接时，允许连接到 Internet 的网络自动指定主机临时 IP 地址的 TCP/IP 协议。427</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"网际协议\"><a href=\"#网际协议\" class=\"headerlink\" title=\"网际协议\"></a>网际协议</h2><h2 id=\"IPCP-；IP-控制协议。\"><a href=\"#IPCP-；IP-控制协议。\" class=\"headerlink\" title=\"- IPCP ；IP 控制协议。\"></a>- <strong>IPCP</strong> ；<code>IP 控制协议</code>。</h2><h2 id=\"网络安全认证协议\"><a href=\"#网络安全认证协议\" class=\"headerlink\" title=\"网络安全认证协议\"></a>网络安全认证协议</h2><ul>\n<li><strong>PAP</strong> ；<code>password authentication protocol</code> /口令认证协议。</li>\n<li><strong>CHAP</strong> ；<code>challenge handshake authentication protocol</code> /挑战-握手认证协议。<ul>\n<li>是一种 3 次握手认证协议，并不传送密码，而是传送有密码生成的散列值。</li>\n</ul>\n</li>\n<li><strong>TLS</strong> ；<code>transport layer security</code> /传输层安全标准。</li>\n<li><strong>HTTPS</strong> ；SSL/TLS 在 web 安全通信中被称为 HTTPS。</li>\n</ul>\n<hr>\n<h2 id=\"存储技术\"><a href=\"#存储技术\" class=\"headerlink\" title=\"存储技术\"></a>存储技术</h2><ul>\n<li><strong>RAID</strong> ；<code>redundant arrays of inexpensive disk</code> /廉价磁盘冗余阵列。<ul>\n<li>可靠快速的大容量磁盘系统。</li>\n</ul>\n</li>\n<li><strong>DAS</strong> ；<code>direct-attached storage</code> /开放系统的直连式存储。534</li>\n<li><strong>NAS</strong> ；<code>network attached storage</code> /网络接入存储。535</li>\n<li><strong>SAN</strong> ；<code>storage area network</code> /存储区域网络。535 </li>\n</ul>\n<hr>\n<h2 id=\"传输介质\"><a href=\"#传输介质\" class=\"headerlink\" title=\"传输介质\"></a>传输介质</h2><ul>\n<li><strong>CMTS</strong> ；线缆调制解调器终端设备。<ul>\n<li>向大量的线缆调制解调器提供高速连接。585</li>\n</ul>\n</li>\n<li><strong>HFC</strong> ；<code>hybrid fiber/coax</code> /混合光纤/铜缆系统。585</li>\n<li><strong>VDSL</strong> ；甚高比特率 DSL。一种快速非对称 DSL 业务。585—587</li>\n<li><strong>BRAS</strong> ；宽带接入服务器。587</li>\n<li><strong>DDN</strong> ；<code>digital data network</code> /数字数据网络。588</li>\n<li><strong>DTU</strong> ；数据终端设备。588</li>\n<li><strong>SDH</strong> ；<code>synchronous digital hierarchy</code> /同步数字体系。<ul>\n<li>是一种将复接、线路传输及交换功能融为一体，并由统一网管系统操作的综合信息传送网络。589</li>\n</ul>\n</li>\n<li><strong>PDH</strong> ；<code>plesiochronous digital hierarchy</code> /准同步数字系列兼容方式。<ul>\n<li>提供两种方式的接口：一是传统 E1接口，另一个是封装了多个 E1 信道的 CPOS（channel POS）590</li>\n</ul>\n</li>\n<li><strong>MSTP</strong> ；<code>multi-service transport platform</code> /基于 SDH 的多业务传送平台。<ul>\n<li>是指基于 SDH 平台同时实现 TDM、ATM、以太网等业务的接入、处理和传送，提供统一网管的多业务节点。591</li>\n</ul>\n</li>\n<li><strong>DSL</strong> ；<code>digital subscriber line</code> /数字用户电路。<ul>\n<li>多种类型：<ul>\n<li><strong>ADSL</strong> ；非对称 DSL。<ul>\n<li>用户的上下行流量不对称，一般具有三个信道，分别是 1.544~9Mbps 的高速下行信道，16~640Kbps 的双工信道，64Kbps 的语音信道。</li>\n</ul>\n</li>\n<li><strong>SDSL</strong> ；对称 DSL，<ul>\n<li>用户的上下行流量对等，最高可以达到 1.544Mbps。</li>\n</ul>\n</li>\n<li><strong>ISDN DSL</strong> ；介于 ISDN 和 DSL 之间，<ul>\n<li>可以提供最远的距离为 4600~~5500m 的 128Kbps 双向对称传输。</li>\n</ul>\n</li>\n<li><strong>HDSL</strong> ；高比特率 DSL。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li><strong>LDAP</strong> ；<code>light directory access protocol</code> /轻型目录访问协议。<ul>\n<li>架构（schema）是活动目录中的对象模型。通过建立对象模型来实现对 LDAP 的支持。</li>\n</ul>\n</li>\n<li><strong>SAM</strong> ；<code>safe account manager</code> /安全目录管理器。</li>\n<li><strong>VTP</strong> ；<code>VLAN 中继协议</code>。VTP 有三种工作模式，即服务器模式，客户模式和透明模式。</li>\n<li><strong>IGRP</strong> ；<code>interior gateway routing protocol</code> /内部网关路由协议。<ul>\n<li>是一种动态距离向量路由协议。</li>\n</ul>\n</li>\n<li><strong>EIGRP</strong> ；增强型的 IGRP 协议。</li>\n<li><strong>PRI</strong> ；<code>primary rate interface</code> /主要速率接口。<ul>\n<li>ISDN 提供两种类型访问接口中的一种。</li>\n</ul>\n</li>\n<li><strong>BRI</strong> ; <code>Basic Rate Inerface</code> /基本速率接口。<ul>\n<li>ISDN 提供两种类型访问接口中的一种。</li>\n</ul>\n</li>\n<li><strong>DDR</strong> ；<code>dial on demand routing</code> /按需拨号路由。</li>\n<li><strong>ACL</strong> ；(<code>access control list</code>) /访问控制列表 。<ul>\n<li>指明哪些用户或用户组有权访问或修改特定文件的列表；Windows 全权访问控制列表 (DACL) 以及系统访问控制列表 (SACL) 就是访问控制列表的示例。</li>\n</ul>\n</li>\n<li><strong>NME</strong> ；<code>network management entity</code> /网络管理实体。<ul>\n<li>每一个网络节点都包含一组与管理有关的软件，叫做网络管理实体。</li>\n</ul>\n</li>\n<li><strong>NMA</strong> ；<code>network management application</code> /网络管理应用。<ul>\n<li>NMA 提供用户接口，根据用户的命令显示管理信息，通过网络向 NME 发出请求或命令，以便获取有关设备的管理信息，或者改变设备的配置状态。442</li>\n</ul>\n</li>\n<li><strong>MIB</strong> ；<code>management information base</code> /管理信息库。</li>\n<li><strong>MTTR</strong> ；<code>mean time between failure</code> /平均无故障时间。</li>\n<li><strong>SNMP</strong> ；<code>simple network management protocol</code> /简单网络管理协议。<ul>\n<li>为应用层协议，所以它依赖于 UDP 数据报服务（原因是它的速率高）。作用是把管理应用程序的服务调用变成对应的 SNMP 协议数据单元，并利用 UDP数据报发送出去。</li>\n</ul>\n</li>\n<li><strong>SGMP</strong> ；<code>simple gateway monitoring protocol</code> /简单网关监控协议。</li>\n<li><strong>MPLS VPN</strong> ；是一种基于 MPLS 技术的 IP-VPN。595</li>\n<li><strong>TDR</strong> ；<code>time domain reflectors</code> /时域反射计。<ul>\n<li>能都快速的定位金属电缆中的断路、短路、压接、扭结、阻抗不匹配等问题。603</li>\n</ul>\n</li>\n<li><strong>OTDR</strong> ；<code>optical time domain reflectors</code> /光时域反射计。用于光纤的测试。603</li>\n<li><strong>default gateway</strong> /默认网关<ul>\n<li>在 TCP/IP 协议中，本地网络中知道 Internet 上其他网络的网络 ID 的中间网络设备，以便它可以将数据包转发到其他网关直到将其传送到与指定目标相连的网络为止。</li>\n</ul>\n</li>\n<li><strong>access control</strong> /访问控制<ul>\n<li>根据用户标识及其在不同预定义组中的成员资格限制对资源进行访问的机制。访问控制通常用于控制用户对网络资源，如服务器、目录和文件等进行访问。</li>\n</ul>\n</li>\n<li><strong>InterNIC</strong> ；<code>Internet network information center</code> /Internet 网络信息中心。<ul>\n<li>管理着域名树的根，称为根域，是域名空间的最高级别。没有名称，用句号“.”表示。在 DNS 名称中，末尾附加一个“.”,就是表示根域。</li>\n</ul>\n</li>\n<li><strong>GIDR</strong> ；<code>classless inter domain routing</code> /无类别的域间路由协议。<ul>\n<li>在 IPv4 中解决 IP 路由短缺问题。198</li>\n</ul>\n</li>\n<li><strong>LER</strong> ；<code>label edge router</code> /标记边缘路由器。<ul>\n<li>分组进入 MPLS 网络时，LER 为其加一个标记。203</li>\n</ul>\n</li>\n<li><strong>LSR</strong> ；<code>label switch router</code> /标记交换路由器。<ul>\n<li>根据标记来处理分组。不经过第三层。从而加快了网络的交换速度。204</li>\n</ul>\n</li>\n<li><strong>LIB</strong> ；<code>label information base</code> /标记信息库。204</li>\n<li><strong>ISA</strong> ；<code>integrated service architecture</code> /集成服务体系结构。IP QoS 技术。204</li>\n<li><strong>FEC</strong> ；<code>forward equivalent class</code> /转发等价类。<ul>\n<li>MPLS 可以把多个通信流汇聚成为一个 FEC。204</li>\n</ul>\n</li>\n<li><strong>DS域</strong> ；<code>DS Domain</code> /Internet 中能实现分区服务的连续区域称为 DS 域。在一个 DS 域中，服务提供策略和逐跳行为都是一致的。207</li>\n<li><strong>DSCP</strong> ；<code>DS code point</code> /每个 IP 分组都要根据其 QoS 需要打上一个标记，这种标记称为 DS 码点。207</li>\n</ul>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F/",
            "title": "常用公式",
            "date_published": "2021-03-04T02:34:29.000Z",
            "content_html": "<h1 id=\"一．可靠度-可用性-计算机\"><a href=\"#一．可靠度-可用性-计算机\" class=\"headerlink\" title=\"一．可靠度(可用性)计算机\"></a>一．可靠度(可用性)计算机</h1><ul>\n<li>串联 ==R＝R1 $\\times$ R2== 对应失效率：==λ1+λ2==</li>\n<li>并联 ==R＝1-(1-R1)(1-R2)==<h1 id=\"二、-香农定理（有噪声）数据速率：\"><a href=\"#二、-香农定理（有噪声）数据速率：\" class=\"headerlink\" title=\"二、 香农定理（有噪声）数据速率：\"></a>二、 香农定理（有噪声）数据速率：</h1></li>\n<li>在一条带宽为 W（HZ），信噪比为 S/N 的有噪声极限数据速率 </li>\n<li>==Vmax = W $\\times$ $\\log_2 (1+S/N)$==<ul>\n<li>单位(b/s)</li>\n</ul>\n</li>\n<li><strong>分贝与信噪比的关系为：</strong></li>\n<li>==dB=10 $\\times$ $\\lg(S/N)$==<ul>\n<li>dB 的单位:分贝</li>\n</ul>\n</li>\n<li>例：设信道带宽为 4kHz，信噪比为 30dB，按照香农定理，信道的最大数据传输速率约等于？</li>\n<li>解：1，例出香农定理算式：<ul>\n<li>==Vmax = W $\\times$ $\\log_2 (1+S/N)$== </li>\n<li>2, 列出信噪比关系：==dB=10$\\times$$\\lg(S/N)$==</li>\n<li>3, 计算 30dB=10$\\times$$\\lg(S/N)$, 则 $S/N=1000$ </li>\n<li>4，Vmax=4KHz , $\\log_2 (1+1000)$=4000 $\\times$ 10 =40kb/s</li>\n</ul>\n</li>\n<li><strong>注意：此处单位换算1kb/S=1000b/s</strong><h1 id=\"三、-尼奎斯特定理（无噪声）\"><a href=\"#三、-尼奎斯特定理（无噪声）\" class=\"headerlink\" title=\"三、 尼奎斯特定理（无噪声）\"></a>三、 尼奎斯特定理（无噪声）</h1></li>\n<li>若信道带宽为 W（HZ）,则最大码元速率（波特率）:</li>\n<li>==B=2W（baud）==</li>\n<li>由尼奎斯特定理可得：</li>\n<li>==Vmax=B  $\\log_2 N$ = 2 W  $\\log_2 N$==<ul>\n<li>单位（b/s）</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>例：设信道带宽为 3400Hz，调制为 4 种不同的码元，根据 Nyquist 定理，理想信道的数据速率为？<br><br>解：<br><br>1，根据题意例出尼奎斯特定理算式：Vmax=2W$\\log_2 N$ <br><br>2, 直接套入数字：Vmax=2 $\\times$ 3400$\\times$ $\\log_2 4$ <br><br>3, Vmax=2x3400x2=13600b/S=13.6kb/s <br></li>\n<li><strong>注意：此处出现单位换算一次，13600b/s=13.6kb/s</strong></li>\n</ul>\n<hr>\n<ul>\n<li>例 1：设信道采用 2DPSK 调制，码元速率为 300 波特，则最大数据速率为 <br><br>解：<br><br>Vmax=B $\\times$ $\\log_2 N$=300x1=300b/s <br></li>\n</ul>\n<hr>\n<ul>\n<li>例 2：在异步通信中，每个字符包含 1 位起始位，7 位数据位，1 位奇偶效验位和两位终止位，若每秒传送 100 个字符，采用 4DPSK 调制，则码元速率为？有效数据速率为？ <br><br>解：<br><br>1，根据题意计算数据速率为 （1+7+1+2）$\\times$ 100=1100b/s <br><br>2，由尼奎斯特定理得出，1100b/s=B$\\log_2 4$ <br><br>3，B=1100/2=550baud <br><br>4, 有效数据速率，即单位时间内传输的数据位，即 7 $\\times$ 100=700b/S <br></li>\n</ul>\n<h1 id=\"四、-数据传输延迟\"><a href=\"#四、-数据传输延迟\" class=\"headerlink\" title=\"四、 数据传输延迟\"></a>四、 数据传输延迟</h1><ul>\n<li><strong>总延迟 T=发送延迟 T1+传输延迟 T2</strong></li>\n<li>==注意：电信号在电缆上传播的速度为光速的 2/3，即20wkm/s==</li>\n<li>==卫星传送信号的延迟恒定为 270ms,与地面距离无关==</li>\n</ul>\n<hr>\n<ul>\n<li>例：在相隔 2000km 的两地间通过电缆以 4800b/s 的速率传送3000 比特长的数据包，从开始发生到接收数据需要的时间是？如果用 50Kb/s 的卫星信道传送，则需要的时间是？ <br><br>解： <br><br>对于电缆： <br><br>传输延迟 T1=2000km/(20km/ms)=10ms <br><br>发送延迟 T2=3000b/(4800b/s)=625ms <br><br>T=T1+T2=625ms+10ms=635ms <br><br>对于卫星：<br><br>传输延迟 T1=270ms <br><br>发送延迟 T2=3000 b/(50kb/s)=60ms <br><br>T=T1+T2=270ms+60ms=330ms <br></li>\n<li><p><strong>注意：卫星传输数据时与地面相隔距离无关。</strong></p>\n</li>\n<li><p><strong>最小帧长计算，先求往时间，再用时间*数据速率</strong></p>\n</li>\n<li>例如：一个运行ＣＳＭＡ/ＣＤ协议的以太网，数据速率为 1Ｇb/s，网段长 1km,信号速率为为 20000km/s，则最小帧长是多少？<br><br>单程传播时间为 1km/200000=5us，往返要 10us,最小帧为 1Ｇb/s $\\times$ 10us=10000bit </li>\n</ul>\n<h1 id=\"五、-PCM-计算问题\"><a href=\"#五、-PCM-计算问题\" class=\"headerlink\" title=\"五、 PCM 计算问题\"></a>五、 PCM 计算问题</h1><ul>\n<li>PCM <strong>主要经过3个过程：采样、量化和编码。</strong></li>\n<li>==f=1/T $\\geq$ 2 $f_{max}$==</li>\n<li>f为采样频率，T为采样周期， $f_{max}$为信号的最高频率。</li>\n</ul>\n<hr>\n<ul>\n<li>例：设信道带宽为 3400HZ，采用 PCM 编码，采样周期为 125μs，每个样本量化为 128 个等级，则信道的数据速率为？<br><br>解：<br></li>\n<li>f=1s/125us=8000Hz</li>\n<li>8000Hz＞3400Hz $\\times$ 2</li>\n<li>128= $2^7$</li>\n<li>则：数据速率=8000Hz  $\\times$  7=56000b/S=56kb/s</li>\n</ul>\n<h1 id=\"六、求芯片数计算必考\"><a href=\"#六、求芯片数计算必考\" class=\"headerlink\" title=\"六、求芯片数计算必考\"></a>六、求芯片数计算必考</h1><ul>\n<li>假设有一个存储器存储容量为 M<em>N 位，若使用 m</em>n 的芯片，则需要(M/m) $\\times$ (N/n)个存储芯片 (注：单位要换成一致)</li>\n<li>若内存地址区间为 4000H~43FFH，每个存储单位可存储 16 位二进制数，该内存区域由 4 片存储器芯片构成，则构成该内存所用的存储器芯片的容量是 （） 。<ul>\n<li>A．512×16bit B．256×8bit C．256×16bit D．1024×8bit<blockquote>\n<p>试题解析：<br>总存储单位=（43FFH - 4000H + 1H）= 400H = 1024 （H 代表 16 进制）<br>每个存储器芯片的容量为：1024 × 16 / 4 = 4096。<br>由于每个存储单位可存储 16 位二进制数，所以可以采用 256×16bit</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"七、流水线计算\"><a href=\"#七、流水线计算\" class=\"headerlink\" title=\"七、流水线计算\"></a>七、流水线计算</h1><ul>\n<li><strong>流水线周期值等于最慢的那个指令周期（最大值），即为△t</strong></li>\n<li>==流水线执行时间=首条指令的全部时间+（指令总数－1）$\\times$ 周期值==</li>\n<li>==流水线吞吐率=任务数/完成时间=p/△t==</li>\n<li><strong>流水线加速比=不采用流水线的执行时间/采用流水线的执行时间</strong></li>\n<li>==流水线的总时间＝（指令总数+2）$\\times$ 周期值==</li>\n<li>流水线建立时间：<ul>\n<li>==T= n$\\times$△t==</li>\n<li>其中，n表示指令的条数</li>\n</ul>\n</li>\n<li>执行m条指令的时间：<ul>\n<li>==T=$\\sum_1^n<script type=\"math/tex\">\\Delta</script>t_i$+(M-1)$\\Delta$$t_j$==</li>\n<li>其中，n即把流水线分成n段，$\\Delta<script type=\"math/tex\">t_i$表示每段花费的时间，$\\Delta</script>t_j$表示时间最长的那一段</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li>例：若每一条指令为取指、分析和执行。已知取指时间 a，分析时间 b，执行时间 c（最大）。按串行方式执行完 100 条指令需要 多少时间？<br>按照流水方式执行，执行完 100 条指令需要多少时间。流水线周期为 C，即最大值。<br></li>\n<li>100 条指令的串行方式时间是==(a+b+c) $\\times$ 100==</li>\n<li>100 条指令的流水方式时间是==(a+b+c)+c $\\times$ 99==</li>\n<li>流水线吞吐率为 100/(a+b+c)+c*99</li>\n</ul>\n<hr>\n<h1 id=\"八、Cache：又称高速缓存存储器\"><a href=\"#八、Cache：又称高速缓存存储器\" class=\"headerlink\" title=\"八、Cache：又称高速缓存存储器\"></a>八、Cache：又称高速缓存存储器</h1><ul>\n<li>==命中率：访问信息的概率==</li>\n<li>假如执行过程中对 Cache 的访问次数为 N1 和对主存访问为 N2，则 Cache 命中率为 ==H＝N1/（N1+N2）==<br><br>平均存取时间：可用 Cache 和主存的访问周期 T1、T2 和命中率 H 表示<br><br>即：T＝H*T1+（1－H）T2 <br></li>\n</ul>\n<h1 id=\"九、CRC，海明码计算\"><a href=\"#九、CRC，海明码计算\" class=\"headerlink\" title=\"九、CRC，海明码计算\"></a>九、CRC，海明码计算</h1><ul>\n<li><strong>奇偶校验码添加1位校验码，其码距变为2。</strong></li>\n<li><p>海明码：利用奇偶性来检错和校验的方法。假设有 m 位信息码，加入 k 位校验码，则满足：<br><br> ==m+k+1 $\\leq$ $2^k$==</p>\n</li>\n<li><p>一个码组内有e个误码，则最小码距: <br><br>  ==d $\\geq$ e+1==</p>\n</li>\n<li><p>一个码组能够纠正 n 个误码，则最小码距: <br><br>  ==d $\\geq$ 2n+1==</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/03/04/6VKcmq.png\" alt=\"hmm\"></p>\n</li>\n</ul>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A802/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A802/",
            "title": "网络应用服务器02",
            "date_published": "2021-02-27T01:59:22.000Z",
            "content_html": "<h1 id=\"01-nbsp-VM10虚拟机安装配置\"><a href=\"#01-nbsp-VM10虚拟机安装配置\" class=\"headerlink\" title=\"01&nbsp;VM10虚拟机安装配置\"></a>01&nbsp;VM10虚拟机安装配置</h1><h2 id=\"1-1-nbsp-虚拟机VM简介\"><a href=\"#1-1-nbsp-虚拟机VM简介\" class=\"headerlink\" title=\"1.1&nbsp;虚拟机VM简介\"></a>1.1&nbsp;虚拟机VM简介</h2><ul>\n<li>VirtualMachineware，中文名“威睿”，虚拟机软件，可以使你在一台机器上同时允许两个或更多DOS、Windows、LINUX系统，每个系统你都可以进行虚拟机的分区、配置而不影响真实硬盘的数据，比较适合学习和测试。</li>\n<li><p>在使用上，这台虚拟机和真正的物理主机没有太大的区别，都需要分区、格式化、安装操作系统、安装应用程序和软件，总之，一切操作都跟一台真正的计算机一样</p>\n</li>\n<li><p>虚拟机VM几个注意事项： <strong>CPU要支持虚拟化。</strong></p>\n<ul>\n<li>安装VMWareTools工具：可以实现虚拟机和真机之间的复制粘贴</li>\n<li>虚拟机——管理——克隆：可以快速复制一个系统。</li>\n<li>2008登陆密码：<code>dtwlxy_VlP</code>要符合复杂度。</li>\n<li>VMware10永久许可密钥<ul>\n<li><code>5A6Z-20JD2-LZWZ9-H38N0-92L62</code></li>\n</ul>\n</li>\n<li>VMware14永久许可密钥<ul>\n<li><code>FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Windows Server 2008 R2只 <strong>支持64位主机</strong>，需要主机BIOS中CPU支持64位并开启虚拟化</p>\n</li>\n</ul>\n<h2 id=\"1-2-nbsp-电脑主机BIOS屮的CPU开启虚拟化支持的方法\"><a href=\"#1-2-nbsp-电脑主机BIOS屮的CPU开启虚拟化支持的方法\" class=\"headerlink\" title=\"1.2&nbsp;电脑主机BIOS屮的CPU开启虚拟化支持的方法\"></a>1.2&nbsp;电脑主机BIOS屮的CPU开启虚拟化支持的方法</h2><ol>\n<li>进BIOS，开机按F2或F12或DEL等键（Fn）。</li>\n<li><code>Configuration</code>选项，<code>Intel Virtual Technology</code>并回车，将光标移至<code>Enabled</code>，然后再回车，最后按<code>F10</code>保存并退出。</li>\n</ol>\n<ul>\n<li>如果找不到Configuration选项，尝试一下方法：</li>\n</ul>\n<ol>\n<li>某些HP（惠普）电脑进入BIOS后，需要选择<br><code>SystemConfiguration</code>菜单，然后选择<code>Device Configuration</code>,找到<code>Virtualization Technology</code>,设置为<code>Enabled</code></li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A801/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A801/",
            "title": "网络应用服务器01",
            "date_published": "2021-02-27T00:35:07.000Z",
            "content_html": "<h1 id=\"01-nbsp-Win2008基础\"><a href=\"#01-nbsp-Win2008基础\" class=\"headerlink\" title=\"01&nbsp;Win2008基础\"></a>01&nbsp;Win2008基础</h1><h2 id=\"1-1-nbsp-网络操作系统\"><a href=\"#1-1-nbsp-网络操作系统\" class=\"headerlink\" title=\"1.1&nbsp;网络操作系统\"></a>1.1&nbsp;网络操作系统</h2><ul>\n<li><strong>定义</strong> ：<ul>\n<li>用统一的方法管理各主机之间的通信和资源的共享</li>\n</ul>\n</li>\n<li><strong>主要功能</strong>：<ul>\n<li>网络通信、共享资源、网络管理、网络服务、互操作、网络接口</li>\n</ul>\n</li>\n<li><strong>四大特征</strong>：<ul>\n<li>并发、资源共享、虚拟、异步性</li>\n</ul>\n</li>\n<li><strong>安全性</strong>：<ul>\n<li>用户账号、时间限制、地点限制、磁盘空间限制、传输介质、加密审计</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-2-nbsp-网络服务器Windows-Server-2008\"><a href=\"#1-2-nbsp-网络服务器Windows-Server-2008\" class=\"headerlink\" title=\"1.2&nbsp;网络服务器Windows Server 2008\"></a>1.2&nbsp;网络服务器Windows Server 2008</h2><ul>\n<li>微软基于WindowsXP/NT5.1开发的服务器操作系统，于2008年发布，原定2018结束支持，后延期至2026年。==企业版、标准版、web版数据中心版等8个版本==。</li>\n<li>专为下一代网络、应用程序和Web服务设计，R2升级版提升了虚拟机、系统管理、信息安全，仅支持64位，服务于大、中、小企业。</li>\n<li><strong>新增功能</strong> ：1、网站IIS7，2、虚拟机化Hyper-V；3、可靠可扩展。4、管理中心增强。</li>\n</ul>\n<h2 id=\"1-3-nbsp-网络服务器Red-Hat-Enterprise-Linux7-0\"><a href=\"#1-3-nbsp-网络服务器Red-Hat-Enterprise-Linux7-0\" class=\"headerlink\" title=\"1.3&nbsp;网络服务器Red Hat Enterprise Linux7.0\"></a>1.3&nbsp;网络服务器Red Hat Enterprise Linux7.0</h2><ul>\n<li>简称红帽子，是开放源代码的产品，是Linux操作系统的一种。因为它具备最好的图形界面，无论是安装、配置还是使用都十分方便，而且运行稳定，适合做服务器。</li>\n<li>在第9个版本之后，RedHat公司不再发行RedHatLinux，而开始发行Fedorao。同时将其商业化的努力全部转向了RedHatEnterprise<br>Linux系列，目前最新版是RHEL7.0</li>\n</ul>\n<h1 id=\"02-nbsp-Win2008基础\"><a href=\"#02-nbsp-Win2008基础\" class=\"headerlink\" title=\"02&nbsp;Win2008基础\"></a>02&nbsp;Win2008基础</h1><h2 id=\"2-1-nbsp-winserver2008本地用户与组\"><a href=\"#2-1-nbsp-winserver2008本地用户与组\" class=\"headerlink\" title=\"2.1&nbsp;winserver2008本地用户与组\"></a>2.1&nbsp;winserver2008本地用户与组</h2><ul>\n<li><strong>用户</strong>：<ul>\n<li>就是包含用户名、密码、权限以及说明</li>\n</ul>\n</li>\n<li><strong>用户组</strong>：<ul>\n<li>就是具有相同性质的用户归结在一起，统一授权，组成用户组</li>\n</ul>\n</li>\n<li><strong>用户组分类</strong>：<ul>\n<li>全局组、本地组、特殊组</li>\n</ul>\n</li>\n<li><strong>创建用户和组</strong>：<ul>\n<li>计算机——右键——管理——配置——本地用户和组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-2-nbsp-常见用户和组的权限\"><a href=\"#2-2-nbsp-常见用户和组的权限\" class=\"headerlink\" title=\"2.2&nbsp;常见用户和组的权限\"></a>2.2&nbsp;常见用户和组的权限</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">组名</th>\n<th style=\"text-align:center\">描述信息</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Administrators</td>\n<td style=\"text-align:center\">具有完全控制权限，并且可以向其他用户分配用户权利和访问控制权限</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Backup&nbsp;Operators</td>\n<td style=\"text-align:center\">加入该组的成员可以备份和还原服务器上所有文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Guests</td>\n<td style=\"text-align:center\">拥有一个在登录时创建的临时配置文件，在注销时该配置文件将被删除</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Network<br>Configuration<br>Operators</td>\n<td style=\"text-align:center\">该组具有创建用户账户和组账户的权利，可以在PowerUsers组、Users组和Guests组中添加或删除用户，但是不能管理Administrators组成员，可以创建和管理共享资源</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Print Operators</td>\n<td style=\"text-align:center\">可以管理打印机</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Users</td>\n<td style=\"text-align:center\">可以执行一些常见任务，但不能共享目录和创建本地打印机</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"2-3-nbsp-winserver2008活动目录\"><a href=\"#2-3-nbsp-winserver2008活动目录\" class=\"headerlink\" title=\"2.3&nbsp;winserver2008活动目录\"></a>2.3&nbsp;winserver2008活动目录</h2><ul>\n<li>是指网络资源信息的目录，==是一个数据库==，如用户、计算机、进程、服务、应用程序等，有了活动目录，才能登陆域，才能访问网络资源</li>\n<li><strong>活动目录</strong>（Active Directory），是一个==动态的分布式文件系统==，包含网络信息的目录结构和相关的目录服务，==自动维护信息的一致性==。</li>\n<li><strong>AD</strong> ==存储着计算机网络的配置信息和安全信息==，这些信息分散地存储在网络的多个域控制器中，由多个网络管理员进行管理和维护。</li>\n</ul>\n<p>   <img data-src=\"https://s3.ax1x.com/2021/02/27/6S0nBt.png\" alt=\"hdml\"></p>\n<h2 id=\"2-4-nbsp-活动目录结构\"><a href=\"#2-4-nbsp-活动目录结构\" class=\"headerlink\" title=\"2.4&nbsp;活动目录结构\"></a>2.4&nbsp;活动目录结构</h2><ul>\n<li><strong>组织单元OU</strong><ul>\n<li>共享同一活动目录的一组计算机 <strong>组合</strong></li>\n</ul>\n</li>\n<li><strong>域Domain</strong><ul>\n<li>活动目录的核心单元</li>\n</ul>\n</li>\n<li><strong>域树Tree</strong><ul>\n<li>域的集合</li>\n</ul>\n</li>\n<li><strong>域林Forest</strong><ul>\n<li>域树的集合</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-5-nbsp-活动目录的工作组\"><a href=\"#2-5-nbsp-活动目录的工作组\" class=\"headerlink\" title=\"2.5&nbsp;活动目录的工作组\"></a>2.5&nbsp;活动目录的工作组</h2><ul>\n<li>活动目录中的工作组<ul>\n<li>全局组：来自本域用于全林。</li>\n<li>通用组：来自全林用于全林。</li>\n<li>域本地组：来自全林用于本域</li>\n</ul>\n</li>\n<li><p>活动目录的安装和配置：1、需要NTFS分区。2、需要安装DNS服务器。开始——&gt;运行——&gt;执行<code>dcpromo.exe</code>，启动域控服务器安装向导。</p>\n<p> <img data-src=\"https://s3.ax1x.com/2021/02/27/6S0uHP.png\" alt=\"hdmlgzz\"></p>\n</li>\n</ul>\n<h2 id=\"2-6-nbsp-Windows2008R2远程桌面服务\"><a href=\"#2-6-nbsp-Windows2008R2远程桌面服务\" class=\"headerlink\" title=\"2.6&nbsp;Windows2008R2远程桌面服务\"></a>2.6&nbsp;Windows2008R2远程桌面服务</h2><ul>\n<li><p>Windows2008R2远程桌面服务：了满足同时允许多个用户同时远程一台服务器，就需要开启多个Windows远程桌面连接才能满足自己的要求。</p>\n</li>\n<li><p>有6个组件：1、远程桌面会话主机，RD的服务端。2、远程桌面Web访问，提供通过Web浏览器或者APP访问。3、远程桌面授权，给RD客户端颁发许可证。4、远程桌面网关，可以给RD客户机通过外网连接网。5、远程桌面连接代理，支持连接APP程序或虚拟机。6、远程桌面虚拟化主机，集成了Hyper-v</p>\n</li>\n</ul>\n<h2 id=\"2-7-nbsp-RD服务器安装步骤\"><a href=\"#2-7-nbsp-RD服务器安装步骤\" class=\"headerlink\" title=\"2.7&nbsp;RD服务器安装步骤\"></a>2.7&nbsp;RD服务器安装步骤</h2><ol>\n<li>开始</li>\n<li>管理工具</li>\n<li>服务器管理器</li>\n<li>角色</li>\n<li>添加角色</li>\n<li>服务器角色</li>\n<li>远程桌面服务</li>\n</ol>\n<h2 id=\"2-8-nbsp-RD服务器配置方法\"><a href=\"#2-8-nbsp-RD服务器配置方法\" class=\"headerlink\" title=\"2.8&nbsp;RD服务器配置方法\"></a>2.8&nbsp;RD服务器配置方法</h2><ul>\n<li>开始</li>\n<li>管理工具</li>\n<li>远程桌面服务</li>\n<li>远程桌面会话主机配置</li>\n<li>右键RDP</li>\n<li>TCP</li>\n<li>属性</li>\n</ul>\n<h2 id=\"2-9-nbsp-远程桌面连接\"><a href=\"#2-9-nbsp-远程桌面连接\" class=\"headerlink\" title=\"2.9&nbsp;远程桌面连接\"></a>2.9&nbsp;远程桌面连接</h2><ul>\n<li>提供一种连接远程工作站桌面的一种远程管理工具<ol>\n<li>计算机—-右键—-属性—-远程设置—-远程—-勾选运行—-进行远程桌面连接</li>\n<li>防火墙放行</li>\n<li>设置系统密码</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"2-10-nbsp-使用客户端进行远程桌面连接\"><a href=\"#2-10-nbsp-使用客户端进行远程桌面连接\" class=\"headerlink\" title=\"2.10&nbsp;使用客户端进行远程桌面连接\"></a>2.10&nbsp;使用客户端进行远程桌面连接</h2><ul>\n<li><strong>方法一</strong><ul>\n<li>开始</li>\n<li>所有程序</li>\n<li>附件</li>\n<li>远程桌面连接</li>\n</ul>\n</li>\n<li><strong>方法二</strong><ul>\n<li>开始</li>\n<li>运行</li>\n<li>输入 <code>mstsc.exe</code></li>\n<li>输入IP地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-11-nbsp-微软管理控制台MMC\"><a href=\"#2-11-nbsp-微软管理控制台MMC\" class=\"headerlink\" title=\"2.11&nbsp;微软管理控制台MMC\"></a>2.11&nbsp;微软管理控制台MMC</h2><ul>\n<li>Microsoft管理控制台（MMC）集成了用来管理网络、计算机、服务及其他系统组件的管理工具。==可以使用MMC创建、保存并打开管理工具单元==，这些管理工具用来管理硬件、软件和Windows的网络组件。</li>\n<li>它==本身不执行管理功能==，但可以集成许多管理工具以方便管理。可以添加到控制台的主要工具类型称为管理单元</li>\n<li><strong>具体步骤</strong><ul>\n<li>开始</li>\n<li>运行</li>\n<li>MMC</li>\n<li>打开控制台</li>\n<li>文件</li>\n<li>添加删除</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"03-nbsp-Linux7-0基础\"><a href=\"#03-nbsp-Linux7-0基础\" class=\"headerlink\" title=\"03&nbsp;Linux7.0基础\"></a>03&nbsp;Linux7.0基础</h1><h2 id=\"3-1-nbsp-Linux用户和组\"><a href=\"#3-1-nbsp-Linux用户和组\" class=\"headerlink\" title=\"3.1&nbsp;Linux用户和组\"></a>3.1&nbsp;Linux用户和组</h2><ul>\n<li>Linux用户和组：Linux是一个多用户、多任务的==分时操作系统==。每个文件和程序必须属于某一个用户，每个用户对应一个账号。其中最重要的一个==超级用户root==。</li>\n<li>超级用户root承担了系统管理的一切任务，可以控制所有的程序，访问所有文件，使用系统中的所有功能和资源。</li>\n<li>其他用户和组都是由root来创建的。</li>\n</ul>\n<h2 id=\"3-2-nbsp-Linux用户和组3个重要配置文件\"><a href=\"#3-2-nbsp-Linux用户和组3个重要配置文件\" class=\"headerlink\" title=\"3.2&nbsp;Linux用户和组3个重要配置文件\"></a>3.2&nbsp;Linux用户和组3个重要配置文件</h2><ul>\n<li><code>/etc/passwd</code>：用户文件，存储用户和密码的信息，对所有用户可读。</li>\n<li><code>/etc/shadow</code>：用户文件，也是存储用户和密码等信息，只有超级用户root可以读，目前一般采用这个，保密性好。（相当于passwd的影子文件）</li>\n<li><code>/etc/group</code>:用户组文件。使用组同时赋予多个用户相同的文件访问权限。一个用户可以同时属于多个组。</li>\n</ul>\n<h2 id=\"3-3-nbsp-Linux用户和组的4个重要管理命令\"><a href=\"#3-3-nbsp-Linux用户和组的4个重要管理命令\" class=\"headerlink\" title=\"3.3&nbsp;Linux用户和组的4个重要管理命令\"></a>3.3&nbsp;Linux用户和组的4个重要管理命令</h2><ul>\n<li><code>useradd</code>：新增用户，暂时锁定，是因为，没有初始密码。</li>\n<li><code>passwd</code>:配置密码，包括设置、修改、锁定密码等。</li>\n<li><code>userdel</code>：删除用户，必要时删除用户的主目录。</li>\n<li><code>su</code>：切换用户，比如由普通用户切换到root用户。（增、删、改、换）</li>\n</ul>\n<h2 id=\"3-4-nbsp-Linux文件目录管理\"><a href=\"#3-4-nbsp-Linux文件目录管理\" class=\"headerlink\" title=\"3.4&nbsp;Linux文件目录管理\"></a>3.4&nbsp;Linux文件目录管理</h2><ul>\n<li><p>文件格式有：EXT2、EXT3、EXT5等。采用树形根目录结构，用/表示。其他所有发生目录都是从根目录出发生成的。将所有的硬件、软件都作为文件来<br>管理。</p>\n</li>\n<li><p><code>/bin</code>存放系统命令。</p>\n</li>\n<li><code>/dev</code>所支持全部的设备文<br>件。</li>\n<li><code>/etc</code>系统管理配置文件。</li>\n<li><code>/lib</code>函数库数据库<br>命令。</li>\n<li><code>/mnt</code>空目录，安装拆卸文件硬件等。</li>\n<li><code>/tmp</code>存放临时文件。</li>\n<li><code>/usr</code>程序存放主目录。</li>\n<li><code>/home</code>默认用户主目录。</li>\n<li><code>/proc</code>内存虚拟目录。</li>\n</ul>\n<h2 id=\"3-5-nbsp-Linux文件权限\"><a href=\"#3-5-nbsp-Linux文件权限\" class=\"headerlink\" title=\"3.5&nbsp;Linux文件权限\"></a>3.5&nbsp;Linux文件权限</h2><ul>\n<li><strong>五种类型、四种权限、三个分组，口诀543</strong></li>\n<li><p>普通文件，用户权限可读可写，用户组权限可读，其他用户可读</p>\n</li>\n<li><p><strong>五种类型：</strong></p>\n<ul>\n<li>普通文件</li>\n<li>目录文件</li>\n<li>链接文件</li>\n<li>设备文件</li>\n<li>管道文件</li>\n</ul>\n</li>\n<li><strong>四种权限：</strong><ul>\n<li>可读的</li>\n<li>可写的</li>\n<li>可执行的</li>\n<li>无访问权限</li>\n</ul>\n</li>\n<li><strong>三个分组：</strong><ul>\n<li>用户</li>\n<li>用户组</li>\n<li>其他用户</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-6-nbsp-Linux文件和目录操作命令\"><a href=\"#3-6-nbsp-Linux文件和目录操作命令\" class=\"headerlink\" title=\"3.6&nbsp;Linux文件和目录操作命令\"></a>3.6&nbsp;Linux文件和目录操作命令</h2><ul>\n<li><code>cat</code>滚动显示</li>\n<li><code>more</code>分屏显示</li>\n<li><code>less</code>按页显示</li>\n<li><code>cp</code>文件复制</li>\n<li><code>mv</code>文件移动</li>\n<li><code>rm</code>文件删除</li>\n<li><code>mkdir</code>创建目录</li>\n<li><code>rmdir</code>删除目录</li>\n<li><code>cd</code>改变目录</li>\n<li><code>pwd</code>当前目录</li>\n<li><code>ls</code>列出目录</li>\n<li><code>chmod</code>改变权限</li>\n<li><code>In</code>文件链接</li>\n<li><code>touch</code>改变文件时间</li>\n<li><code>find</code>查找文件</li>\n<li><code>grep</code>表达式查找</li>\n</ul>\n<h2 id=\"3-7-nbsp-Linux网络配置文件\"><a href=\"#3-7-nbsp-Linux网络配置文件\" class=\"headerlink\" title=\"3.7&nbsp;Linux网络配置文件\"></a>3.7&nbsp;Linux网络配置文件</h2><ul>\n<li><code>/etc/sysconfig/network</code>，服务器上网络置。</li>\n<li><code>/etc/hostname</code>，主机名和完整域名</li>\n<li><code>/etc/hosts</code>，IP和主机名映射．别名</li>\n<li><code>/etc/host.conf</code>，和主机名解析顺序</li>\n<li><code>/etc/resolv.conf</code>，DNS客户机配置</li>\n<li><code>/etc/services</code>，服务名和端口号之间的映射。</li>\n<li><code>/etc/rc.d/init.d/network</code>，网络配置脚本，开机通过脚本文件来读取相应的初始配置。</li>\n</ul>\n<h2 id=\"3-8-nbsp-Linux网络配置命令\"><a href=\"#3-8-nbsp-Linux网络配置命令\" class=\"headerlink\" title=\"3.8&nbsp;Linux网络配置命令\"></a>3.8&nbsp;Linux网络配置命令</h2><ul>\n<li><code>ifconfig</code>，网络接口（网卡）命令<code>ifconfig up</code>、<code>ifconfig down</code>、<code>ifconfig ethO</code></li>\n<li><code>route</code>，配置路由命令<code>route add</code>、<code>route del</code>、<code>route gw</code></li>\n<li><code>ping</code>,网络测试命令<code>ping -a</code>、<code>ping -t</code>、<code>ping -n</code>、<code>ping -I</code></li>\n<li><code>netstat</code>，网络查询命令<code>netstat -r</code>、<code>netstat -a</code>、<code>netstat -n</code></li>\n</ul>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li>在Windows系统中，默认用户权限最低的是 []{.gap} {.quiz}<ul>\n<li>everyone  {.correct}</li>\n<li>administrator {.options}</li>\n<li>power users {.options}</li>\n<li>users {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在Windows系统中，通过运行 []{.gap} 命令可以打开Windows管理控制台{.quiz}</p>\n<ul>\n<li>regedit {.options}</li>\n<li>cmd {.options}</li>\n<li>mmc {.correct}</li>\n<li>mfc {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在Linux系统中把外部设备当做文件统一管理，外部设备文件通常放在 []{.gap} 目录中{.quiz}</p>\n<ul>\n<li>/dev {.correct}</li>\n<li>/lib {.options}</li>\n<li>/etc {.options}</li>\n<li>/bin {.options}<br>{.options}<blockquote>\n<ul>\n<li>dev:设备、lib:库、etc配置、bin系统</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>Linux系统中的文件操作命令grep用于 []{.gap} {.quiz}</p>\n<ul>\n<li>列出文件的属性信息 {.options}</li>\n<li>在指定路径查找文件 {.options}</li>\n<li>复制文件 {.options}</li>\n<li>在指定文件中查找指定的字符串 {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在Linux中，更改用户口令的命令是 []{.gap} {.quiz}</p>\n<ul>\n<li>pwd {.options}</li>\n<li>passwd {.correct}</li>\n<li>kouling {.options}</li>\n<li>password {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>默认情况下，Linux系统中用户登录密码信息存放在 []{.gap}  文件中{.quiz}</p>\n<ul>\n<li>/etc/group {.options}</li>\n<li>/etc/userinfo {.options}</li>\n<li>/etc/shadow {.correct}</li>\n<li>/etc/profile {.options}<br>{.options}</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E5%BA%94%E7%94%A802/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E5%BA%94%E7%94%A802/",
            "title": "网络安全与应用02",
            "date_published": "2021-02-26T01:31:35.000Z",
            "content_html": "<h1 id=\"应用层安全协议\"><a href=\"#应用层安全协议\" class=\"headerlink\" title=\"应用层安全协议\"></a>应用层安全协议</h1><h2 id=\"应用层安全协议概念\"><a href=\"#应用层安全协议概念\" class=\"headerlink\" title=\"应用层安全协议概念\"></a>应用层安全协议概念</h2><ul>\n<li>S-HTTP或SHTTP（Sec HTTP），安全超文本传输协议，是HTTP扩展，使用TCP的80端口</li>\n<li>HTTPS： <strong>HTTP+SSL</strong>，使用TCP的443端口。与TLS（传输层安全标准）是双胞胎，为4.5层协议</li>\n</ul>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/27/6S0p0x.png\" alt=\"shttp\"></p>\n<h2 id=\"PGP\"><a href=\"#PGP\" class=\"headerlink\" title=\"PGP\"></a>PGP</h2><ul>\n<li>PGP是电子邮件加密软件包， <strong>是一款软件</strong>，把RSA公钥体系的高保密和传统加密体系的高速度巧妙的结合起来，称为最流行的电子邮件加密系统</li>\n<li>可以用来加密文件方式非授权者阅读，还能数字签名，防止篡改</li>\n</ul>\n<h3 id=\"PGP服务\"><a href=\"#PGP服务\" class=\"headerlink\" title=\"PGP服务\"></a>PGP服务</h3><ul>\n<li>PGP提供两种服务： <strong>数据加密和数字签名</strong>，使用RSA对公钥证书加密认证 ， IDEA（128位密钥）进行数据加密，MD5进行完整性验证</li>\n<li><strong>加密算法</strong>：支持IDEA、CAST、3DES算法对消息进行加密，采用Elgamal或RSA算法用接收方的公钥加密会话密钥</li>\n<li><strong>数字签名</strong> ：采用SHA-1、MD5消息摘要算法计算消息的摘要值，用发送者的私钥按DSS或RSA算法加密消息摘要</li>\n</ul>\n<h3 id=\"PGP广泛应用的特点\"><a href=\"#PGP广泛应用的特点\" class=\"headerlink\" title=\"PGP广泛应用的特点\"></a>PGP广泛应用的特点</h3><ol>\n<li>能够在各种平台上免费使用，有众多厂商支持</li>\n<li>基于比较安全的加密算法（RSA、IDEA、MD5）</li>\n<li>应用领域广泛，可加密文件，也可用于个人安全通信</li>\n<li>不是政府或标准化组织开发和控制的</li>\n<li>网民普遍喜欢这种自由化的软件包</li>\n</ol>\n<h2 id=\"安全电子交易协议SET\"><a href=\"#安全电子交易协议SET\" class=\"headerlink\" title=\"安全电子交易协议SET\"></a>安全电子交易协议SET</h2><ul>\n<li>保证购物安全，以信用卡为基础，在线交易的标准</li>\n<li><p>安全性高，保证信息传输的机密性、真实性、完整性和不可否认性</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/27/6S0PAK.gif\" alt=\"set\"></p>\n</li>\n<li><strong>SET</strong>是安全协议和报文格式的集合，融入了SSL、STT、SHTTP、PKI等加密签名认证等。采用公钥密码体制和X.509数字证书，称为目前公认的信用卡网上交易的国际标准</li>\n</ul>\n<h3 id=\"SET提供的服务\"><a href=\"#SET提供的服务\" class=\"headerlink\" title=\"SET提供的服务\"></a>SET提供的服务</h3><ol>\n<li>保证客户交易信息的保密性和完整性</li>\n<li>确保商家和客户交易行为的不可否认性</li>\n<li>确保商家和客户的合法性</li>\n</ol>\n<h3 id=\"双重签名技术\"><a href=\"#双重签名技术\" class=\"headerlink\" title=\"双重签名技术\"></a>双重签名技术</h3><ul>\n<li>消费者对订单信息和支付信息进行签名，商家看不到消费者账号信息，银行看不到消费者订购信息，但可确认是真实的</li>\n</ul>\n<h2 id=\"应用层安全协议Kerberos\"><a href=\"#应用层安全协议Kerberos\" class=\"headerlink\" title=\"应用层安全协议Kerberos\"></a>应用层安全协议Kerberos</h2><ul>\n<li>Kerberos是一项认证范围，3A认证有验证、授权和记账</li>\n<li>防重放、保护数据完整性</li>\n<li><p>AS认证服务器，TGS票据授予服务器，V应用服务器</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/27/6S0itO.png\" alt=\"kbros\"></p>\n</li>\n</ul>\n<h3 id=\"基于Kerberos的网关模型\"><a href=\"#基于Kerberos的网关模型\" class=\"headerlink\" title=\"基于Kerberos的网关模型\"></a>基于Kerberos的网关模型</h3><ul>\n<li><p>用户初始登录一行，用户名和密码长期保存在内存中，用户登录新应用时，系统会自动提取用户名和密码，用户不需再输入</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/27/6S0E1H.png\" alt=\"kbwg\"></p>\n</li>\n</ul>\n<h1 id=\"防火墙技术\"><a href=\"#防火墙技术\" class=\"headerlink\" title=\"防火墙技术\"></a>防火墙技术</h1><h2 id=\"防火墙基本概念\"><a href=\"#防火墙基本概念\" class=\"headerlink\" title=\"防火墙基本概念\"></a>防火墙基本概念</h2><ul>\n<li><strong>定义</strong>：<ul>\n<li>来源于建筑物防火墙一词，位于两个或多个网络之间，执行访问控制策略，过滤进出数据包的一种软件或硬件设备， ==是一个由软件和硬件设备组合而成，位于内外网之间、专用与公共网之间的保护屏障==</li>\n</ul>\n</li>\n<li><strong>防火墙的要求</strong>：<ul>\n<li>所有进出网络的通信流量都必须经过防火墙</li>\n<li>只有内部访问策略授权的通信才能允许通过</li>\n<li>防火墙本身具有很强的高可靠性</li>\n</ul>\n</li>\n<li><strong>防火墙的主要功能</strong>：<ul>\n<li>访问控制功能</li>\n<li>内容控制功能</li>\n<li>全面的日志功能</li>\n<li>集中管理功能</li>\n<li>自身的安全功能</li>\n</ul>\n</li>\n<li><strong>防火墙的附加功能</strong> ：<ul>\n<li>流量控制</li>\n<li>网络地址转换NAT</li>\n<li>虚拟专用网VPN</li>\n</ul>\n</li>\n<li><strong>防火墙的局限性</strong>：<ul>\n<li>关闭限制了一些访问带来不便</li>\n<li>对内部的攻击无能为力</li>\n<li>带来传输延迟单点失效</li>\n<li>其他</li>\n</ul>\n</li>\n<li><strong>防火墙的技术分类</strong>（OSI不同层次的防火墙）：<ul>\n<li>包过滤防火墙<ul>\n<li>==工作在网络层，通过检查数据包包头，对数据包进行筛选==</li>\n</ul>\n</li>\n<li>代理防火墙<ul>\n<li>==工作在应用层，通过代理服务器在内外网之间进行请求核实，代理服务器也称应用层网关==</li>\n</ul>\n</li>\n<li>状态化包过滤防火墙<ul>\n<li>==工作在网络层==</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"防火墙分类\"><a href=\"#防火墙分类\" class=\"headerlink\" title=\"防火墙分类\"></a>防火墙分类</h2><ul>\n<li><strong>个人防火墙</strong> ：保护单个主机，有瑞星防火墙、天网防火墙、费尔防火墙等。</li>\n<li><strong>企业防火墙</strong> ：对整个网络实时保护，有赛门铁克防火墙、诺顿防火墙、思科防火墙、华为防火墙、Juniper防火墙等）。</li>\n<li><strong>软件防火墙</strong> ：有瑞星防火墙、天网防火墙、微软ISAServer、卡巴斯基防火墙等。</li>\n<li><strong>硬件防火墙</strong> ：思科防火墙、Juniper防火墙等。</li>\n</ul>\n<h3 id=\"华为防火墙的网络划分\"><a href=\"#华为防火墙的网络划分\" class=\"headerlink\" title=\"华为防火墙的网络划分\"></a>华为防火墙的网络划分</h3><ol>\n<li>连接外部网络的不信任区域（Untrust）</li>\n<li>连接内部用户主机的信任区域（Trust）</li>\n<li>连接需要对外提供应用服务的DMZ区域（DemilitarizedZone）—非军事区（停火区）</li>\n</ol>\n<h2 id=\"防火墙体系结构\"><a href=\"#防火墙体系结构\" class=\"headerlink\" title=\"防火墙体系结构\"></a>防火墙体系结构</h2><ul>\n<li><strong>双宿主机模式</strong><ul>\n<li>防火墙具有两个网卡接口，通过包过滤代理访问网络。这是比较简单的一种结构。一般可以根据IP地址和端口号进行过滤</li>\n</ul>\n</li>\n<li><strong>屏蔽子网模式</strong><ul>\n<li>又叫过滤子网模式，两个包过滤路由器中间建立一个隔离的子网，定义为DMZ网络，也称为非军事化区域，这是目前防火墙最常用的模式</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"防火墙的工作模式\"><a href=\"#防火墙的工作模式\" class=\"headerlink\" title=\"防火墙的工作模式\"></a>防火墙的工作模式</h2><ul>\n<li>==路由模式、透明模式、混合模式3种。==</li>\n<li><strong>路由模式</strong> ：<ul>\n<li>如果防火墙以第三层对外连接（接口具有IP地址），则认为防火墙工作在路由模式下。</li>\n</ul>\n</li>\n<li><strong>透明模式</strong> ：<ul>\n<li>防火墙通过第二层对外连接（接口无IP地址），则防火墙工作在透明模式下。</li>\n</ul>\n</li>\n<li><strong>混合模式</strong> ：<ul>\n<li>若防火墙同时具有工作在路由模式和透明模式的接口（某些接口具有IP地址，某些接口无IP地址）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"防火墙的访问规则\"><a href=\"#防火墙的访问规则\" class=\"headerlink\" title=\"防火墙的访问规则\"></a>防火墙的访问规则</h2><ul>\n<li>3种接口，<ol>\n<li>内部接口(Inbound)连接内网和内网服务器。</li>\n<li>外部接口（Outbound）连接外部公共网络。</li>\n<li>中间接口（DMZ）连接对外廾放服务器。</li>\n</ol>\n</li>\n</ul>\n<hr>\n<ol>\n<li>Inbound可以访问任何Outbound和dmz区域</li>\n<li>dmz可以访问Outbound区域</li>\n<li>Outbound访问dmz需配合static(静态地址转换)</li>\n<li>Inbound访问dmz需要配合acl（访问控制列表)</li>\n</ol>\n<h2 id=\"防火墙配置\"><a href=\"#防火墙配置\" class=\"headerlink\" title=\"防火墙配置\"></a>防火墙配置</h2><ul>\n<li><strong>Dual-homed方式</strong><ul>\n<li>此方式最简单，Dual-homedGateway放置在两个网络之间，这个<code>Dual-homed Gateway</code>又称为<code>Bastion host</code>.这种==结构成本低==，但是它有单点失败的问题。这种结构没有增加网络安全的自我防卫能力，而它往往是受”黑客“攻击的首选目标，它自己一旦被攻破,整个网络也就暴露了。</li>\n</ul>\n</li>\n<li><strong>Screened-host方式</strong><ul>\n<li><code>Screening router</code>为保护<code>Bastion host</code>的安全建立了一j首屏障。它将所有进入的信息先送往<code>Bastion host</code>，并且只接受来自<code>Bastion host</code>的数据作为出去的数据。这种结构依赖<code>Screening router</code>和<code>Bastion host</code>，只要有一个失败，整个网络就暴露了。</li>\n</ul>\n</li>\n<li><strong>Screened-subnet方式</strong><ul>\n<li>包含两个<code>Screening router</code>和两个<code>Bastion host</code>.==在公共网络和私有网络之间构成了一个隔离网，称之为“停火区”（DMZ，即DemilitarizedZone）==，<code>Bastion host</code>放置在“停火区”内。这种==结构安全性好==，只有当两个安全单元被破坏后，网络才被暴露，但是==成本也很昂贵==</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"网络攻击\"><a href=\"#网络攻击\" class=\"headerlink\" title=\"网络攻击\"></a>网络攻击</h1><ul>\n<li><strong>定义</strong><ul>\n<li>网络攻击（Cyberattack，也译为赛博攻击）是指针对计算机信息系统、基础设施、计算机网络或个人计算机设备的，任何类型的进攻动作。在电脑和电脑网络中，破坏、揭露、修改、使软件或服务失去功能、在没有得到授权的情况下偷取或访问任何一电脑的资料，都会被视为于电脑和电脑网络中的攻击</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"常见网络攻击方式\"><a href=\"#常见网络攻击方式\" class=\"headerlink\" title=\"常见网络攻击方式\"></a>常见网络攻击方式</h2><h3 id=\"拒绝服务攻击（DOS攻击）\"><a href=\"#拒绝服务攻击（DOS攻击）\" class=\"headerlink\" title=\"拒绝服务攻击（DOS攻击）\"></a>拒绝服务攻击（DOS攻击）</h3><blockquote>\n<p>拒绝服务攻击实现的流程：攻击者大量伪造的TCP连接请求，使被攻击方资源耗尽（CPU满负荷或内存不足）的攻击方式。</p>\n<ul>\n<li><strong>造成的危害</strong><ul>\n<li>消耗系统资源（带宽、内存、队列、CPU）；</li>\n<li>导致目标主机宕机，</li>\n<li>阻止授权用户正常访问服务（慢、不能连接、没有响应）；<h3 id=\"分布式拒绝服务攻击（DDOS攻击）\"><a href=\"#分布式拒绝服务攻击（DDOS攻击）\" class=\"headerlink\" title=\"分布式拒绝服务攻击（DDOS攻击）\"></a>分布式拒绝服务攻击（DDOS攻击）</h3>基于DOS攻击，借助于客户/服务器技术，将多个计算机联合起来作为攻击平台，对一个或多个目标发动DDoS攻击，从而成倍地提高拒绝服务攻击的威力<br>其他常见的DOS攻击还有<code>SYNF lood</code>、<code>Ping of Death</code>、<code>Teardrop</code>攻击、<code>Land</code>攻击、<code>SmurfIn</code>击、<code>winnuke</code>攻击等</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h3 id=\"SQL注入攻击\"><a href=\"#SQL注入攻击\" class=\"headerlink\" title=\"SQL注入攻击\"></a>SQL注入攻击</h3><ul>\n<li><strong>攻击原理</strong> :<ul>\n<li>通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令，获取攻击者想要取得的数据。具体来说，它是==利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力==。<blockquote>\n<p>SQL注入攻击属于数据库安全攻击手段之一，可以通过数据库安全防护技术实现有效防护，数据库安全防护技术包括：数据库漏扫数据库加密、数据库防火墙、数据脱敏、数据库安全审计系统。<br>SQL注入攻击会导致的数据库安全风险包括：刷库、拖库、撞库</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"跨站脚本攻击\"><a href=\"#跨站脚本攻击\" class=\"headerlink\" title=\"跨站脚本攻击\"></a>跨站脚本攻击</h3><ul>\n<li><p>跨站脚本攻击（也称为XSS）指利用网站漏洞从用户那里恶意盗取信息。</p>\n</li>\n<li><p><strong>攻击原理</strong> ：</p>\n<ul>\n<li>用户在浏览网站、使用即时通讯软件、甚至在阅读电子邮件时，通常会点击其中的链接。攻击者y4通过在这些链接中插入恶意代码，就能够盗取用户信息、破坏页面结构、重定向导其他网站等</li>\n</ul>\n</li>\n<li>跨站脚本攻击（<code>Cross Site Scripting</code>)缩写为CSS，但这会与层叠样式表(<code>Cascading Style Sheets</code>,CSS）的缩写混淆。因此有人将跨站脚本攻击缩写为XSS,如果你听到有人说”我发现了一个XSS漏洞”，显然他是在说跨站脚本攻击。</li>\n</ul>\n<h2 id=\"网络攻击分类\"><a href=\"#网络攻击分类\" class=\"headerlink\" title=\"网络攻击分类\"></a>网络攻击分类</h2><h3 id=\"被动攻击\"><a href=\"#被动攻击\" class=\"headerlink\" title=\"被动攻击\"></a>被动攻击</h3><ul>\n<li>攻击者通过监视所有信息流以获取某些秘密</li>\n<li>基于网络或操作系统的</li>\n<li>很难被检测到，只可==通过预防应付该类攻击==，主要通过==数据加密==的方式</li>\n</ul>\n<h3 id=\"主动攻击\"><a href=\"#主动攻击\" class=\"headerlink\" title=\"主动攻击\"></a>主动攻击</h3><ul>\n<li>涉及数据流的修改或创建错误流</li>\n<li><strong>主要攻击形式</strong><ul>\n<li>假冒</li>\n<li>欺骗</li>\n<li>消息篡改</li>\n<li>拒绝服务</li>\n</ul>\n</li>\n<li>无法预防但可以检测</li>\n<li>检测手段： ==防火墙、入侵检测技术==</li>\n</ul>\n<h3 id=\"物理临近攻击\"><a href=\"#物理临近攻击\" class=\"headerlink\" title=\"物理临近攻击\"></a>物理临近攻击</h3><ul>\n<li><p>未授权者可物理上接近网络、系统或设备，目的是修改、手机或拒绝访问信息</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/03/20/64CQUK.png\" alt=\"wlgj\"></p>\n</li>\n</ul>\n<h3 id=\"内部人员攻击\"><a href=\"#内部人员攻击\" class=\"headerlink\" title=\"内部人员攻击\"></a>内部人员攻击</h3><ul>\n<li>信息安全处理系统由直接访问权的人直接干预系统进行攻击</li>\n</ul>\n<h3 id=\"分发攻击\"><a href=\"#分发攻击\" class=\"headerlink\" title=\"分发攻击\"></a>分发攻击</h3><ul>\n<li><p>在软件和硬件开发出来之后和安装之前这段时间，受攻击者而已修改软/硬件</p>\n<h1 id=\"病毒和木马\"><a href=\"#病毒和木马\" class=\"headerlink\" title=\"病毒和木马\"></a>病毒和木马</h1></li>\n<li><p><strong>病毒</strong> ：一段可执行的程序代码，通过其他可执行程序启动和感染传播，可自我复制，难以清除，破坏性强。（强盗）</p>\n</li>\n<li><strong>木马</strong> ：一种潜伏在计算机里并且秘密开放一个甚至多个数据传输通道的远程控制程序。C/S结构，客户端也称为控制端。偷偷盗取账号、蜜码等信息。（间谍）</li>\n<li><strong>恶意代码</strong> ：又称恶意软件。也称为广告软件、间谍软件，没有作用却会带来危险。（恶搞）</li>\n</ul>\n<h2 id=\"常见病毒木马的特征分类\"><a href=\"#常见病毒木马的特征分类\" class=\"headerlink\" title=\"常见病毒木马的特征分类\"></a>常见病毒木马的特征分类</h2><ul>\n<li><strong>文件宏病毒</strong>：<ul>\n<li>感染Offic文件，前缀Macro或者word/excel等</li>\n</ul>\n</li>\n<li><strong>蠕虫病毒</strong> ：<ul>\n<li>前缀Worm，通过系统漏洞传播</li>\n</ul>\n</li>\n<li><strong>木马病毒</strong> ：<ul>\n<li>前缀Trojan，黑客病毒前缀Hack,往往成对出现</li>\n</ul>\n</li>\n<li><strong>系统病毒</strong> ：<ul>\n<li>前缀Win32、PE、Win95等</li>\n</ul>\n</li>\n<li><strong>脚本病毒</strong> ：<ul>\n<li>前缀Script，通过网页传播</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"黑客与骇客\"><a href=\"#黑客与骇客\" class=\"headerlink\" title=\"黑客与骇客\"></a>黑客与骇客</h2><ul>\n<li>黑客技术高超，帮助测试建设网络</li>\n<li>骇客专门搞破坏或恶作剧</li>\n</ul>\n<h3 id=\"黑客攻击\"><a href=\"#黑客攻击\" class=\"headerlink\" title=\"黑客攻击\"></a>黑客攻击</h3><ol>\n<li>拒绝服务攻击</li>\n<li>huanchongq溢出攻击</li>\n<li>漏洞攻击</li>\n<li>网络欺骗攻击</li>\n<li>网络钓鱼</li>\n<li>僵尸网络</li>\n</ol>\n<h3 id=\"预防攻击\"><a href=\"#预防攻击\" class=\"headerlink\" title=\"预防攻击\"></a>预防攻击</h3><ul>\n<li>安装杀毒软件、硬件防火墙和UTM统一威胁安全管理设备，合理设置安全策略，制定应急预案<h1 id=\"IDS与IPS\"><a href=\"#IDS与IPS\" class=\"headerlink\" title=\"IDS与IPS\"></a>IDS与IPS</h1><h2 id=\"入侵检测系统IDS\"><a href=\"#入侵检测系统IDS\" class=\"headerlink\" title=\"入侵检测系统IDS\"></a>入侵检测系统IDS</h2></li>\n<li>位于防火墙之后的第二道安全屏障，是防火墙的有力补充</li>\n<li>通过对网络关键点收集信息并对其分析，检测到违反安全策略的行为和入侵的迹象，做出自动反应，在系统损坏或数据丢失之前阻止入侵者的进一步行动</li>\n</ul>\n<h2 id=\"入侵防御系统IPS\"><a href=\"#入侵防御系统IPS\" class=\"headerlink\" title=\"入侵防御系统IPS\"></a>入侵防御系统IPS</h2><ul>\n<li>位于防火墙之后的第二道安全屏障，是防火墙的有力补充</li>\n<li>通过对网络关键点收集信息并对其分析，检测到攻击企图，就会自动将攻击包丢掉或采取措施阻挡攻击源，切断网络</li>\n</ul>\n<h2 id=\"IPS-IDS和防火墙的区别\"><a href=\"#IPS-IDS和防火墙的区别\" class=\"headerlink\" title=\"IPS/IDS和防火墙的区别\"></a>IPS/IDS和防火墙的区别</h2><ul>\n<li>防火墙一般只检测网络层和传输层的数据报，不能检测应用层的内容</li>\n<li>IPS/IDS可以检查字节内容</li>\n<li><strong>IPS与IDS的区别</strong><ul>\n<li>IPS是串接在网络中，会切断网络</li>\n<li>IDS是旁路式并联在网络中，不切断网络</li>\n</ul>\n</li>\n<li>IDS/IPS:<ul>\n<li>连接在需要把交换机端口配置成镜像端口上，可以检测全网流量</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"计算机系统安全等级\"><a href=\"#计算机系统安全等级\" class=\"headerlink\" title=\"计算机系统安全等级\"></a>计算机系统安全等级</h1><blockquote>\n<p>美国国防部提出可信计算机系统评测标准TCSEC(习惯上称橘皮书),TCSEC将系统分成ABCD四类7个安全级别：</p>\n<ul>\n<li><strong>D级</strong> ：级别最低，保护措施少，没有安全功能；</li>\n<li><strong>C级</strong> ：自定义保护级。<ul>\n<li><strong>C1级</strong> ：自主安全保护级。</li>\n<li><strong>C2级</strong> ：受控访问级实现更细粒度的自主访问控制，通过登录规程、审计安全性事件以隔离资源。<code>Windows NT 4.0</code>属于C2级。</li>\n</ul>\n</li>\n<li><strong>B级</strong> ：强制保护级<ul>\n<li><strong>Bl</strong> 标记安全保护级</li>\n<li><strong>B2</strong> 结构化安全保护级</li>\n<li><strong>B3</strong> 安全域</li>\n</ul>\n</li>\n<li><strong>A级</strong> ：可验证的保护<ul>\n<li><strong>Al</strong> ：拥有止式的分析和数学方法。</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E5%BA%94%E7%94%A801/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E5%BA%94%E7%94%A801/",
            "title": "网络安全与应用01",
            "date_published": "2021-02-25T10:34:39.000Z",
            "content_html": "<h1 id=\"网络安全基础\"><a href=\"#网络安全基础\" class=\"headerlink\" title=\"网络安全基础\"></a>网络安全基础</h1><h2 id=\"网络安全威胁和漏洞类型\"><a href=\"#网络安全威胁和漏洞类型\" class=\"headerlink\" title=\"网络安全威胁和漏洞类型\"></a>网络安全威胁和漏洞类型</h2><ul>\n<li>窃听&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;病毒（强盗行为）</li>\n<li>假冒（假的）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;木马（间谍行为）</li>\n<li><strong>重放</strong> （真的）&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;诽谤</li>\n<li><strong>流量分析</strong> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;非授权访问</li>\n<li>破坏完整&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;拒绝服务</li>\n</ul>\n<hr>\n<ul>\n<li>漏洞：==物理、软件、不兼容等==</li>\n</ul>\n<h2 id=\"网络安全信息数据的五大特征\"><a href=\"#网络安全信息数据的五大特征\" class=\"headerlink\" title=\"网络安全信息数据的五大特征\"></a>网络安全信息数据的五大特征</h2><ul>\n<li><strong>完整性</strong> ：信息数据完整不破坏</li>\n<li><strong>保密性</strong> ：信息数据需授权不泄露</li>\n<li><strong>可用性</strong> ：信息数据攻击后迅速恢复可用</li>\n<li><strong>不可否任性</strong> ：信息数据参与者不可否认不可抵赖，身份真实有效</li>\n<li><strong>可控性</strong> ：信息数据可以管控传播范围</li>\n</ul>\n<h2 id=\"网络安全基本技术\"><a href=\"#网络安全基本技术\" class=\"headerlink\" title=\"网络安全基本技术\"></a>网络安全基本技术</h2><ul>\n<li><strong>数据加密</strong> ：数据按照规则打乱，重新组合</li>\n<li><strong>数字签名</strong> ：证明发送者签发，具有不可抵赖、完整性</li>\n<li><strong>身份认证</strong> ：用户合法性，身份真实没假冒</li>\n<li><strong>防火墙</strong> ：控制内外数据进出，阻挡木马病毒</li>\n<li><strong>入侵检测</strong> ：采用经常检测特征保护网络</li>\n<li><strong>网络隔离</strong> ：内外网隔离分开使用</li>\n</ul>\n<hr>\n<h2 id=\"加密算法与信息摘要\"><a href=\"#加密算法与信息摘要\" class=\"headerlink\" title=\"加密算法与信息摘要\"></a>加密算法与信息摘要</h2><h3 id=\"密码体制分类\"><a href=\"#密码体制分类\" class=\"headerlink\" title=\"密码体制分类\"></a>密码体制分类</h3><p><strong>一个密码系统的组成包括以下五个部分：</strong></p>\n<ol>\n<li><strong>明文空间M</strong> (Message) ，它是全体明文的集合。</li>\n<li><strong>密文空间C</strong> (Ciphertext)，它是全体密文的集合。</li>\n<li><strong>密钥空间K</strong> (Key) ，它是全体密钥的集合。其中每一个密钥K均由加密密钥和解密密钥组成，即:<ol>\n<li><strong>加密算法E</strong> (Encryption)，它是一族由M到C的加密变换，对于每一个具体的，则E就确定出一个具体的加密函数，把M加密成密文C。</li>\n<li><strong>解密算法D</strong> (Decryption)，它是一族由C到M的解密变换，对于每一个确定的，则D就确定出一个具体的解密函数。</li>\n</ol>\n</li>\n</ol>\n<ul>\n<li><p><strong>加密过程</strong></p>\n<ul>\n<li>将明文变换为密文所使用的的变换函数，其变换过程即为加密<script type=\"math/tex; mode=display\">c=E(k_1,m)</script>(其中明文为m，加密算法E，加密密钥$k_1$，密文为c)</li>\n</ul>\n</li>\n<li><p><strong>解密过程</strong></p>\n<ul>\n<li>将密文恢复为明文的变换函数，其变换过程称为解密<script type=\"math/tex; mode=display\">m=D(k_2,c)</script>(其中密文c，解密算法D，解密密钥$k_2$,明文m)</li>\n</ul>\n</li>\n</ul>\n<p><strong>根据密钥类型不同将密码体制分为两类：</strong></p>\n<ol>\n<li><strong>对称密钥</strong> ：<ul>\n<li>==加密、解密用的是同一个密钥==，一旦密钥持有方任何一方泄露密钥——加密的内容将不再安全。</li>\n</ul>\n</li>\n<li><strong>不对称密钥</strong> <ul>\n<li>即==公钥加密==，==加密、解密用的是不同的密钥==，一个密钥“公开”，即公钥，另一个自己秘密持有，即私钥，加密方用公钥加密，只有用私钥才能解密——史称公钥加密体系：PKI。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"公钥加密体制\"><a href=\"#公钥加密体制\" class=\"headerlink\" title=\"公钥加密体制\"></a>公钥加密体制</h3><ul>\n<li>==非对称密码体制==也叫==公钥加密技术==，该技术就是针对私钥密码体制的缺陷被提出来的。在公钥加密系统中，加密和解密是相对独立的，加密和解密会使用两把不同的密钥，加密密钥(公开密钥)向公众公开，谁都可以使用，解密密钥(秘密密钥)只有解密人自己知道，非法使用者根据公开的加密密钥无法推算出解密密钥，顾其可称为公钥密码体制。</li>\n</ul>\n<h3 id=\"私钥加密体制\"><a href=\"#私钥加密体制\" class=\"headerlink\" title=\"私钥加密体制\"></a>私钥加密体制</h3><ul>\n<li>==对称密码体制==是一种传统密码体制，也称为==私钥密码体制==。在对称加密系统中，加密和解密采用相同的密钥。因为加解密密钥相同，需要通信的双方必须选择和保存他们共同的密钥，各方必须信任对方不会将密钥泄密出去，这样就可以实现数据的机密性和完整性。<h2 id=\"现代信息加密技术\"><a href=\"#现代信息加密技术\" class=\"headerlink\" title=\"现代信息加密技术\"></a>现代信息加密技术</h2></li>\n<li><p>分为 ==对称和非对称==</p>\n<ul>\n<li><strong>对称</strong><ul>\n<li>DES</li>\n<li>3DES</li>\n<li>IDEA</li>\n<li>AES</li>\n<li>RC4</li>\n</ul>\n</li>\n<li><strong>非对称</strong><ul>\n<li>RSA(基于大素数分解3人)</li>\n<li>ECC(椭圆曲线密码编码学)</li>\n<li>Elgamal(基于离散对数1人)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>DES数据加密标准</p>\n</li>\n<li>3DES三重DES加密</li>\n<li>IDEA国际数据加密算法</li>\n<li>AES高级加密标准</li>\n<li>RC4流加密算法第四版</li>\n</ul>\n<h2 id=\"现代信息加密技术堆成密钥总结\"><a href=\"#现代信息加密技术堆成密钥总结\" class=\"headerlink\" title=\"现代信息加密技术堆成密钥总结\"></a>现代信息加密技术堆成密钥总结</h2><p>  <img data-src=\"https://s3.ax1x.com/2021/02/25/yv7K9s.png\" alt=\"jmjs\"></p>\n<h2 id=\"公钥加密RSA\"><a href=\"#公钥加密RSA\" class=\"headerlink\" title=\"公钥加密RSA\"></a>公钥加密RSA</h2><ul>\n<li><strong>加密体系</strong> ：<ul>\n<li>==公钥加密==</li>\n<li>==私钥解密==</li>\n</ul>\n</li>\n<li><p><strong>签名体系</strong> ：</p>\n<ul>\n<li>==私钥加密==</li>\n<li>==公钥解密==</li>\n</ul>\n</li>\n<li><p><strong>算法步骤</strong> ：</p>\n</li>\n</ul>\n<ol>\n<li>选两个大素数p和q （大于1的自然数，除了1和它本身没有能被其他自然数整除的数）</li>\n<li>令 $n=p*q$,$z=(p-1)(q-1)$</li>\n<li>满足公式 $e*d=1(mod z)$,e公钥，d私钥<ol>\n<li>mod为模运算（即取余数）</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"数字签名技术\"><a href=\"#数字签名技术\" class=\"headerlink\" title=\"数字签名技术\"></a>数字签名技术</h1><h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><ul>\n<li>数字签名用于确认发送者身份和消息的完整性</li>\n<li>满足三个条件：<ul>\n<li>接受者能够核实发送者</li>\n<li>发送者事后不能抵赖</li>\n<li>接收者不能伪造签名</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"密钥管理技术\"><a href=\"#密钥管理技术\" class=\"headerlink\" title=\"密钥管理技术\"></a>密钥管理技术</h1><h2 id=\"密钥管理体系\"><a href=\"#密钥管理体系\" class=\"headerlink\" title=\"密钥管理体系\"></a>密钥管理体系</h2><ul>\n<li><strong>KMI</strong> ：密钥管理基础结构，第三方KDC，秘密物理通道，适用于封闭的内网使用</li>\n<li><strong>PKI</strong> ：公钥基础结构，不依赖秘密物理通道，适用于开放的外网</li>\n<li><strong>SPK</strong> ：适用于规模化专用网</li>\n<li><strong>记忆口诀</strong>： ==男人在外面PK(I)（拼搏，指外网使用）,女人在家里KM(I)（看门，指内网使用）==</li>\n</ul>\n<h1 id=\"虚拟专用网VPN\"><a href=\"#虚拟专用网VPN\" class=\"headerlink\" title=\"虚拟专用网VPN\"></a>虚拟专用网VPN</h1><h2 id=\"VPN技术\"><a href=\"#VPN技术\" class=\"headerlink\" title=\"VPN技术\"></a>VPN技术</h2><ul>\n<li>建立在公网上</li>\n<li>虚拟性，没有专用物理连接</li>\n<li>利用隧道协议进行加密发送私人消息</li>\n<li>专用性，非VPN用户无法访问</li>\n<li>可在不安全的网络下发送安全可靠的信息</li>\n</ul>\n<h2 id=\"VPN四大关键技术\"><a href=\"#VPN四大关键技术\" class=\"headerlink\" title=\"VPN四大关键技术\"></a>VPN四大关键技术</h2><ul>\n<li>隧道技术</li>\n<li>加解密技术</li>\n<li>密钥管理技术</li>\n<li>身份认证技术</li>\n</ul>\n<h2 id=\"VPN三种应用解决方案\"><a href=\"#VPN三种应用解决方案\" class=\"headerlink\" title=\"VPN三种应用解决方案\"></a>VPN三种应用解决方案</h2><ul>\n<li><strong>内联网VPN</strong><ul>\n<li>企业内部用于连通综合和分布各个LAN局域网</li>\n</ul>\n</li>\n<li><strong>外联网VPN</strong><ul>\n<li>企业外部用于实现企业与客户、银行、供应商互通</li>\n</ul>\n</li>\n<li><strong>远程接入</strong><ul>\n<li>解决远程用户出差访问企业内部网络</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"VPN在七层协议中使用的技术\"><a href=\"#VPN在七层协议中使用的技术\" class=\"headerlink\" title=\"VPN在七层协议中使用的技术\"></a>VPN在七层协议中使用的技术</h2><p>   <img data-src=\"https://s3.ax1x.com/2021/02/25/yv7lj0.png\" alt=\"vpnjs\"></p>\n<h3 id=\"PPP、PPTP、P2TP技术对比\"><a href=\"#PPP、PPTP、P2TP技术对比\" class=\"headerlink\" title=\"PPP、PPTP、P2TP技术对比\"></a>PPP、PPTP、P2TP技术对比</h3><p>   <img data-src=\"https://s3.ax1x.com/2021/02/25/yv7YEF.png\" alt=\"vpnhz\"></p>\n<h3 id=\"PPTP与L2TP的比较\"><a href=\"#PPTP与L2TP的比较\" class=\"headerlink\" title=\"PPTP与L2TP的比较\"></a>PPTP与L2TP的比较</h3><ol>\n<li>PPTP要求IP网络下使用，L2TP适用于各种网络</li>\n<li>PPTP只能建立一条隧道，L2TP可以建立多条</li>\n<li>PPTP包头占用6字节，L2TP占用4字节</li>\n<li>PPTP不支持隧道验证，L2TP支持隧道验证</li>\n</ol>\n<h2 id=\"IPSec\"><a href=\"#IPSec\" class=\"headerlink\" title=\"IPSec\"></a>IPSec</h2><ul>\n<li>IP安全性，在IP层通过加密与数据源验证，来保证数据报传输安全</li>\n</ul>\n<ol>\n<li>认证头AH，用于数据完整和数据源认证，防止重放</li>\n<li>封装安全负荷ESP，提供数据保密、数据完整、辅助防重放</li>\n<li>密钥交换协议IKE，生成分发密钥</li>\n</ol>\n<ul>\n<li><strong>IPSec两种模式</strong>：<ul>\n<li>==传输模式==</li>\n<li>==隧道模式==</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"SSL安全套接层\"><a href=\"#SSL安全套接层\" class=\"headerlink\" title=\"SSL安全套接层\"></a>SSL安全套接层</h2><ul>\n<li>和TLS（传输层安全标准）是双胞胎</li>\n<li>在传输层上4.5层套接安全协议</li>\n<li>SSL/TLS称为 <strong>HTTPS</strong></li>\n<li>工作在传输层</li>\n<li>对传输层、应用层都可控制</li>\n</ul>\n<h2 id=\"SSL与IPSec的区别\"><a href=\"#SSL与IPSec的区别\" class=\"headerlink\" title=\"SSL与IPSec的区别\"></a>SSL与IPSec的区别</h2><ol>\n<li><strong>IPSec在网络层建立隧道，适用于固定的VPN</strong> 。SSL是通过应用层的Web连接建立的，适用于移动用户远程访问公司的VPN</li>\n<li>IPSec==工作在网络层，灵活性小==。SSL==工作在传输层，灵活性大==</li>\n</ol>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>高级加密标准AES支持的三种密钥长度不包括 []{.gap} {.quiz}</p>\n<ul>\n<li>56 {.correct} </li>\n<li>128 {.options}</li>\n<li>192 {.options}</li>\n<li>256 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在报文摘要算法MD5中，首先要进行明文分组与填充，其中分组时明文报文摘要按照 []{.gap}  位进行分组。 {.quiz}</p>\n<ul>\n<li>128 {.options}</li>\n<li>256 {.options}</li>\n<li>512 {.correct}</li>\n<li>1024 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>按RSA算法，若选两个奇数P=5，Q=3，公钥E=7，则私钥为 []{.gap} {.quiz}</p>\n<ul>\n<li>6 {.options}</li>\n<li>7 {.options}</li>\n<li>8 {.options}</li>\n<li>9 {.correct}<br>{.options} <blockquote>\n<ul>\n<li>n=pq=15,  z=(p-1)(q-1)=8, 根据ed=1（mod z）</li>\n<li>即ed/z余数为1，则（7*d）/8…1，即9符合</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>甲和乙要进行通信，甲对发送的信息附加了数字签名，乙收到该消息后利用   []{.gap}  验证该消息的真实性 {.quiz}</p>\n<ul>\n<li>甲的公钥 {.correct}</li>\n<li>甲的私钥 {.options} </li>\n<li>乙的公钥 {.options} </li>\n<li>乙的私钥 {.options}<br>{.options} <blockquote>\n<ul>\n<li>数字签名：公钥解密，私钥加密</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>某企业打算采用IPSec协议构建VPN，由于企业申请的全球IP地址不够，企业内部网绝对使用本地IP地址，这是在内外网间的路由器上应采用  []{.gap} {.quiz}  </p>\n<ul>\n<li>NAT技术 {.correct}</li>\n<li>加密技术 {.options} </li>\n<li>消息鉴别技术 {.options} </li>\n<li>数字签名技术 {.options}<br>{.options} </li>\n</ul>\n</li>\n<li><p>（续第五题），IPSec协议应采用  []{.gap} {.quiz}  </p>\n<ul>\n<li>传输模式 {.options} </li>\n<li>隧道模式 {.correct}</li>\n<li>传输和隧道混合模式 {.options} </li>\n<li>传输和隧道嵌套模式 {.options}<br>{.options} </li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E4%B8%8B%E4%B8%80%E4%BB%A3%E4%BA%92%E8%81%94%E7%BD%91/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E4%B8%8B%E4%B8%80%E4%BB%A3%E4%BA%92%E8%81%94%E7%BD%91/",
            "title": "下一代互联网",
            "date_published": "2021-02-24T23:41:44.000Z",
            "content_html": "<h1 id=\"IPv6基础知识\"><a href=\"#IPv6基础知识\" class=\"headerlink\" title=\"IPv6基础知识\"></a>IPv6基础知识</h1><h2 id=\"IPv6概念\"><a href=\"#IPv6概念\" class=\"headerlink\" title=\"IPv6概念\"></a>IPv6概念</h2><ul>\n<li><p>下一代互联网NGI，目前是第六版。IPv6分组有1个固定头部和n个扩展头部（任选）以及上层协议的负载组成</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/25/yv7FjP.png\" alt=\"ipv6\"></p>\n</li>\n<li><p><strong>IPv6优点</strong></p>\n<ul>\n<li>更快的传输速度，地址空间更大，层次结构，首部格式灵活</li>\n<li>更安全的传输方式</li>\n<li>即插即用，支持资源预分配</li>\n</ul>\n</li>\n<li><p><strong>IPV6各个字段的解释含义</strong>：</p>\n<ul>\n<li>版本0110，代表IPV6</li>\n<li>通信类型：8位，IP分组优先级，同服务类型</li>\n<li>流标记：20位，标记特殊处理的分组</li>\n<li>负载长度：16位，除了固定，扩展和负载</li>\n<li>下一头部：8位，指明下一头部的类型</li>\n<li>跳数限制：检测路由循环</li>\n<li>源地址：128位，发送端的地址</li>\n<li>目标地址：128位，接收端的地址</li>\n</ul>\n</li>\n<li><p><strong>IPV6扩展头部分组封装顺序</strong>：</p>\n<ol>\n<li>IPV6头部</li>\n<li>逐跳选项头</li>\n<li>目标选项头（第一个目标节点要处理的信息）</li>\n<li>路由选择头</li>\n<li>分段头</li>\n<li>认证头</li>\n<li>封装安全负荷头</li>\n<li>目标选项头（最后的目标节点要处理的信息）</li>\n<li>上层协议头部 </li>\n</ol>\n</li>\n<li><p><strong>IPV6地址</strong> ：128位，冒分十六进制。8000:0000:0000:0000:0123:4567:89AB:CDE F（8段，每4位二进制，写成十六进制） </p>\n</li>\n<li><p><strong>IPV6地址简化书写</strong> ：①前面的0可以省，后面 的不可以省。②多个0可以用冒号，但只能一 次。③多个0可以压缩为一个0。④IPV4兼容写法::192.168.1.10</p>\n</li>\n<li><p><strong>IPV6格式前缀</strong> ：12AB00000000CD3/60简写 12AB::CD30:0:0:0:0/60、12AB:0:0:CD30::/60</p>\n</li>\n<li><p><strong>IPV6地址分类</strong> ：单播地址、任意播 地址、组(多)播地址。分配到接口，一个接口 可以被赋予任何类型的多个地址或地址范围。</p>\n<ul>\n<li><p>任意播：①不能作源，只能作目标。②不能给主机，只能给路由器。</p>\n</li>\n<li><p>组(多)播：一组接口。没有广播，格式前缀 1111 1111。</p>\n</li>\n<li><p>单播：①可聚合全球单播。②链路本地地址。③站点本地地址。④特殊单播地址。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"IPv6地址分类\"><a href=\"#IPv6地址分类\" class=\"headerlink\" title=\"IPv6地址分类\"></a>IPv6地址分类</h2><ul>\n<li><p>①可聚合全球单播（相当于公网IP）：前缀&nbsp; 001。</p>\n</li>\n<li><p>②链路本地地址（相当于自动专用IP）：前缀 &nbsp;1111 1110 10。</p>\n</li>\n<li><p>③站点本地地址（相当于私有IP）：前缀&nbsp; 1111 1110 11。</p>\n</li>\n<li><p>④特殊单播地址：不确定地址0:0:0:0:0:0:0:0， 不分配，初始用，能作源地址，不能目的地址。回环地址 0:0:0:0:0:0:0:1，发给自己，可作源地址和目的地址。</p>\n</li>\n</ul>\n<h2 id=\"IPv6地址配置\"><a href=\"#IPv6地址配置\" class=\"headerlink\" title=\"IPv6地址配置\"></a>IPv6地址配置</h2><ul>\n<li><strong>默认自动配置分两种</strong>：<ul>\n<li>全状态自动配置：动态主机配置协议DHCP，实现了IP地址的自动配置</li>\n</ul>\n</li>\n<li><strong>无状态自动配置</strong>：<ul>\n<li>获得链路本地地址：链路本地地址前缀 <code>1111 1110 10</code>后加网卡MAC地址，产生一个链路本地地址，并发出一个ICMPv6请求，确认唯一性</li>\n<li>获得可聚合全球单播地址：向本地链路中所有足部ICMPv6路由器请求，主机获得单播前缀001后加自己的接口ID，自动配置单播地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"IPv6与IPv4区别\"><a href=\"#IPv6与IPv4区别\" class=\"headerlink\" title=\"IPv6与IPv4区别\"></a>IPv6与IPv4区别</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IPv4地址</th>\n<th style=\"text-align:center\">IPv6地址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">点分十进制表示</td>\n<td style=\"text-align:center\">带冒号的十六进制表示，0压缩</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">分为ABCDE类</td>\n<td style=\"text-align:center\">不分类</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">组播地址<code>224.0.0.0/4</code></td>\n<td style=\"text-align:center\">组播地址<code>FF00::/8</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">广播地址（主机部分全为1</td>\n<td style=\"text-align:center\">任意播（限于子网内部）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">默认地址<code>0.0.0.0</code></td>\n<td style=\"text-align:center\">不确定地址 <code>::</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">回环地址<code>127.0.0.1</code></td>\n<td style=\"text-align:center\">回环地址<code>::1</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">公共地址</td>\n<td style=\"text-align:center\">可聚合全球单播地址<code>FP=001</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">私网地址 <code>10.0.0.0/8</code>、<code>172.16.0.0/12</code></td>\n<td style=\"text-align:center\">站点本地地址<code>FECO::/48</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">自动专用IP地址<code>169.254.0.0/16</code></td>\n<td style=\"text-align:center\">链路本地地址<code>FE8O::/48</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"IPv6相比IPv4的改进\"><a href=\"#IPv6相比IPv4的改进\" class=\"headerlink\" title=\"IPv6相比IPv4的改进\"></a>IPv6相比IPv4的改进</h2><ol>\n<li><strong>扩展寻址能力</strong>：扩展到128位，致辞多级地址层次，改进组播，增加任意播更实用</li>\n<li><strong>简化报头格式</strong>：IP头部字段由12个减少为8个，中间路由器由6个减少为4个，提高效率</li>\n<li><strong>改进路由选项</strong>：路由选项放在扩展头部，仅在需要时插上路由选项，更灵活流畅</li>\n<li><strong>提供流标记</strong>：对某些分组进行特别处理，可以提供特别的服务质量，更好的传送数据</li>\n</ol>\n<h1 id=\"移动IP\"><a href=\"#移动IP\" class=\"headerlink\" title=\"移动IP\"></a>移动IP</h1><h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><ul>\n<li><p>移动主机在移动的同时，能够在任何地方使用它的家乡地址进行联网</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/25/yv7VHS.png\" alt=\"ydip\"></p>\n</li>\n<li><p>移动IP的原理：移动主机分配一个家乡地址作为永久标识。如果到外地赋予一个转交地址，家乡地址会获得外地的转交地址。</p>\n</li>\n</ul>\n<h1 id=\"IPv6过渡技术\"><a href=\"#IPv6过渡技术\" class=\"headerlink\" title=\"IPv6过渡技术\"></a>IPv6过渡技术</h1><h2 id=\"隧道技术\"><a href=\"#隧道技术\" class=\"headerlink\" title=\"隧道技术\"></a>隧道技术</h2><ul>\n<li>用于解决IPV6网络节点之间通过IPV4网络进行通信的问题（时空隧道）</li>\n<li>优点：<ul>\n<li>充分利用现有网络投资，过渡初期实现方便</li>\n</ul>\n</li>\n<li>缺点：<ul>\n<li>路由器隧道出入口负载重，实现复杂，不利于大规模应用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"协议翻译技术\"><a href=\"#协议翻译技术\" class=\"headerlink\" title=\"协议翻译技术\"></a>协议翻译技术</h2><ul>\n<li>使得纯IPV6节点之间和纯IPV4节点之间可以通信（英汉互译）</li>\n<li>优点：<ul>\n<li>不需要升级改造，开启NAT-PT即可</li>\n</ul>\n</li>\n<li>缺点：<ul>\n<li>转换不能完全保持原有含义，缺乏安全性</li>\n</ul>\n</li>\n<li>技术：SIIT翻译、NAT-PT翻译、TRT翻译<h2 id=\"双协议技术\"><a href=\"#双协议技术\" class=\"headerlink\" title=\"双协议技术\"></a>双协议技术</h2></li>\n<li>使得IPV4与IPV6共存于同一设备和同一网络中（英汉双语）</li>\n<li>优点：<ul>\n<li>网络规划相对简单，可以充分发挥安全性、路由约束和流支持</li>\n</ul>\n</li>\n<li>缺点：<ul>\n<li>对设备要求较高，维护大量协议和数据，升级改造投资大、建设周期比较长</li>\n</ul>\n</li>\n<li>技术：BIS双栈、BIA双栈 </li>\n</ul>\n<h2 id=\"6to4隧道\"><a href=\"#6to4隧道\" class=\"headerlink\" title=\"6to4隧道\"></a>6to4隧道</h2><ul>\n<li>IPV6穿越PIV4.6to4地址：前缀为2002，如<code>192.0.2.42</code>对应于6to4地址为<code>2002:c000:022a::/48</code>，隧道两端的节点必须都支持IPV6和IPV4协议栈</li>\n</ul>\n<h2 id=\"6over4隧道\"><a href=\"#6over4隧道\" class=\"headerlink\" title=\"6over4隧道\"></a>6over4隧道</h2><ul>\n<li>IPV4自动生成IPV6地址，例如<code>192.0.2.142</code>对应的链路本地地址为<code>FE80::C000:028E/64</code>,这种方法就是无状态自动配置，依赖于IPV4组播，收到局限</li>\n</ul>\n<h2 id=\"ISATAP隧道\"><a href=\"#ISATAP隧道\" class=\"headerlink\" title=\"ISATAP隧道\"></a>ISATAP隧道</h2><ul>\n<li>站内自动隧道寻址协议，自动分配地址的技术，可以穿透NAT设备</li>\n</ul>\n<h1 id=\"IPV6路由协议\"><a href=\"#IPV6路由协议\" class=\"headerlink\" title=\"IPV6路由协议\"></a>IPV6路由协议</h1><ul>\n<li><strong>RIPng</strong>：RIPv2的扩展，UDP521端口</li>\n<li><strong>OSPFv3</strong>：OSPFv2的扩展</li>\n<li><strong>BGP4+</strong>：BGP4的扩展，用于支持IPV6</li>\n<li><strong>ICMPv6</strong>：ICMP的扩展，集成了ARP功能</li>\n<li><strong>IS-IS</strong>：中间系统到中间系统，IS-IS属于内部网关路由协议。使用SPT算法进行路由计算</li>\n</ul>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>IPV6地址可以表示成各种简写形式，以下地址，33AB:0000:0000:CD30:0000:0000:0000:0000/60简写形式，正确的是 []{.gap} {.quiz}</p>\n<ul>\n<li>33AB:0:0:CD30::/60 {.correct}</li>\n<li>33AB::CD3/60 {.options}</li>\n<li>33AB:0:0:CD3/60 {.options}</li>\n<li>33AB::CD30/60 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在IPv6地址中，IPV6可聚合全球单播地址的格式前缀是 []{.gap} {.quiz}</p>\n<ul>\n<li>001 {.correct}</li>\n<li>100 {.options}</li>\n<li>11111111011 {.options}</li>\n<li>11111111 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>所谓移动IP是指 []{.gap} {.quiz}</p>\n<ul>\n<li>通过地址翻译技术改变主机的IP地址 {.options}</li>\n<li>一个主机IP地址可以转移给另一个手机  {.options}</li>\n<li>移动主机通过在无线通信网中漫游来保持网络连接 {.correct}</li>\n<li>移动主机在离开家乡网络的远程站点可以连接工作 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在IPV4和IPV6混合的网络中，协议翻译技术用于 []{.gap} {.quiz}</p>\n<ul>\n<li>两个IPV6主机通过IPV4网络通信 {.options}</li>\n<li>两个IPV4主机提过IPV6网络通信 {.options}</li>\n<li>纯IPV4主机和纯IPV6主机之间的同学 {.correct}</li>\n<li>两个双协议栈主机之间的通信 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>实现移动IP的关键技术是 []{.gap} {.quiz}</p>\n<ul>\n<li>移动主机具有一个可以接入任何网络的通用IP地址 {.options}</li>\n<li>移动主机具有一个家乡网络地址并获取一个外地转交地址 {.correct}</li>\n<li>移动主机通过控制全网的管理中心申请网络接入服务 {.options}</li>\n<li>移动主机总是通过家乡网络地址采取接入服务 {.options}<br>{.options} </li>\n</ul>\n</li>\n<li><p>IPv6单播地址的描述中，正确的是 []{.gap} {.quiz}</p>\n<ul>\n<li>任何端口只能用于一个唯一的全局地址 {.options} </li>\n<li>站点本地地址的格式前缀为FE00::/10 {.options} </li>\n<li>链路本地地址的额格式前缀为FE00::/12 {.options} </li>\n<li>全球单播地址的格式前缀为2000::/3  {.correct}<br>{.options} </li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9104/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9104/",
            "title": "网络互联与互联网04",
            "date_published": "2021-02-24T10:14:32.000Z",
            "content_html": "<h1 id=\"路由器技术NAT\"><a href=\"#路由器技术NAT\" class=\"headerlink\" title=\"路由器技术NAT\"></a>路由器技术NAT</h1><h2 id=\"路由器技术NAT（地址转换）\"><a href=\"#路由器技术NAT（地址转换）\" class=\"headerlink\" title=\"路由器技术NAT（地址转换）\"></a>路由器技术NAT（地址转换）</h2><ul>\n<li><strong>网络地址翻译</strong> ，解决IP短缺，路由器内部和外部地址进行转换</li>\n<li><strong>静态地址转换</strong> ：静态NAT（一对一）</li>\n<li><strong>动态地址转换</strong> ：动态NAT（多对少）<ul>\n<li>内外多对少转换，用于内部局域网较多用户访问外部网络</li>\n</ul>\n</li>\n<li><strong>网络地址端口转换</strong> ：NAPT（多对一）<ul>\n<li>内外多对一转换，使用外部一个IP，多个端口号对应内部IP，也称IP伪装，可以隐藏内部主机</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"静态NAT\"><a href=\"#静态NAT\" class=\"headerlink\" title=\"静态NAT\"></a>静态NAT</h2><ul>\n<li>内外一对一转换， ==用于Web服务器==， ==ftp服务器==等 <strong>固定IP的主机服务器</strong></li>\n</ul>\n<h2 id=\"动态NAT\"><a href=\"#动态NAT\" class=\"headerlink\" title=\"动态NAT\"></a>动态NAT</h2><ul>\n<li>内外多对少转换，用于内部局域网较多用户访问外部网络</li>\n<li>外部需要地址池（Pool）</li>\n</ul>\n<h1 id=\"路由器技术VLSM和CIDR\"><a href=\"#路由器技术VLSM和CIDR\" class=\"headerlink\" title=\"路由器技术VLSM和CIDR\"></a>路由器技术VLSM和CIDR</h1><h2 id=\"路由器技术VLSM\"><a href=\"#路由器技术VLSM\" class=\"headerlink\" title=\"路由器技术VLSM\"></a>路由器技术VLSM</h2><ul>\n<li><strong>可变长子网掩码</strong></li>\n<li>在有类的IP地址的基础上，从他们的主机号部分解除相应的位数来做网络号，也就是增加网络号的位数，即子网划分</li>\n<li>各类网络可以用来再划分子网的位数为:<ul>\n<li>A类有24位可以借</li>\n<li>B类有16位可以借</li>\n<li>C类有8位可以借</li>\n</ul>\n</li>\n<li>VLSM是把标准网络分割成更小的子网的技术，而CIDR是把几个标准的网络合并为一个大网络的技术</li>\n</ul>\n<h2 id=\"路由器技术CIDR\"><a href=\"#路由器技术CIDR\" class=\"headerlink\" title=\"路由器技术CIDR\"></a>路由器技术CIDR</h2><ul>\n<li>无类域间路由，解决路由缩放问题，采用/比特位，无类不区分A、B、C类，称为CIDR地址块，即路由汇聚</li>\n</ul>\n<h1 id=\"路由器技术QoS\"><a href=\"#路由器技术QoS\" class=\"headerlink\" title=\"路由器技术QoS\"></a>路由器技术QoS</h1><ul>\n<li>网络访问质量。将网络数据流分成不同的等级，提供不同的服务</li>\n<li><p>有 ==集成服务(IntServ)和区分服务(DiffServ)== 两种标准</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yXDVcq.jpg\" alt=\"qos\"></p>\n</li>\n</ul>\n<h2 id=\"QoS集成服务\"><a href=\"#QoS集成服务\" class=\"headerlink\" title=\"QoS集成服务\"></a>QoS集成服务</h2><ul>\n<li><p><strong>分为三种</strong> ：</p>\n<ul>\n<li>保证质量的服务</li>\n<li>控制负载的服务</li>\n<li>尽力而为的服务（目前因特网提供的服务）</li>\n</ul>\n</li>\n<li><p><code>Best-Effort service</code>（尽力而为服务模型）</p>\n</li>\n<li><code>Integrated service</code>（综合服务模型，简称 <code>Int-Serv</code> ）</li>\n<li><code>Differentiated service</code>（区分服务模型，简称<code>Diff-Serv</code> ）</li>\n</ul>\n<ol>\n<li><strong>Best-Effort 服务模型</strong></li>\n</ol>\n<ul>\n<li>Best-Effort 是一个单一的服务模型，也是最简单的服务模型。对Best-Effort 服务模型，网络尽最大的可能性来发送报文。但对时延、可靠性等性能不提供任何保证。Best-Effort 服务模型是网络的缺省服务模型，通过FIFO 队列来实现。它适用于绝大多数网络应用，如FTP、E-Mail等。</li>\n</ul>\n<ol>\n<li><strong>Int-Serv 服务模型</strong>（集成服务）</li>\n</ol>\n<ul>\n<li>Int-Serv 是一个综合服务模型，它可以满足多种QoS需求。该模型使用资源预留协议（RSVP），RSVP 运行在从源端到目的端的每个设备上，可以监视每个流，以防止其消耗资源过多。这种体系能够明确区分并保证每一个业务流的服务质量，为网络提供最细粒度化的服务质量区分。比如我用VOIP，需要12k的带宽和100ms以内的延迟，集成服务模型就会将其归到事先设定的一种服务等级中。<br>但是，Inter-Serv 模型对设备的要求很高，当网络中的数据流数量很大时，设备的存储和处理能力会遇到很大的压力。Inter-Serv 模型可扩展性很差，难以在Internet核心网络实施。这种为单一数据流进行带宽预留的解决思路在Internet上想要实现很难，所以该模型在1994年推出以后就没有使用过。</li>\n</ul>\n<ol>\n<li><strong>Diff-Serv 服务模型</strong></li>\n</ol>\n<ul>\n<li>Diff-Serv 是一个多服务模型，由一系列技术组成，它可以满足不同的QoS 需求。与Int-Serv 不同，它不需要通知网络为每个业务预留资源。</li>\n<li>区分服务代码点DSCP，利用IP包头的服务类型字段ToS</li>\n<li>不再使用资源预约，而是区分不同的业务流</li>\n<li>分为三种：<ul>\n<li>尽力服务BE</li>\n<li>优质服务AF</li>\n<li>加上服务EF</li>\n</ul>\n</li>\n<li><p><strong>逐跳行为PHB：</strong>：</p>\n<ul>\n<li><p>逐级跳的转发方式，每个PHB对于一种转发方式</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/24/yXDnBT.png\" alt=\"phb\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"路由器技术MPLS\"><a href=\"#路由器技术MPLS\" class=\"headerlink\" title=\"路由器技术MPLS\"></a>路由器技术MPLS</h1><ul>\n<li>MPLS，多协议标签交换，属于2.5层，一般认为是第三层交换，硬件交换、速度快</li>\n<li>一次路由，多次交换</li>\n<li>用标签交换代替赋值的路由运算</li>\n</ul>\n<h2 id=\"MPLS工作原理\"><a href=\"#MPLS工作原理\" class=\"headerlink\" title=\"MPLS工作原理\"></a>MPLS工作原理</h2><ul>\n<li><p>标记边缘路由器LER，标记交换路由器LSR</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/24/yXDuHU.jpg\" alt=\"mpls\"></p>\n</li>\n</ul>\n<h2 id=\"MPLS转发等价类（FEC）\"><a href=\"#MPLS转发等价类（FEC）\" class=\"headerlink\" title=\"MPLS转发等价类（FEC）\"></a>MPLS转发等价类（FEC）</h2><ul>\n<li>把等价的通信流汇聚转发，标记具有局部性</li>\n<li>提供QoS、粒度控制、负载均衡</li>\n</ul>\n<h1 id=\"路由器技术组播\"><a href=\"#路由器技术组播\" class=\"headerlink\" title=\"路由器技术组播\"></a>路由器技术组播</h1><h2 id=\"IP组播\"><a href=\"#IP组播\" class=\"headerlink\" title=\"IP组播\"></a>IP组播</h2><ul>\n<li>有一个源向一个组主机发送信息，D类地址（一个IP地址代表一个主机，称为单播地址）</li>\n</ul>\n<h2 id=\"IP组播用途\"><a href=\"#IP组播用途\" class=\"headerlink\" title=\"IP组播用途\"></a>IP组播用途</h2><ul>\n<li>用于视频点播、网络电视、视频会议和 ==点到多点== 的业务</li>\n</ul>\n<h2 id=\"组播地址分类\"><a href=\"#组播地址分类\" class=\"headerlink\" title=\"组播地址分类\"></a>组播地址分类</h2><ul>\n<li><strong>保留组播</strong>：<ul>\n<li><code>224.0.0.0-224.0.0.255</code>，用于路由协议，如<code>224.0.0.1</code>代表所有主机，<code>224.0.0.2</code>代表所有路由器</li>\n</ul>\n</li>\n<li><strong>用户组播</strong>：<ul>\n<li><code>224.0.1.0-238.255.255.255</code>，全球范围分配，类似公网IP</li>\n</ul>\n</li>\n<li><strong>本地组播</strong>：<ul>\n<li><code>239.0.0.0-239.255.255.255</code>。本地子网分配，类似私网IP</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"常考IP组播地址\"><a href=\"#常考IP组播地址\" class=\"headerlink\" title=\"常考IP组播地址\"></a>常考IP组播地址</h2><ul>\n<li><code>224.0.0.1</code><ul>\n<li>所有主机的地址</li>\n</ul>\n</li>\n<li><code>224.0.0.2</code><ul>\n<li>所有组播路由器的地址</li>\n</ul>\n</li>\n<li><code>224.0.0.5</code><ul>\n<li>所有OSPF路由器</li>\n</ul>\n</li>\n<li><code>224.0.0.6</code><ul>\n<li>OSPF DR/BDR </li>\n</ul>\n</li>\n<li><code>224.0.0.9</code><ul>\n<li>RIPv2路由器</li>\n</ul>\n</li>\n<li><code>224.0.0.10</code><ul>\n<li>EIGRP路由器</li>\n</ul>\n</li>\n<li><code>224.0.0.12</code><ul>\n<li>DHCP服务器/中继代理</li>\n</ul>\n</li>\n<li><code>224.0.0.13</code><ul>\n<li>所有pim路由器</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"IP组播地址与MAC地址\"><a href=\"#IP组播地址与MAC地址\" class=\"headerlink\" title=\"IP组播地址与MAC地址\"></a>IP组播地址与MAC地址</h2><p>   <img data-src=\"https://s3.ax1x.com/2021/02/24/yXD3C9.png\" alt=\"ipzb\"></p>\n<h2 id=\"IP组播协议\"><a href=\"#IP组播协议\" class=\"headerlink\" title=\"IP组播协议\"></a>IP组播协议</h2><h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><ul>\n<li>IGMP因特网组管理协议，管理主机加入或离开组播组</li>\n<li>IGMP封装在IP中，协议号为2</li>\n</ul>\n<h3 id=\"IGMPv3报文分类\"><a href=\"#IGMPv3报文分类\" class=\"headerlink\" title=\"IGMPv3报文分类\"></a>IGMPv3报文分类</h3><ul>\n<li>IGMPv3报文分类：<ul>\n<li>成员资格询问报文：<ul>\n<li>组播路由器发出，询问是否有主机加入组播</li>\n</ul>\n</li>\n<li>成员资格报告报文<ul>\n<li>主机加入组播组</li>\n</ul>\n</li>\n<li>组记录报文<ul>\n<li>记录组播的状态和信息</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"IP组播路由协议\"><a href=\"#IP组播路由协议\" class=\"headerlink\" title=\"IP组播路由协议\"></a>IP组播路由协议</h2><ul>\n<li>用来建立组播树，是实现组播传输的关键技术</li>\n<li><p>分为 ==源分发树和共享分发树==</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/24/yXDNDK.png\" alt=\"zblyxy\"></p>\n</li>\n</ul>\n<h3 id=\"名词解释\"><a href=\"#名词解释\" class=\"headerlink\" title=\"名词解释\"></a>名词解释</h3><ul>\n<li><strong>PIM</strong>：协议无关组播</li>\n<li><strong>PIM-DM</strong>：密集模式PIM</li>\n<li><strong>DVMRP</strong>：距离矢量组播路由协议</li>\n<li><strong>MOSPF</strong>：组播开放式最短路径优先</li>\n<li><strong>CBT</strong>：基于核心的树</li>\n<li><strong>PIM-SM</strong>：稀疏模式PIM</li>\n</ul>\n<h3 id=\"PIM-DM\"><a href=\"#PIM-DM\" class=\"headerlink\" title=\"PIM-DM\"></a>PIM-DM</h3><ul>\n<li>IP组播路由协议：PIM-DM：密集模<br>式PIM。</li>\n<li>用于组播成员集中，且较多，如局域网。</li>\n<li>采取“泛洪扩散-修剪丢弃”维护组播分发树。使用“推”的机制， <strong>先给你，可以不要。</strong></li>\n<li>关键技术是利用反向通路，使用自己找回来的路径。</li>\n<li>使用源分发树：以组播源为根节点构造到所有组播组成员的生成树，通常也称为最短路径树（SPT）</li>\n</ul>\n<h3 id=\"PIM-SM\"><a href=\"#PIM-SM\" class=\"headerlink\" title=\"PIM-SM\"></a>PIM-SM</h3><ul>\n<li>IP组播路由协议：PIM-SM：稀疏模式PIM，用于组播成员少，且稀疏分布，如<br>广域网。</li>\n<li>采用选择性的建立和维护分布树。只有发送请求的才会收到数据。使用“拉”的机制， <strong>你要了，才会给你。</strong></li>\n<li>使用共享分发树：确定一个汇聚点。先发给汇聚点，再有汇聚点发给其他路由器</li>\n</ul>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li>NAT技术解决了IPv4地址短缺的问题，假设内网的地址数是m，而外网的地址数n，则这种技术叫做 []{.gap} {.quiz}<ul>\n<li>动态地址翻译 {.correct} </li>\n<li>静态地址翻译 {.options}</li>\n<li>地址伪装 {.options}</li>\n<li>地址变换 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>续第一题，若$M&gt;N$m，且n=1，则这种技术叫做 []{.gap} {.quiz}</p>\n<ul>\n<li>动态地址翻译 {.options}</li>\n<li>静态地址翻译 {.options}</li>\n<li>地址伪装 {.correct} </li>\n<li>地址变换 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>一个组播包括4个成员，当组播服务发送信息是需要发出 （[]{.gap}） 个分组 {.quiz}</p>\n<ul>\n<li>1 {.correct}</li>\n<li>2 {.options}</li>\n<li>3 {.options}</li>\n<li>4 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>可以用于表示地址块220.17.0.0-220.17.7.0的网络地址为 []{.gap} {.quiz}</p>\n<ul>\n<li>220.17.0.0/20 {.options}</li>\n<li>220.17.0.0/21 {.correct}</li>\n<li>220.17.0.0/16 {.options}</li>\n<li>220.17.0.0/24 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>续第四题，这个地址块可以分配  （[]{.gap}） 个主机地址？ {.quiz}</p>\n<ul>\n<li>2032 {.correct}</li>\n<li>2048 {.options}</li>\n<li>2000 {.options}</li>\n<li>2056 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>把网络10.1.0.0/16进一步划分子网10.1.0.0/18，则原网络被划分为  （[]{.gap}）   子网 {.quiz}</p>\n<ul>\n<li>2 {.options}</li>\n<li>3 {.options}</li>\n<li>4 {.correct}</li>\n<li>6 {.options}<br>{.options}<blockquote>\n<ul>\n<li>/16到/18相差2位，即$2^2=4$</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>IP 地址202.117.18.254/22是 （[]{.gap}） 地址？ {.quiz}</p>\n<ul>\n<li>网络地址 {.options}</li>\n<li>全局广播地址 {.options}</li>\n<li>定向广播地址 {.options}</li>\n<li>主机地址 {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>如果指定子网掩码为255.255.254.0，则 （[]{.gap}） 地址可以被赋予一个主机 {.quiz}</p>\n<ul>\n<li>112.10.4.0 {.options}</li>\n<li>186.55.3.0 {.correct}</li>\n<li>117.30.3.255 {.options}</li>\n<li>17.34.36.0 {.options}<br>{.options}</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9103/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9103/",
            "title": "网络互联与互联网03",
            "date_published": "2021-02-24T08:22:48.000Z",
            "content_html": "<h1 id=\"传输层协议TCP\"><a href=\"#传输层协议TCP\" class=\"headerlink\" title=\"传输层协议TCP\"></a>传输层协议TCP</h1><h2 id=\"TCP协议\"><a href=\"#TCP协议\" class=\"headerlink\" title=\"TCP协议\"></a>TCP协议</h2><ul>\n<li>传输控制协议，面向字节流按顺序、连接、可靠、全双工，可变滑动窗口、缓冲累积传送。</li>\n<li>协议号6</li>\n</ul>\n<h2 id=\"TCP协议几个重要字段\"><a href=\"#TCP协议几个重要字段\" class=\"headerlink\" title=\"TCP协议几个重要字段\"></a>TCP协议几个重要字段</h2><ul>\n<li><strong>源端口、目的端口：</strong> 16位，$2^{16}$（0-65535）</li>\n<li><strong>URG</strong>：紧急指针有效</li>\n<li><strong>ACK</strong>：应答顺序号有效</li>\n<li><strong>PSH</strong>：推进功能有效</li>\n<li><strong>RST</strong>：复位为初始状态</li>\n<li><strong>SYN</strong>：建立同步连接</li>\n<li><strong>FIN</strong>：结束释放连接</li>\n<li><strong>校验和</strong>：包括TCP段头、数据、伪段头</li>\n</ul>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yX0OyV.jpg\" alt=\"tcpbt\"></p>\n<h2 id=\"TCP端口\"><a href=\"#TCP端口\" class=\"headerlink\" title=\"TCP端口\"></a>TCP端口</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">端口</th>\n<th style=\"text-align:center\">服务</th>\n<th style=\"text-align:center\">端口</th>\n<th style=\"text-align:center\">服务</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">文件传输协议（数据）</td>\n<td style=\"text-align:center\">80</td>\n<td style=\"text-align:center\">超文本传输协议</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">21</td>\n<td style=\"text-align:center\">文件传输协议（控制）</td>\n<td style=\"text-align:center\">110</td>\n<td style=\"text-align:center\">POP3服务器（邮箱发送）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">23</td>\n<td style=\"text-align:center\">Telnet终端仿真协议</td>\n<td style=\"text-align:center\">139</td>\n<td style=\"text-align:center\">Win98共享资源端口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">25</td>\n<td style=\"text-align:center\">SMTP简单邮件发送协议</td>\n<td style=\"text-align:center\">143</td>\n<td style=\"text-align:center\">IMAP电子邮件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">42</td>\n<td style=\"text-align:center\">WINS主机名服务</td>\n<td style=\"text-align:center\">161</td>\n<td style=\"text-align:center\">NMP-snmp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">53</td>\n<td style=\"text-align:center\">域名服务器（DNS）</td>\n<td style=\"text-align:center\">162</td>\n<td style=\"text-align:center\">SNMP-trap-snmp</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"TCP三次握手：防止产生错误的连接\"><a href=\"#TCP三次握手：防止产生错误的连接\" class=\"headerlink\" title=\"TCP三次握手：防止产生错误的连接\"></a>TCP三次握手：防止产生错误的连接</h2><p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yX0OyV.jpg\" alt=\"scws\"></p>\n<ul>\n<li>SYN码：1为肯定，0为否定</li>\n</ul>\n<h2 id=\"TCP四次挥手：释放连接\"><a href=\"#TCP四次挥手：释放连接\" class=\"headerlink\" title=\"TCP四次挥手：释放连接\"></a>TCP四次挥手：释放连接</h2><p>   <img data-src=\"https://s3.ax1x.com/2021/02/24/yXBZwD.png\" alt=\"schs\"></p>\n<h2 id=\"TCP拥塞控制机制\"><a href=\"#TCP拥塞控制机制\" class=\"headerlink\" title=\"TCP拥塞控制机制\"></a>TCP拥塞控制机制</h2><ul>\n<li>报文到达速率大于路由器的转发速率，产生拥塞</li>\n<li><strong>解决方法</strong><ul>\n<li>重传计时器</li>\n<li>慢启动</li>\n<li>拥塞避免</li>\n<li>快速重传</li>\n<li>可变滑动窗口</li>\n<li>选择重发ARQ</li>\n</ul>\n</li>\n<li><strong>总结：差错控制、流量控制、拥塞控制</strong></li>\n</ul>\n<h2 id=\"超时重传计时器\"><a href=\"#超时重传计时器\" class=\"headerlink\" title=\"超时重传计时器\"></a>超时重传计时器</h2><ul>\n<li>重传是为了保证TCP可靠的重要措施。TCP每发送一个报文段，就对这个报文段设置一次计时器。只要计时器设置的时间到了，但还没有收到确认，就重传这一报文段</li>\n<li>重传时间要设置的合理，一般和 <strong>往返时间</strong>、 <strong>平均时延</strong>、 <strong>时间偏差</strong> 等有关。大多数采取观察最近一段时间的报文时延来估算往返时间</li>\n</ul>\n<h2 id=\"慢启动\"><a href=\"#慢启动\" class=\"headerlink\" title=\"慢启动\"></a>慢启动</h2><ul>\n<li>发送方在接收到确认之前逐步扩大窗口的大小</li>\n<li><p>1、2、4、8等按指数规律翻倍，最后达到门限阈值。出现超时，将拥塞窗口回到1，再次开始慢启动</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yXBnFH.png\" alt=\"mqd\"></p>\n</li>\n</ul>\n<h2 id=\"拥塞避免\"><a href=\"#拥塞避免\" class=\"headerlink\" title=\"拥塞避免\"></a>拥塞避免</h2><ul>\n<li>窗口达到门限阈值以后，进入拥塞避免阶段，TCP采用线性增加方式放大窗口，按照+1递增。发生拥塞，门限阈值减半。再发生再减半。按指数规律成倍减半</li>\n</ul>\n<h2 id=\"快速重传\"><a href=\"#快速重传\" class=\"headerlink\" title=\"快速重传\"></a>快速重传</h2><ul>\n<li><p>发送端一连收到3个重复ACK，就重传，不等待计时器</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yXBNkQ.png\" alt=\"kscc\"></p>\n</li>\n</ul>\n<h1 id=\"传输层协议UDP\"><a href=\"#传输层协议UDP\" class=\"headerlink\" title=\"传输层协议UDP\"></a>传输层协议UDP</h1><h2 id=\"UDP协议\"><a href=\"#UDP协议\" class=\"headerlink\" title=\"UDP协议\"></a>UDP协议</h2><ul>\n<li>用户数据报协议，无连接的、不可靠的、不保证顺序的、无差错流控机制</li>\n<li>校验和包括：UDP头部、数据、伪头部</li>\n<li>协议号17</li>\n</ul>\n<h2 id=\"UDP报文格式\"><a href=\"#UDP报文格式\" class=\"headerlink\" title=\"UDP报文格式\"></a>UDP报文格式</h2><ul>\n<li>少量传输数据，高层程序负责解决数据排序、差错控制等</li>\n<li><p>开销少，网络管理经常使用</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yXB0lq.png\" alt=\"UDPbw\"></p>\n</li>\n<li><p><strong>TCP支持数据传输，UDP支持音视频传输</strong></p>\n</li>\n</ul>\n<h1 id=\"场景应用层协议\"><a href=\"#场景应用层协议\" class=\"headerlink\" title=\"场景应用层协议\"></a>场景应用层协议</h1><h2 id=\"电子邮件协议SMTP\"><a href=\"#电子邮件协议SMTP\" class=\"headerlink\" title=\"电子邮件协议SMTP\"></a>电子邮件协议SMTP</h2><ul>\n<li>SMTP简单邮件传输协议，负责将邮件==上传到服务器==，采用TCP的25端口，C/S工作模式，仅传送ASCII码文本</li>\n</ul>\n<p>   <img data-src=\"https://s3.ax1x.com/2021/02/24/yXBRh9.jpg\" alt=\"smtp\"></p>\n<h2 id=\"电子邮件协议POP3\"><a href=\"#电子邮件协议POP3\" class=\"headerlink\" title=\"电子邮件协议POP3\"></a>电子邮件协议POP3</h2><ul>\n<li>POP3邮局协议，负责将邮件==下载到客户机==，采用TCP的110端口，C/S工作模式</li>\n<li><p>用户从服务器读取邮件后，服务器就删除该邮件</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yXB46x.png\" alt=\"pop3\"></p>\n</li>\n</ul>\n<h2 id=\"电子邮件协议S-MIME\"><a href=\"#电子邮件协议S-MIME\" class=\"headerlink\" title=\"电子邮件协议S/MIME\"></a>电子邮件协议S/MIME</h2><ul>\n<li>S/MIME多用途互联网邮件扩展协议，负责将多媒体邮件安全 ==上传到服务器中==，包含文本、图像、音频、视频以及其他应用程序专用的数据</li>\n</ul>\n<h2 id=\"电子邮件协议IMAP4\"><a href=\"#电子邮件协议IMAP4\" class=\"headerlink\" title=\"电子邮件协议IMAP4\"></a>电子邮件协议IMAP4</h2><ul>\n<li>IMAP4互联网消息访问协议，提供摘要浏览，选择下载</li>\n<li>采用TCP的142端口，C/S工作模式</li>\n<li>用户从服务器读取邮件后，服务器 <strong>仍会保存该邮件</strong></li>\n</ul>\n<h2 id=\"电子邮件协议PGP\"><a href=\"#电子邮件协议PGP\" class=\"headerlink\" title=\"电子邮件协议PGP\"></a>电子邮件协议PGP</h2><ul>\n<li>PGP电子邮件加密协议，数据加密、鉴别、签名和压缩等技术</li>\n<li>使用IDEA（128位）加密数据，RSA加密密钥，MD5认证</li>\n</ul>\n<ul>\n<li><strong>PEM增强保密邮件协议</strong><ul>\n<li>使用多种加密方法提供机密性、认证和信息完整性的因特网电子邮件协议，采用每个报文 <strong>一次一密的方法加密</strong> ，其他和PGP功能差不多</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"文件传输协议FTP\"><a href=\"#文件传输协议FTP\" class=\"headerlink\" title=\"文件传输协议FTP\"></a>文件传输协议FTP</h2><ul>\n<li>FTP文件传输协议，赋值文件通过服务器 ==上下传送==，</li>\n<li>采用TCP的两条连接<ul>\n<li>数据连接20端口</li>\n<li>控制连接21端口</li>\n</ul>\n</li>\n<li>C/S工作模式</li>\n<li>分为合法访问和匿名访问<ul>\n<li><code>ftp://192.168.12.106</code>的格式访问，或把IP改为域名也可访问，但必须加上<code>ftp://</code>协议头</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"FTP的传输模式\"><a href=\"#FTP的传输模式\" class=\"headerlink\" title=\"FTP的传输模式\"></a>FTP的传输模式</h3><ul>\n<li><strong>FTP的传输模式</strong><ul>\n<li>主动模式（PORT/Standard）</li>\n<li>被动模式（PASV/Passive）</li>\n</ul>\n</li>\n<li><p>区别为：服务器主动使用20端口传数据，被动随机传端口</p>\n<p>   <img data-src=\"https://s3.ax1x.com/2021/02/24/yXBLhd.jpg\" alt=\"port\"></p>\n<p>   <img data-src=\"https://s3.ax1x.com/2021/02/24/yXBbAe.jpg\" alt=\"pasv\"></p>\n</li>\n</ul>\n<h2 id=\"远程登录协议Telnet\"><a href=\"#远程登录协议Telnet\" class=\"headerlink\" title=\"远程登录协议Telnet\"></a>远程登录协议Telnet</h2><ul>\n<li>TCP/IP仿真协议，登录到远程主机上操作，网络虚拟终端NVT致辞异构主机，采用TCP的23端口，C/S工作</li>\n<li><p>使用命令 <code>telnet 192.168.1.254</code></p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yXDSnf.png\" alt=\"telnet\"></p>\n</li>\n</ul>\n<h2 id=\"超文本传输协议HTTP\"><a href=\"#超文本传输协议HTTP\" class=\"headerlink\" title=\"超文本传输协议HTTP\"></a>超文本传输协议HTTP</h2><ul>\n<li>万维网WWW（Web）服务器提供全球的、分布的、动态的、多平台的、交互的多媒体信息</li>\n<li>使用TCP的80端口，B/S工作模式，统一资源定位符URL</li>\n<li>编程语言为HTML</li>\n</ul>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>如果一个TCP连接处于ESTABISHED状态，则表示[]{.gap} {.quiz}</p>\n<ul>\n<li>已经发出了连接请求 {.options}</li>\n<li>处于连接监听状态 {.options}</li>\n<li>连接已经建立 {.correct}</li>\n<li>等待对方的释放连接响应 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>下面哪个字段的信息出现在TCP头部而不出现在UDP头部？ ([]{.gap} )。{.quiz}</p>\n<ul>\n<li>目标端口号 {.options}</li>\n<li>顺序号 {.correct} </li>\n<li>源端口号 {.options}</li>\n<li>校验和 {.options}<br>{.options}<blockquote>\n<ul>\n<li>数据排列：TCP有序，UDP无序</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>SMTP协议用于 ([]{.gap} ) 电子邮件。 {.quiz}</p>\n<ul>\n<li>接受 {.options}</li>\n<li>发送 {.correct} </li>\n<li>丢弃 {.options}</li>\n<li>阻挡 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>POP3协议采用  ([]{.gap} ) 模式进行通信。 {.quiz}</p>\n<ul>\n<li>B/S {.options}</li>\n<li>C/S {.correct} </li>\n<li>P-to-P {.options}</li>\n<li>P-to-C {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在POP3协议中，当客户机需要访问时，客户端软件与POP3服务器建立 ([]{.gap} )  连接。 {.quiz}</p>\n<ul>\n<li>TCP {.correct} </li>\n<li>UDP {.options}</li>\n<li>PHP {.options}</li>\n<li>IP {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在TCP/IP协议中，合法的端口地址的范围是 []{.gap} {.quiz}</p>\n<ul>\n<li>1-255 {.options}</li>\n<li>1-1023 {.options}</li>\n<li>1-1024 {.options}</li>\n<li>1-65535 {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>FTP需要建立两个连接，当工作与PSVE模式时，其数据连接的端口号是 []{.gap} {.quiz}</p>\n<ul>\n<li>20 {.options}</li>\n<li>21 {.options}</li>\n<li>用户确定 {.options}</li>\n<li>服务器确定 {.correct}<br>{.options}<blockquote>\n<ul>\n<li>FTP 默认是主动模式 使用20 21端口，PSVE是随机的，由服务器确定端口号</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9102/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9102/",
            "title": "网络互联与互联网02",
            "date_published": "2021-02-23T13:42:13.000Z",
            "content_html": "<h1 id=\"地址解析协议ARP\"><a href=\"#地址解析协议ARP\" class=\"headerlink\" title=\"地址解析协议ARP\"></a>地址解析协议ARP</h1><ul>\n<li><strong>地址解析协议ARP</strong>：IP查询MAC地址，询问/回答机制。ARP缓存表、ARP欺骗、ARP病毒、代理ARP、反向RARP<br><img data-src=\"https://s3.ax1x.com/2021/02/24/yOlvFS.png\" alt=\"yOlvFS.png\">(<span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWd0dS5jb20vaS95T2x2RlM=\">https://imgtu.com/i/yOlvFS</span>)<h2 id=\"ARP工作原理\"><a href=\"#ARP工作原理\" class=\"headerlink\" title=\"ARP工作原理\"></a>ARP工作原理</h2></li>\n<li>如果主机A向主机B发送数据，首先发送端主机（主机A）检查自己的ARP缓存列表中是否有接收端主机信息，这个列表的==生存周期为300s==，如没有则广播发送<code>ARP request</code>(内容包括主机A的地址、MAC地址),接收端主机（主机B）返回<code>ARP response</code>单播（内容包括主机B的IP地址、MAC地址、主机A的IP地址、MAC地址）并将发送端主机（主机A）的IP和MAC映射关系缓存，而发送端主机（主机A）收到<code>ARP response</code>后更新其ARP缓存表，并发送数据。</li>\n</ul>\n<h2 id=\"ARP缓存表\"><a href=\"#ARP缓存表\" class=\"headerlink\" title=\"ARP缓存表\"></a>ARP缓存表</h2><ul>\n<li>每台主机或路由都维护一个ARP缓存，缓存中含有最近使<br>用过的|P地址与物理地址的映射列表。</li>\n<li>ARP缓存的使用过程<ul>\n<li>主机发送叩数据报需要获取目的主机的物理地址时，首先检查它的ARP缓存，如果ARP缓存中已经存在对应的映射表项，就可以直接从缓存中获取目的主机的物理地址</li>\n<li>只有当ARP缓存中不存在对应的映射表项时，才广播ARP请求。</li>\n</ul>\n</li>\n<li><strong>命令</strong>：<ul>\n<li>开始————&gt;运行————&gt;cmd</li>\n<li>输入 <code>arp -a</code>或<code>-s/-d</code>等————&gt;回车</li>\n<li><code>-a</code>是解析，<code>-s</code>是绑定，<code>-d</code>是删除</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"代理ARP\"><a href=\"#代理ARP\" class=\"headerlink\" title=\"代理ARP\"></a>代理ARP</h2><ul>\n<li>有路由器充当第三方代理，进行ARP请求/回答</li>\n<li>ARP协议的一个变种</li>\n<li>代理ARP(ProxyARP）代表一组主机或一个子网实现ARP</li>\n<li><p>当运行代理P的路由器收到子网1中某一主机查找子网2（被代理子网）中某一主机的|P地址的ARP请求，该路由器代表子网2回送ARP应答。达到隐藏子网的目的。</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/24/yO1Fe0.png\" alt=\"dlarp\"></p>\n</li>\n</ul>\n<h2 id=\"反向地址解析协议RARP\"><a href=\"#反向地址解析协议RARP\" class=\"headerlink\" title=\"反向地址解析协议RARP\"></a>反向地址解析协议RARP</h2><ul>\n<li>用MAC查找IP，常用于无盘工作站，设备没有硬盘，无法记录IP，刚启动时发送一个广播，用MAC去获取IP。需要一台RARP服务器，记录MAC与IP的对应关系</li>\n</ul>\n<h2 id=\"ARP欺骗与ARP病毒\"><a href=\"#ARP欺骗与ARP病毒\" class=\"headerlink\" title=\"ARP欺骗与ARP病毒\"></a>ARP欺骗与ARP病毒</h2><ul>\n<li>假设向某一台主机发送伪装应答报文，使其发送的信息无法到达预期的主机或到达错误的主机，这就构成了一个ARP欺骗。例如，网管软件获取全网MAC地址。病毒伪装网关MAC收集信息</li>\n</ul>\n<h1 id=\"内部路由协议RIP\"><a href=\"#内部路由协议RIP\" class=\"headerlink\" title=\"内部路由协议RIP\"></a>内部路由协议RIP</h1><ul>\n<li><strong>网络层路由协议：选择转发数据路径</strong></li>\n<li>路由协议<ul>\n<li>静态路由协议（手动设置）</li>\n<li>动态路由协议 (自动配置)<ul>\n<li>内部网关协议（RIP）<ul>\n<li>链路状态路由算法（OSPF）</li>\n<li>距离矢量路由算法<ul>\n<li>RIP</li>\n<li>RIPv2</li>\n<li>IGRP （国内几乎不用）</li>\n</ul>\n</li>\n<li>增强型路由算法<ul>\n<li>EIGRP （国内几乎不用）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>外部网关协议（EGP）<ul>\n<li>EIG</li>\n<li>BGP</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"路由信息协议RIP\"><a href=\"#路由信息协议RIP\" class=\"headerlink\" title=\"路由信息协议RIP\"></a>路由信息协议RIP</h2><ul>\n<li>距离矢量算法：<ul>\n<li>计算跳数，最大15跳，==16跳不可达==</li>\n<li>30s更新、180s不存在、240s删除<ul>\n<li>一个更新周期30s,==更新、不存在、删除——口诀“168”==</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>支持等费用负载均衡和链路冗余，使用UDP的520端口<ul>\n<li><strong>负载均衡</strong> ：类似于高速公路的分流措施，把数据看成车流，传输的数据要平均分配到每条路径中</li>\n<li><strong>链路冗余</strong>：有一个数据流，两个路径，数据只走一条路径，就产生链路冗余</li>\n<li>等费用，没条路径上的开销要相同，即设备和到达时间的开销</li>\n</ul>\n</li>\n</ul>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/24/yO1ZYF.png\" alt=\"rip\"></p>\n<h3 id=\"RIP的两个版本\"><a href=\"#RIP的两个版本\" class=\"headerlink\" title=\"RIP的两个版本\"></a>RIP的两个版本</h3><ul>\n<li>RIP适用于小型网络</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">RIPV1</th>\n<th style=\"text-align:center\">RIPV2</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">有类不携带子网掩码</td>\n<td style=\"text-align:center\">无类携带子网掩码</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">采用广播更新</td>\n<td style=\"text-align:center\">采用组播224.0.0.9+广播</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">周期性更新30s</td>\n<td style=\"text-align:center\">采用触发更新</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">不支持VLSM、CIDR</td>\n<td style=\"text-align:center\">支持VLSM、CIDR</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">不提供认证</td>\n<td style=\"text-align:center\">提供明文和MD5认证</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"RIP防止环路的方法\"><a href=\"#RIP防止环路的方法\" class=\"headerlink\" title=\"RIP防止环路的方法\"></a>RIP防止环路的方法</h3><ol>\n<li><strong>最大跳数</strong>：当一个路由条目发送出去会自加1跳，跳数最大为16跳，意味着不可达</li>\n<li><strong>水平分割</strong>：一条路由信息不回发送给信息的来源</li>\n<li><strong>反向毒化的水平分割</strong>：把从邻居学习到的路由信息设为16跳，再发送给那个邻居，更加安全</li>\n<li><strong>抑制定时器</strong>和 <strong>触发更新</strong>也可以防止环路</li>\n</ol>\n<h1 id=\"内部路由协议OSPF\"><a href=\"#内部路由协议OSPF\" class=\"headerlink\" title=\"内部路由协议OSPF\"></a>内部路由协议OSPF</h1><h2 id=\"什么是OSPF？\"><a href=\"#什么是OSPF？\" class=\"headerlink\" title=\"什么是OSPF？\"></a>什么是OSPF？</h2><ul>\n<li><p><strong>开放最短路径优先协议OSPF</strong>，链路状态算法，包括：连通、距离、时延、带宽等状态。==Dijkstra的SPF算法==。触发更新、分层路由，==支持大型网络==</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/24/yO1KyR.png\" alt=\"ospf\"></p>\n</li>\n</ul>\n<h2 id=\"OSPF区域类型\"><a href=\"#OSPF区域类型\" class=\"headerlink\" title=\"OSPF区域类型\"></a>OSPF区域类型</h2><ul>\n<li>主干区域（32位）<ul>\n<li><code>Area 0.0.0.0</code>或<code>Area 0</code>表示</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">区域类型</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">主干区域</td>\n<td style=\"text-align:center\">连接其他区域，都要经过主干区域，也接受任何路由信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">标准区域</td>\n<td style=\"text-align:center\">接受任何路由信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">完全存根区域</td>\n<td style=\"text-align:center\">只接受本区域内的路由信息，其他一概不接收（思科专用）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">不完全存根区域</td>\n<td style=\"text-align:center\">除接受本区域的路由信息，还接受类型7的</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"OSPF网络类型\"><a href=\"#OSPF网络类型\" class=\"headerlink\" title=\"OSPF网络类型\"></a>OSPF网络类型</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">OSPF网络类型</th>\n<th style=\"text-align:center\">特点</th>\n<th style=\"text-align:center\">数据传输方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">点到点网络<br>(Point-to-Point)</td>\n<td style=\"text-align:center\">有效邻居走势可以形成邻居关系</td>\n<td style=\"text-align:center\">组播地址为<code>224.0.0.5</code>，该地址称为AIISPFRouters</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">点到多点网络<br>(Point-to-Multicast)</td>\n<td style=\"text-align:center\">不选举DR/BDR，可看作是多个Point-to-Point链路的集合</td>\n<td style=\"text-align:center\">单播（Unicast）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">广播型网络<br>(Broadcast)</td>\n<td style=\"text-align:center\">选举DR/BDR，所有路由器和DR/BDR交换信息。DR/BDR不能被抢占。广播型网络有： <strong>以太网</strong>、 <strong>TokenRing</strong> 和 <strong>FDDI</strong></td>\n<td style=\"text-align:center\">DR、BDR组播到<code>224.0.0.5</code>，DR、BDR侦听<code>224.0.0.6</code>，该地址称为AIIDRouters</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">非广播型<br>(NBMA)</td>\n<td style=\"text-align:center\">没有广播，需手动指定邻居，Hello消息单播，NBMA网络有 X.25、Frame Relay和ATM</td>\n<td style=\"text-align:center\">单播</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">虚拟连接<br>(Virtual Link)</td>\n<td style=\"text-align:center\">虚链路一旦建立，就不在发送Hello消息，通过一个非Area0连接到Area0，一个非Area0连接Area0的两个分段骨干区域</td>\n<td style=\"text-align:center\">单播</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"OSPF路由器分类\"><a href=\"#OSPF路由器分类\" class=\"headerlink\" title=\"OSPF路由器分类\"></a>OSPF路由器分类</h2><ul>\n<li>BR（骨干）</li>\n<li>IR</li>\n<li>ABR</li>\n<li><p>ASBR</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/24/yO11w6.png\" alt=\"ospflyq\"></p>\n</li>\n</ul>\n<h2 id=\"OSPF五种报文类型\"><a href=\"#OSPF五种报文类型\" class=\"headerlink\" title=\"OSPF五种报文类型\"></a>OSPF五种报文类型</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">报文类型</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">Hello—建立外交关系</td>\n<td style=\"text-align:center\">用于发现相邻的路由器</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">数据库描述DBD—外交（数据）内容</td>\n<td style=\"text-align:center\">表示发送者的链路状态数据库内容</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">链路状态请求LSR—向对方请求消息</td>\n<td style=\"text-align:center\">向对方请求链路状态信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">链路状态更新LSU</td>\n<td style=\"text-align:center\">向邻居路由器发送链路状态通告</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">链路状态LSAck</td>\n<td style=\"text-align:center\">对链路状态更新报文的应答</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><strong>Hello报文</strong><ul>\n<li>默认10s（30s）更新一次，40s失效，目的地址是<code>224.0.0.5</code>所有路由器。用于发现建立邻居、还用于选出区域内的指定路由器DR和备份指定路由器BDR</li>\n<li>10s是在点对点网络中</li>\n<li>30s是在广播网络中，更新太频繁容易导致网络抖动</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"外部网关协议BGP\"><a href=\"#外部网关协议BGP\" class=\"headerlink\" title=\"外部网关协议BGP\"></a>外部网关协议BGP</h1><h2 id=\"什么是BGP？\"><a href=\"#什么是BGP？\" class=\"headerlink\" title=\"什么是BGP？\"></a>什么是BGP？</h2><ul>\n<li>BGP，边界网关协议。是外部网关协议，存在于不同自治系统AS之间。寻找较好的路由策略</li>\n<li>通过TCP的179端口建立连接</li>\n<li>支持VLSM和CIDR，是一种路径矢量协议</li>\n<li>目前最新版本BGP4，BGP4+支持IPV6</li>\n</ul>\n<h2 id=\"BGP的四种报文\"><a href=\"#BGP的四种报文\" class=\"headerlink\" title=\"BGP的四种报文\"></a>BGP的四种报文</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">报文类型</th>\n<th style=\"text-align:center\">功能描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">打开（Open）</td>\n<td style=\"text-align:center\">建立邻居关系—建立外交</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">更新（Update）</td>\n<td style=\"text-align:center\">发送新的路由信息—更新外交信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">保持活动状态（keepalive）</td>\n<td style=\"text-align:center\">对Open的应答/周期性的确认邻居关系—保持外交活动</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">通告（Notification）</td>\n<td style=\"text-align:center\">报告检测到的错误—发布外交通告</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>Open建立邻居，keepalive周期性探测邻居存活</li>\n<li>每个自治系统都要选择至少一个路由器作为该自治系统的“BGP发言人”。增量更新、支持认证。可靠传输、防止环路。自治通信、策略选路。支持无类、支持聚合</li>\n</ul>\n<h1 id=\"域名与地址\"><a href=\"#域名与地址\" class=\"headerlink\" title=\"域名与地址\"></a>域名与地址</h1><h2 id=\"域名系统DNS\"><a href=\"#域名系统DNS\" class=\"headerlink\" title=\"域名系统DNS\"></a>域名系统DNS</h2><ul>\n<li><strong>域名系统DNS</strong> (DomainNameSystem）是Internet上解决网上机器命名的一种系统，==采用C/S模式服务==。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。</li>\n<li>域名系统==使用TCP和UDP端口53==，==对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符==。</li>\n</ul>\n<h3 id=\"名称解析方法\"><a href=\"#名称解析方法\" class=\"headerlink\" title=\"名称解析方法\"></a>名称解析方法</h3><ul>\n<li><strong>Hosts表</strong> ：是一个没有扩展名的文本文件。其中存放一些常用的主机域名和其对应的IP地址映<br>射，文件中每一行对应一个条目。</li>\n<li><strong>NIS系统</strong> ：由sun公司开发的域名系统。用于中小型系统。</li>\n<li><strong>DNS系统</strong> ：规定域名中的标号由英文字母和数字组合而成，每个标号不能超过63个字符，为方便记忆一般不超过12个字符。</li>\n</ul>\n<h3 id=\"DNS查询过程\"><a href=\"#DNS查询过程\" class=\"headerlink\" title=\"DNS查询过程\"></a>DNS查询过程</h3><ol>\n<li><strong>本地解析</strong> ：客户机平时查询得到的DNS记录均保存在本地DNS缓存中，当有进程提出DNS查询时，DNS客户端先使用本地缓存的信息来解析，如果可以解析则直接应答查询而不必向DNS服务器查询。==本地解析有两个来源：Hosts表和DNS缓存==。</li>\n<li><strong>直接解析</strong> ：如果本地解析不能找到DNS信息，则客户端向其所设定的DNS服务器发出查询请求，服务器收到请求后先检查本地配置区域中是否有所需查询信息，如果有则作出应答，如果没有，服务器则检能否通过其缓存的查询信息来解析，如果有则作出应答。</li>\n<li><strong>递归解析</strong> ：如果DNS服务器不能解析该查询信息，则服务器向上级DNS服务器查询，直到查询到该信息为止。（服务器默认配置）</li>\n<li><strong>迭代解析</strong> ：如果DNS服务器不能解析该查询信息，服务器不会向上级DNS服务器查询该信息，而是将上级DNS服务器地址告诉给客户端，有客户端向上级DNS服务器查询该信息</li>\n</ol>\n<h3 id=\"DNS对象类型与资源记录：\"><a href=\"#DNS对象类型与资源记录：\" class=\"headerlink\" title=\"DNS对象类型与资源记录：\"></a>DNS对象类型与资源记录：</h3><ul>\n<li><strong>A</strong> ：列出域名到IP地址的映射。</li>\n<li><strong>PTR</strong> ：将地址转换为域名。</li>\n<li><strong>NS</strong> ：指明区域中的所有域名服务器(包括主域名服务器和辅助域名服务器)</li>\n<li><strong>MX</strong> ：邮件交换。</li>\n<li><strong>CNAME</strong> ：允许多个域名指向同一台服务器。</li>\n<li><strong>SOA</strong> ：指明区域中的主域名服务器。<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1></li>\n</ul>\n<ol>\n<li><p>ARP协议的作用是 []{.gap} {.quiz}</p>\n<ul>\n<li>由MAC地址求IP地址 {.options}</li>\n<li>由IP地址求MAC地址 {.correct}</li>\n<li>由IP地址查域名 {.options}</li>\n<li>由域名查IP地址 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>ARP协议数据单元封装在 []{.gap} 中传送 {.quiz}</p>\n<ul>\n<li>IP分组 {.options}</li>\n<li>以太帧 {.correct}</li>\n<li>TCP段 {.options}</li>\n<li>UDP报文 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>ARP请求是采用 []{.gap} 方式发送的 {.quiz}</p>\n<ul>\n<li>单播 {.options}</li>\n<li>组播 {.options}</li>\n<li>广播 {.correct}</li>\n<li>点播 {.options}<br>{.options}<blockquote>\n<ul>\n<li>广播发送，单播响应</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>为了解决RIP协议形成环路的问题，可以采用多种方法，下面列出的方法中效果最好的是 []{.gap} {.quiz}</p>\n<ul>\n<li>不用把从一个邻居学习到的路由发送给那个邻居 {.options}</li>\n<li>经常检查邻居路由器状态，以便及时发现断开的链路 {.options}</li>\n<li>把从邻居学习到的路由设置为无限大，然后发送给那个邻居 {.correct}</li>\n<li>缩短路由更新周期，以便出现链路失效时尽快达到路由无限大 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>OSPF网络可以划分成多个区域，下面对区域描述错误的是 []{.gap} {.quiz}</p>\n<ul>\n<li>区域可以被赋予0-65535中的任何编号 {.options}</li>\n<li>单域OSPF网络必须配置为区域1 {.correct}</li>\n<li>区域0被称为主干网 {.options}</li>\n<li>分层的OSPF网络必须划分为多个区域 {.options}<br>{.options}<blockquote>\n<ul>\n<li>配置为区域0，必须的</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>在BGP4协议中， []{.gap} 报文给出了新的路由信息  {.quiz}</p>\n<ul>\n<li>打开 {.options}</li>\n<li>更新 {.correct}</li>\n<li>保持活动 {.options}</li>\n<li>通告 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>边界网关协议BGP4被称为路径矢量协议，它传送的路由信息是由一个地址前缀后跟 []{.gap}  组成 {.quiz}</p>\n<ul>\n<li>一串IP地址 {.options}</li>\n<li>一串自治系统编号 {.correct}</li>\n<li>一串路由器编号 {.options}</li>\n<li>一串子网地址 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>BGP4的优点是 []{.gap} {.quiz}</p>\n<ul>\n<li>防止域间路由循环 {.correct}</li>\n<li>可以及时更新路由 {.options}</li>\n<li>便于发现最短通路 {.options}</li>\n<li>考虑了多种路由度量因素 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>OSPF协议将其管理的网络划分为不同类型的若干区域，其中标准区域的特点是 []{.gap} {.quiz}</p>\n<ul>\n<li>不接受本地AS之外的路由信息，也不接受其他区域的路由汇总信息 {.options}</li>\n<li>不接受本地AS之外的路由信息，对本地AS之外的目标采用默认路由 {.options}</li>\n<li>可以就接收任何链路更新信息和路由汇总信息 {.correct}</li>\n<li>可以学习其他AS的利欲熏心，对本地AS中的其他区域采用默认路由 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>OSPF协议将其管理的网络划分为不同类型的若干区域，存根区域（stub）的特点是 []{.gap} {.quiz}</p>\n<ul>\n<li>不接受本地AS之外的路由信息，也不接受其他区域的路由汇总信息 {.correct}</li>\n<li>不接受本地AS之外的路由信息，对本地AS之外的目标采用默认路由 {.options}</li>\n<li>可以就接收任何链路更新信息和路由汇总信息 {.options}</li>\n<li>可以学习其他AS的利欲熏心，对本地AS中的其他区域采用默认路由 {.options}<br>{.options}</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/IP%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E4%B8%93%E9%A2%98/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/IP%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E4%B8%93%E9%A2%98/",
            "title": "IP子网划分专题",
            "date_published": "2021-02-23T08:00:39.000Z",
            "content_html": "<h1 id=\"2-10进制转换\"><a href=\"#2-10进制转换\" class=\"headerlink\" title=\"2-10进制转换\"></a>2-10进制转换</h1><h2 id=\"8421法————二转十（连加）或十转二（连减）\"><a href=\"#8421法————二转十（连加）或十转二（连减）\" class=\"headerlink\" title=\"8421法————二转十（连加）或十转二（连减）\"></a>8421法————二转十（连加）或十转二（连减）</h2><ul>\n<li><p>增加时翻倍，减少时减半 </p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/23/yqvjxI.png\" alt=\"8421\"></p>\n</li>\n<li><p><strong>例子</strong></p>\n</li>\n</ul>\n<ol>\n<li><code>11001101</code>的十进制为多少？<ul>\n<li>$128+64+0+0+8+4+0+1=205$</li>\n</ul>\n</li>\n<li><code>11110001</code>的十进制为多少？<ul>\n<li>$128+64+32+16+0+0+0+1=241$</li>\n</ul>\n</li>\n<li><code>127</code>的二进制是多少？<ul>\n<li>$128-1=127$,则第八位后面的全为1，即01111111</li>\n</ul>\n</li>\n<li><code>204</code>的二进制是多少？<ul>\n<li>$128+64+8+4=204$,则第8、7、4、3位为1，其他全为0，即11001100</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"IP地址转换\"><a href=\"#IP地址转换\" class=\"headerlink\" title=\"IP地址转换\"></a>IP地址转换</h2><ul>\n<li><p>IP地址有4个32位，每一个8位组用0-255表示。因此最小的IP地址值为<code>0.0.0.0</code>,最大为<code>255.255.255.255</code></p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/23/yqxSqf.png\" alt=\"ipzh\"></p>\n</li>\n</ul>\n<h3 id=\"位数与个数的关系\"><a href=\"#位数与个数的关系\" class=\"headerlink\" title=\"位数与个数的关系\"></a>位数与个数的关系</h3><ul>\n<li><p>关系是： $2^n$次方</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/23/yqxEzn.png\" alt=\"yqxEzn.png\"></p>\n</li>\n</ul>\n<h2 id=\"子网掩码\"><a href=\"#子网掩码\" class=\"headerlink\" title=\"子网掩码\"></a>子网掩码</h2><ul>\n<li>屏蔽IP地址的网络部分的“全1”比特模式， <strong>将某个IP地址划分成网络地址和主机地址两部分</strong>，子网掩码 ==不能单独存在==，必须结合IP地址一起使用</li>\n<li>如A类地址子网掩码的主机位和网络位：</li>\n</ul>\n<table>\n    <tr><th>网络位</th><th colspan=\"3\">主机位</th></tr>\n    <tr><td>11111111</td><td>00000000</td><td>00000000</td><td>00000000</td></tr>\n    <tr><td>255</td><td>0</td><td>0</td><td>0</td></tr>\n</table>\n\n<ul>\n<li><strong>A类地址：</strong><ul>\n<li>默认子网掩码：<code>255.0.0.0/8</code></li>\n</ul>\n</li>\n<li><strong>B类地址：</strong><ul>\n<li>默认子网掩码：<code>255.255.0.0/16</code></li>\n</ul>\n</li>\n<li><strong>C类地址：</strong><ul>\n<li>默认子网掩码：<code>255.255.255.0/24</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"常用的子网掩码（建网比特数）\"><a href=\"#常用的子网掩码（建网比特数）\" class=\"headerlink\" title=\"常用的子网掩码（建网比特数）\"></a>常用的子网掩码（建网比特数）</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">网络位</th>\n<th style=\"text-align:center\">子网掩码</th>\n<th style=\"text-align:center\">网络位</th>\n<th style=\"text-align:center\">子网掩码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/32</td>\n<td style=\"text-align:center\"><code>255.255.255.255</code></td>\n<td style=\"text-align:center\">/24</td>\n<td style=\"text-align:center\"><code>255.255.255.0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/31</td>\n<td style=\"text-align:center\"><code>255.255.255.254</code></td>\n<td style=\"text-align:center\">/23</td>\n<td style=\"text-align:center\"><code>255.255.254.0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/30</td>\n<td style=\"text-align:center\"><code>255.255.255.252</code></td>\n<td style=\"text-align:center\">/22</td>\n<td style=\"text-align:center\"><code>255.255.252.0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/29</td>\n<td style=\"text-align:center\"><code>255.255.255.248</code></td>\n<td style=\"text-align:center\">/21</td>\n<td style=\"text-align:center\"><code>255.255.248.0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/28</td>\n<td style=\"text-align:center\"><code>255.255.255.240</code></td>\n<td style=\"text-align:center\">/20</td>\n<td style=\"text-align:center\"><code>255.255.240.0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/27</td>\n<td style=\"text-align:center\"><code>255.255.255.224</code></td>\n<td style=\"text-align:center\">/19</td>\n<td style=\"text-align:center\"><code>255.255.224.0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/26</td>\n<td style=\"text-align:center\"><code>255.255.255.192</code></td>\n<td style=\"text-align:center\">/18</td>\n<td style=\"text-align:center\"><code>255.255.192.0</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/25</td>\n<td style=\"text-align:center\"><code>255.255.255.128</code></td>\n<td style=\"text-align:center\">/17</td>\n<td style=\"text-align:center\"><code>255.255.128.0</code></td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"子网划分原理\"><a href=\"#子网划分原理\" class=\"headerlink\" title=\"子网划分原理\"></a>子网划分原理</h2><ul>\n<li><strong>网段：</strong><ul>\n<li>是指标准子网掩码产生得到一端网络IP范围</li>\n</ul>\n</li>\n<li><strong>子网：</strong><ul>\n<li>借用“主机位”将网段划分更小的网络，称为子网，一般指往右“借位”VLSM</li>\n</ul>\n</li>\n<li><strong>超网：</strong><ul>\n<li>借用“网络位”将网段合成更大的网络，称为超网，一般指往左“借位”CIDR</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"划分子网三步骤\"><a href=\"#划分子网三步骤\" class=\"headerlink\" title=\"划分子网三步骤\"></a>划分子网三步骤</h3><ol>\n<li><strong>看段</strong> ：看子网掩码在第几段开始变化</li>\n<li><strong>算块</strong> ：计算块大小，即范围</li>\n<li><strong>求数</strong> ：计算</li>\n</ol>\n<h1 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h1><ol>\n<li>某单位有一个C类网络<code>192.168.1.0</code>，子网掩码<code>255.255.255.192/26</code>,求子网数、主机数、子网号、广播号、范围<ul>\n<li>子网数：$256-192=64$,$256\\lt64=4$,有四个子网（0-255共256台主机）</li>\n<li>主机数：$32-26=6$ $2^6=64$,有64台主机</li>\n<li>范围：<code>192.168.1.0-192.168.1.63</code>、<code>192.168.1.64-192.168.1.127</code>、<code>192.168.1.128-192.168.1.191</code>、<code>192.168.1.192-192.168.1.255</code>,共四个网段</li>\n<li>子网号：每个网段的第一个IP地址</li>\n<li>广播号：每个网段的最后一个IP地址</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li><strong>总结：</strong><ul>\n<li>==一头一尾：网络地址、广播地址，可用主机要-2==</li>\n<li>==网络地址是块大小的倍数==</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>IP地址<code>219.25.23.56</code>的缺省子网掩码是 []{.gap}位。{.quiz}<ul>\n<li>8 {.options}</li>\n<li>16 {.options}</li>\n<li>24 {.correct}</li>\n<li>32 {.options}<br>{.options}<blockquote>\n<ul>\n<li>219是C类地址，缺省子网掩码即/24</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>B类地址子网掩码为<code>255.55.255.248</code>，则每个子网内可用主机地址数为 []{.gap}。{.quiz}<ul>\n<li>10 {.options}</li>\n<li>8 {.options}</li>\n<li>6 {.correct}</li>\n<li>4 {.options}<br>{.options}<blockquote>\n<p>256-248=8,可用主机8-2=6</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>以下给出的地址中，属于子网<code>172.112.15.19/28</code>的主机地址是 []{.gap}。{.quiz}<ul>\n<li>172.112.15.17 {.correct}</li>\n<li>172.112.15.14 {.options}</li>\n<li>172.112.15.16 {.options}</li>\n<li>172.112.15.31 {.options}<br>{.options}<blockquote>\n<ul>\n<li>子网数：32-28=4 ；主机数：2^4=16</li>\n<li>可用主机数：16-2=14</li>\n<li>各个网段范围：0-15、16-31、32-47….因此17和19在同一网段</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9101/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9101/",
            "title": "网络互联与互联网01",
            "date_published": "2021-02-22T09:16:42.000Z",
            "content_html": "<h1 id=\"网络互联设备\"><a href=\"#网络互联设备\" class=\"headerlink\" title=\"网络互联设备\"></a>网络互联设备</h1><h2 id=\"常用网络互联设备\"><a href=\"#常用网络互联设备\" class=\"headerlink\" title=\"常用网络互联设备\"></a>常用网络互联设备</h2><ul>\n<li><strong>1层物理层：中继器、集线器</strong><ul>\n<li>中继器（Repeater）、集线器（Hub），又叫多端口中继器，传输比特0&nbsp;1，可放大信号，延长传输距离</li>\n</ul>\n</li>\n<li><strong>2层链路层：网桥、交换机</strong><ul>\n<li>网桥（Bridge）、交换机（Switch），又叫多端口网桥，用来传输MAC帧；有源地址、目的地址和自己的MAC地址</li>\n</ul>\n</li>\n<li><strong>3层网络层：路由器、三层交换机</strong><ul>\n<li>路由器（Router），用于选择网络路径，传输分组，有自己的逻辑地址——IP地址</li>\n</ul>\n</li>\n<li><p><strong>4层以上：网关</strong><br><br></p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/23/yqvg54.png\" alt=\"2021s\"></p>\n</li>\n</ul>\n<h1 id=\"因特网协议IP\"><a href=\"#因特网协议IP\" class=\"headerlink\" title=\"因特网协议IP\"></a>因特网协议IP</h1><h2 id=\"TCP-IP协议簇\"><a href=\"#TCP-IP协议簇\" class=\"headerlink\" title=\"TCP/IP协议簇\"></a>TCP/IP协议簇</h2>\n<table style=\"width: 100%;\" align=\"center\">    \n  \n  <tr><th colspan=\"2\">OSI</th><th colspan=\"2\">TCP/IP</th></tr>   \n  <tr><td align=\"center\">7</td><td>应用层</td><td rowspan=\"3\" align=\"center\">4</td><td rowspan=\"3\">进程/应用层</td></tr> \n  <tr><td align=\"center\">6</td><td>表示层</td></tr>\n  <tr><td align=\"center\">5</td><td>会话层</td></tr>\n  \n  <tr><td align=\"center\">4</td><td>传输层</td><td align=\"center\">3</td><td>主机-主机层</td></tr>\n  <tr><td align=\"center\">3</td><td>网络层</td><td align=\"center\">2</td><td>网络互联层</td></tr>\n  <tr><td align=\"center\">2</td><td>数据链路层</td><td rowspan=\"2\" align=\"center\">1</td><td rowspan=\"2\">网络访问层</td></tr>\n  <tr><td align=\"center\">1</td><td>物理层</td></tr>\n</table> \n\n<ul>\n<li><strong>TCP/IP报文封装</strong>\n<table>\n <tr><td>Ethernet帧头</td><td>IP头部</td><td>TCP头部</td><td>上层数据</td><td>FCS</td></tr>\n <div align=\"center\"></div>\n</table> \n\n</li>\n</ul>\n<h3 id=\"UDP的主要协议STDD\"><a href=\"#UDP的主要协议STDD\" class=\"headerlink\" title=\"UDP的主要协议STDD\"></a>UDP的主要协议STDD</h3><ul>\n<li>S——SNMP（简单网络管理协议）</li>\n<li>T——TFTP（简单文件传输协议）</li>\n<li>D——DNS（域名系统）</li>\n<li><p>D——DHCP（动态主机控制协议）</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/23/yqv5Kx.jpg\" alt=\"stdd\"></p>\n</li>\n</ul>\n<h2 id=\"常用协议端口号\"><a href=\"#常用协议端口号\" class=\"headerlink\" title=\"常用协议端口号\"></a>常用协议端口号</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">端口</th>\n<th style=\"text-align:center\">服务</th>\n<th style=\"text-align:center\">端口</th>\n<th style=\"text-align:center\">服务</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">文件传输协议（数据）</td>\n<td style=\"text-align:center\">80</td>\n<td style=\"text-align:center\">超文本传输协议</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">21</td>\n<td style=\"text-align:center\">文件传输协议（控制）</td>\n<td style=\"text-align:center\">110</td>\n<td style=\"text-align:center\">POP3服务器（邮箱发送）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">23</td>\n<td style=\"text-align:center\">Telnet终端仿真协议</td>\n<td style=\"text-align:center\">139</td>\n<td style=\"text-align:center\">Win98共享资源端口</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">25</td>\n<td style=\"text-align:center\">SMTP简单邮件发送协议</td>\n<td style=\"text-align:center\">143</td>\n<td style=\"text-align:center\">IMAP电子邮件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">42</td>\n<td style=\"text-align:center\">WINS主机名服务</td>\n<td style=\"text-align:center\">161</td>\n<td style=\"text-align:center\">NMP-snmp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">53</td>\n<td style=\"text-align:center\">域名服务器（DNS）</td>\n<td style=\"text-align:center\">162</td>\n<td style=\"text-align:center\">SNMP-trap-snmp</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"IP协议\"><a href=\"#IP协议\" class=\"headerlink\" title=\"IP协议\"></a>IP协议</h2><ul>\n<li>因特网协议，是网络层最重要的协议</li>\n<li><p><strong>无连接、不可靠的</strong></p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/23/yqv7VO.png\" alt=\"ipxy\"></p>\n</li>\n</ul>\n<h3 id=\"IP协议数据单元\"><a href=\"#IP协议数据单元\" class=\"headerlink\" title=\"IP协议数据单元\"></a>IP协议数据单元</h3><ul>\n<li><strong>IHL</strong><ul>\n<li>IP头长度，20字节</li>\n</ul>\n</li>\n<li><strong>服务类型</strong><ul>\n<li>区分优先级</li>\n</ul>\n</li>\n<li><strong>总长度</strong><ul>\n<li>包含IP头在内</li>\n</ul>\n</li>\n<li><strong>头检验和</strong><ul>\n<li>只校验IP头，不包括数据</li>\n</ul>\n</li>\n<li><strong>源地址：IP地址</strong></li>\n<li><strong>目的地址：IP地址</strong></li>\n<li><strong>生存周期</strong><ul>\n<li>路由器个数+1，超过定值丢弃</li>\n</ul>\n</li>\n<li><strong>用户数据</strong><ul>\n<li>==MAC帧长1518，MTU1500==</li>\n<li>IP层：$1518-14-4-20=1480$<ul>\n<li>14为6个字节的目的地址，6个字节的源地址，2个字节长度字段</li>\n<li>4为FCS4位的帧校验码</li>\n<li>20位IP头长度20字节</li>\n</ul>\n</li>\n<li>TCP层还要再$1480-20=1460$</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"网络层IP地址\"><a href=\"#网络层IP地址\" class=\"headerlink\" title=\"网络层IP地址\"></a>网络层IP地址</h2><ul>\n<li><p><strong>四个字节32位，采用点分割法，十进制表示，即点分十进制</strong></p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/23/yqvHaD.png\" alt=\"ipdz\"></p>\n</li>\n</ul>\n<h2 id=\"IP私有地址\"><a href=\"#IP私有地址\" class=\"headerlink\" title=\"IP私有地址\"></a>IP私有地址</h2><ul>\n<li><p>不可用于公网，只能在内部局域网使用，它们在Internet上也不会被路由，但可以通过NAT等技术与公网通信</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/23/yqvLPH.png\" alt=\"syip\"></p>\n</li>\n</ul>\n<h2 id=\"特殊IP地址\"><a href=\"#特殊IP地址\" class=\"headerlink\" title=\"特殊IP地址\"></a>特殊IP地址</h2><ol>\n<li><code>0.0.0.0</code>；不确定地址，一般设备刚启动尚无IP临时使用，表示本机，也叫 <strong>默认路由地址</strong></li>\n<li><code>255.255.255.255</code>：限制广播地址，通一广播域内的主机，表示本网所有主机。即 <strong>广播地址</strong></li>\n<li><code>127.0.0.1</code>： <strong>回环地址</strong> ，Localhost，向本机发送本机IP测试数据</li>\n<li><code>169.254.x.x</code>： <strong>自动专用地址</strong> ，找不到DHCP服务器，主机给自己分配一个IP</li>\n<li><code>224.0.0.1</code>： <strong>组播地址</strong>，从<code>224.0.0.0</code>到<code>239.255.255.255</code>表示一个组内的主机</li>\n</ol>\n<h1 id=\"控制报文协议ICMP\"><a href=\"#控制报文协议ICMP\" class=\"headerlink\" title=\"控制报文协议ICMP\"></a>控制报文协议ICMP</h1><h2 id=\"什么是ICMP？\"><a href=\"#什么是ICMP？\" class=\"headerlink\" title=\"什么是ICMP？\"></a>什么是ICMP？</h2><ul>\n<li>因特网控制报文协议，网络层的协议，协议号为1，传送有关通信控制和差错报文，就想侦查员。封装在IP包中，因此也不可靠。ICMP的校验和是整个ICMP</li>\n</ul>\n<h2 id=\"ICMP协议报文类型及功能\"><a href=\"#ICMP协议报文类型及功能\" class=\"headerlink\" title=\"ICMP协议报文类型及功能\"></a>ICMP协议报文类型及功能</h2>\n<table style=\"width: 100%;\" align=\"center\">\n  <tr><th>ICMP报文类型</th><th>描述</th><th>类型的值</th><th>ICM报文的类型</th><th>功能</th></tr>   \n  <tr><td rowspan=\"5\">差错报告报文</td><td rowspan=\"5\">拐两个弯不大，堵塞事故源抑制；拐一个弯重定向</td><td>3</td><td>终点不可达</td><td>当路由器不能把数据报转交给目的站时，就向源站方式终点不可达报文</td></tr>\n  <tr><td>4</td><td>源站抑制</td><td>当路由器由于拥塞而丢弃数据报时，就向源站发生源站抑制报文，是源站放慢数据报的发送速度</td></tr>\n  <tr><td>5</td><td>改变路由</td><td>当路由器发现主机可以把数据报发送给另外一个路由器，使数据报沿着更短更好的路由被转发</td></tr>\n  <tr><td>11</td><td>时间超时</td><td>当路由器收到一个IP数据报时，发现它的生存时间为0，或主机在预定的时间内无法完成数据报的重装，则向源站发送时间超时报文</td></tr>\n  <tr><td>12</td><td>参数问题</td><td>当路由器或目的站发现收到的数据报首部字段中有不正确的字段时，就向源站点发送参数问题报文</td></tr>\n  <tr><td rowspan=\"2\">询问报文</td><td rowspan=\"2\">喇叭口有回声么，一生一世时间戳</td><td>8或10</td><td>回送请求或回答</td><td>当需要测试某一目的站点是否可达时，就发送一个ICMP回送请求报文，然后目的站点会向发送站回送一个ICMP回答报文</td></tr>\n  <tr><td>13或14</td><td>时间戳请求或回答</td><td>当需要每个路由器或主机给出当前的时间和日期时，就发送时间戳请求报文，然后被请求方会回送一个时间戳回答报文，告知自己当前的日期和时间，用来测试通信延迟</td></tr>\n</table> \n\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>各种联网设备的功能不同，路由器的主要功能是 []{.gap}。{.quiz}</p>\n<ul>\n<li>根据路由表进行分组转发 {.correct}</li>\n<li>负责网络访问层的安全 {.options}</li>\n<li>分配VLAN成员 {.options}</li>\n<li>扩大局域网覆盖范围 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>以下地址中属于自动专用IP地址（APIPA）的是 []{.gap}。{.quiz}</p>\n<ul>\n<li>224.0.0.1  {.options}</li>\n<li>127.0.0.1  {.options}</li>\n<li>192.168.0.1  {.options}</li>\n<li>169.254.1.15  {.correct}<br>{.options}<blockquote>\n<ul>\n<li>A、C为私有地址，B为回环地址</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>ICMP协议属于因特网中的 []{.gap}协议。{.quiz}</p>\n<ul>\n<li>数据链路层 {.options}</li>\n<li>网络层 {.correct}</li>\n<li>传输层 {.options}</li>\n<li>会话层 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>ICMP协议数据单元封装在 []{.gap}中传送。{.quiz}</p>\n<ul>\n<li>以太帧 {.options}</li>\n<li>TCP段 {.options}</li>\n<li>UDP数据报 {.options}</li>\n<li>IP数据报 {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>下面哪个地址可用于公共互联网中？[]{.gap} {.quiz}</p>\n<ul>\n<li>10.172.12.56 {.options}</li>\n<li>172.64.12.23 {.correct}</li>\n<li>192.168.22.78 {.options}</li>\n<li>172.16.33.124 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>01未来防止因出现未来路由环路，而导致IP数据报在网络中无休止地转发，IP协议在IP报头设置了表示[]{.gap} 的TTL位 {.quiz}</p>\n<ul>\n<li>过期值 {.options}</li>\n<li>数据报生存期 {.correct}</li>\n<li>总时间 {.options}</li>\n<li>计时位 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>02（续第6题）它是一个计数器，每经过 []{.gap} ，其值加1。 {.quiz}</p>\n<ul>\n<li>一台交换机 {.options}</li>\n<li>一台主机 {.options}</li>\n<li>一台路由器 {.correct}</li>\n<li>1秒钟 {.options}<br>{.options}</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E7%BD%91/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%97%A0%E7%BA%BF%E9%80%9A%E4%BF%A1%E7%BD%91/",
            "title": "无线通信网",
            "date_published": "2021-02-22T04:05:28.000Z",
            "content_html": "<h1 id=\"无线移动通信\"><a href=\"#无线移动通信\" class=\"headerlink\" title=\"无线移动通信\"></a>无线移动通信</h1><h2 id=\"各种移动通信标准\"><a href=\"#各种移动通信标准\" class=\"headerlink\" title=\"各种移动通信标准\"></a>各种移动通信标准</h2><ul>\n<li><strong>1G:</strong><ul>\n<li>第一代模拟蜂窝；频分双工FDD</li>\n</ul>\n</li>\n<li><strong>2G:</strong><ul>\n<li>第二代数字蜂窝<ol>\n<li>GSM全球移动通信，采用TDMA</li>\n<li>CDMA码分多址通信</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><strong>2.5G：</strong><ul>\n<li>第2.5代通用分组无线业务GPRS</li>\n</ul>\n</li>\n<li><strong>2.75G：</strong><ul>\n<li>第2.75代增强型GPRS，称作EDGE </li>\n</ul>\n</li>\n<li><strong>3G:</strong><ul>\n<li>第三代，速率达到 <strong>2Mbps</strong></li>\n</ul>\n</li>\n<li><strong>4G：</strong><ul>\n<li>第四代，速率达到 <strong>100Mbps</strong></li>\n</ul>\n</li>\n<li><strong>4G+，4.5G，5G</strong></li>\n</ul>\n<h2 id=\"3G和4G标准汇总\"><a href=\"#3G和4G标准汇总\" class=\"headerlink\" title=\"3G和4G标准汇总\"></a>3G和4G标准汇总</h2><ul>\n<li><strong>3G（6个）</strong><ul>\n<li>W-CDMA,频分双工</li>\n<li>CDMA-2000,频分双工</li>\n<li>TD-SCDMA,时分双工， ==中国技术标准==</li>\n<li>EDGE</li>\n<li>DECT</li>\n<li>WiMAX IEEE 802.16d固定；无线城域网 IEEE802.16e移动</li>\n</ul>\n</li>\n<li><strong>4G（3个）</strong><ul>\n<li>UMB，超移动宽带（已停用）</li>\n<li>LTE Advanced ，长期演进技术， ==中国技术标准==</li>\n<li>WIMAX II 全球微博互联接入 IEEE 802.16m</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4G标准\"><a href=\"#4G标准\" class=\"headerlink\" title=\"4G标准\"></a>4G标准</h2><ul>\n<li>==至少100Mbps，下行1Gbps，上行500Mbps==</li>\n<li>使用 <strong>正交频分多址</strong> ==接入OFDM和MIMO技术==，包含TDD和FDD两种制式</li>\n</ul>\n<h1 id=\"无线局域网WLAN\"><a href=\"#无线局域网WLAN\" class=\"headerlink\" title=\"无线局域网WLAN\"></a>无线局域网WLAN</h1><ul>\n<li><strong>两大阵营：</strong><ul>\n<li>IEEE802.11,面向数据无连接</li>\n<li>欧洲邮电委HIPERLAN,面向语音有连接</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">发布时间</th>\n<th style=\"text-align:center\">工作频段</th>\n<th style=\"text-align:center\">调制技术</th>\n<th style=\"text-align:center\">数据速率</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">802.11</td>\n<td style=\"text-align:center\">1997年</td>\n<td style=\"text-align:center\">2.4GHz&nbsp; ISM频段</td>\n<td style=\"text-align:center\">DB/SK<br>DQPSK</td>\n<td style=\"text-align:center\">1Mbps<br>2Mbps</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">802.11b</td>\n<td style=\"text-align:center\">1998年</td>\n<td style=\"text-align:center\">2.4GHz &nbsp;ISM频段</td>\n<td style=\"text-align:center\">CCK</td>\n<td style=\"text-align:center\">5.5Mbps,11Mbps</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">802.11a</td>\n<td style=\"text-align:center\">1999年</td>\n<td style=\"text-align:center\">5GHz&nbsp;U-NII频段</td>\n<td style=\"text-align:center\">OFDM</td>\n<td style=\"text-align:center\">54Mbps</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">802.11g</td>\n<td style=\"text-align:center\">2003年</td>\n<td style=\"text-align:center\">2.4GHz &nbsp;ISM频段</td>\n<td style=\"text-align:center\">OFDM</td>\n<td style=\"text-align:center\">54Mbps</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">802.11n</td>\n<td style=\"text-align:center\">2009年</td>\n<td style=\"text-align:center\">2.4GHz/5GHz &nbsp;频段</td>\n<td style=\"text-align:center\">OFDM  &nbsp;MIMO</td>\n<td style=\"text-align:center\">300Mbps<br>600Mbps</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">802.11ac</td>\n<td style=\"text-align:center\">2012年</td>\n<td style=\"text-align:center\">5GHz&nbsp;U-NII频段</td>\n<td style=\"text-align:center\">OFDM  &nbsp;MIMO</td>\n<td style=\"text-align:center\">500Mbps<br>1Gbps</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li><p><strong>两种结构：</strong></p>\n<ul>\n<li>基础设施网络</li>\n<li>特殊网络Ad &nbsp;Hoc</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/22/yHv1g0.png\" alt=\"wlanjg\"></p>\n</li>\n<li><p><strong>两种AP：</strong></p>\n<ul>\n<li>==胖AP（FAT）== <ul>\n<li>一般指无线路由，胖AP多用于家庭和小型网络，功能比较全，一般一台设备就能实现接入、认证、路由、VPN、地址翻译甚至防火墙功能</li>\n</ul>\n</li>\n<li>==瘦AP（FIT）==<ul>\n<li>一般指无线网关或网桥，瘦AP多用于要求较高的场合，要实现认证一般需要认证服务器或支持认证功能的交换配合</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>三种技术：</strong></p>\n<ul>\n<li>==红外线==<ul>\n<li>分为定向光束红外线、全向广播红外线、漫反射红外线</li>\n</ul>\n</li>\n<li>==扩展频谱==<ul>\n<li>分为频率跳动FHSS、直接序列DSSS</li>\n</ul>\n</li>\n<li>==窄带微波==<ul>\n<li>分为申请许可证RF、免许可证RE</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"CSMA-CA-载波监听多路访问冲突避免\"><a href=\"#CSMA-CA-载波监听多路访问冲突避免\" class=\"headerlink\" title=\"CSMA/CA:载波监听多路访问冲突避免\"></a>CSMA/CA:载波监听多路访问冲突避免</h2><ul>\n<li>与CSMA/CD很像<ul>\n<li>但是D——检测，A——避免，两者并不同</li>\n</ul>\n</li>\n<li><strong>用于结局隐蔽终端的问题</strong></li>\n</ul>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><ol>\n<li>传数据先检测，如果探测到网络没有数据，则等待一个IFS时间，再随机选择一个时间片继续探测，如果无线网路中还没有活动的话，九江数据发送过去</li>\n<li>发出数据之前，先发送一段小的请求报文给目标端，收到目标端回应后，再传送大量的数据，确保不会碰撞，开销最少</li>\n</ol>\n<h2 id=\"2-2-nbsp-三种帧间隔IFS\"><a href=\"#2-2-nbsp-三种帧间隔IFS\" class=\"headerlink\" title=\"2.2&nbsp;三种帧间隔IFS\"></a>2.2&nbsp;三种帧间隔IFS</h2><ol>\n<li><strong>DIFS</strong> （分布式协调IFS），最长，优先级最低</li>\n<li><strong>PIFS</strong> （点协调IFS），中等长度，优先级居中</li>\n<li><strong>SIFS</strong> （短IFS），最短，运行高立即响应</li>\n</ol>\n<h2 id=\"无线加密协议WEP\"><a href=\"#无线加密协议WEP\" class=\"headerlink\" title=\"无线加密协议WEP\"></a>无线加密协议WEP</h2><ul>\n<li>用于认证和加密，为明文的</li>\n</ul>\n<h2 id=\"无线保护接入WPA-WPA2\"><a href=\"#无线保护接入WPA-WPA2\" class=\"headerlink\" title=\"无线保护接入WPA/WPA2\"></a>无线保护接入WPA/WPA2</h2><ul>\n<li>802.1x认证、RC4加密和TKIP数据完整性</li>\n</ul>\n<h2 id=\"Ad-nbsp-Hoc网络\"><a href=\"#Ad-nbsp-Hoc网络\" class=\"headerlink\" title=\"Ad&nbsp;Hoc网络\"></a>Ad&nbsp;Hoc网络</h2><ul>\n<li>节点之间对等，每个节点既是主机，又是路由器，形成自组织网MANET</li>\n</ul>\n<h3 id=\"MANET的路由协议\"><a href=\"#MANET的路由协议\" class=\"headerlink\" title=\"MANET的路由协议\"></a>MANET的路由协议</h3><ul>\n<li><strong>MANET路由协议</strong><ul>\n<li>扁平的路由协议<ul>\n<li>先验式：周期交换，开销大，周期检查身体花销大</li>\n<li>反应式：按需分配，开销少，有病再查身体花销小</li>\n</ul>\n</li>\n<li>分层的路由协议</li>\n<li>地理信息的路由协议（GPS定位）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"DSDV路由协议\"><a href=\"#DSDV路由协议\" class=\"headerlink\" title=\"DSDV路由协议\"></a>DSDV路由协议</h3><ul>\n<li><strong>目标排序的距离矢量协议</strong>，扁平式，先验式，利用 <strong>序列号</strong> 解决环路</li>\n</ul>\n<h3 id=\"AODV路由协议\"><a href=\"#AODV路由协议\" class=\"headerlink\" title=\"AODV路由协议\"></a>AODV路由协议</h3><ul>\n<li><strong>按需分配的距离矢量协议</strong>，扁平式，反应式，开销少，适合快速变化的网络</li>\n</ul>\n<h2 id=\"无线网的安全\"><a href=\"#无线网的安全\" class=\"headerlink\" title=\"无线网的安全\"></a>无线网的安全</h2><ul>\n<li><strong>隐藏SSID</strong></li>\n<li><strong>MAC过滤</strong></li>\n<li><strong>WEP/WPA/WPA2</strong></li>\n<li><strong>802.11i</strong></li>\n</ul>\n<h1 id=\"无线个人网\"><a href=\"#无线个人网\" class=\"headerlink\" title=\"无线个人网\"></a>无线个人网</h1><h2 id=\"无线个人网WPAN\"><a href=\"#无线个人网WPAN\" class=\"headerlink\" title=\"无线个人网WPAN\"></a>无线个人网WPAN</h2><ul>\n<li>小范围，10米左右，手持设备</li>\n<li>IEEE802.15.1/2/3/4标准</li>\n</ul>\n<h2 id=\"蓝牙技术\"><a href=\"#蓝牙技术\" class=\"headerlink\" title=\"蓝牙技术\"></a>蓝牙技术</h2><ul>\n<li>IEEE&nbsp;802.15.1标准</li>\n<li>==1个主设备，7个从设备==</li>\n<li>四个重要协议：<ul>\n<li>RF无线电频率协议</li>\n<li>链路控制协议LCP</li>\n<li>链路管理协议LMP</li>\n<li>链路自适应协议L2CAP</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"ZigBee（蜜蜂网）技术\"><a href=\"#ZigBee（蜜蜂网）技术\" class=\"headerlink\" title=\"ZigBee（蜜蜂网）技术\"></a>ZigBee（蜜蜂网）技术</h2><ul>\n<li>IEEE&nbsp;802.15.4标准</li>\n<li>全功能设备FFD，简单功能设备RFD，RFD之间不能通信。 <strong>一般用于物联网</strong></li>\n</ul>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>中国自主研发的4G通信标准是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>TD-SCDMA {.options}</li>\n<li>UMB {.options}</li>\n<li>LTE  {.correct}</li>\n<li>WiMAX {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>IEEE802.11定义了多种WLAN的通信标准，其中  []{.gap} 与其他标准采用频段不同，因而不能兼容。{.quiz}</p>\n<ul>\n<li>802.1a {.correct}</li>\n<li>802.1b {.options}</li>\n<li>802.1g {.options}</li>\n<li>802.1n {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>IEEE802.11采用CSMA/CA协议，采用这个协议的原因是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>这个协议比CSMA/CD更安全 {.options}</li>\n<li>这种协议可以引进更多业务 {.options}</li>\n<li>这种协议可以解决隐蔽终端问题 {.correct}</li>\n<li>这个协议比其他协议更有效率 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>以下通信技术中，未在IEEE802.11无线局域网中使用的是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>FHSS {.options}</li>\n<li>DSSS {.options}</li>\n<li>CDMA {.correct}</li>\n<li>IR {.options}<br>{.options}<blockquote>\n<ul>\n<li>CDMA是2G无线移动数据，不是局域网</li>\n<li>IR可通过红外线建立无线局域网</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>在Wi-Fi安全协议中，WPA与WEP相比，采用了 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>较短的初始化向量 {.options}</li>\n<li>更强的加密算法 {.options}</li>\n<li>共享密钥认证方案 {.options}</li>\n<li>临时密钥以减少安全风险 {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>IEEE802.16工作组提出的无线接入系统中的接口标准是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>GPRS {.options}</li>\n<li>WiMAX {.correct}</li>\n<li>LTE {.options}</li>\n<li>UMB {.options}<br>{.options}</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%8E%E5%9F%8E%E5%9F%9F%E7%BD%9102/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%8E%E5%9F%8E%E5%9F%9F%E7%BD%9102/",
            "title": "局域网与城域网02",
            "date_published": "2021-02-21T14:26:42.000Z",
            "content_html": "<h1 id=\"局域网互联\"><a href=\"#局域网互联\" class=\"headerlink\" title=\"局域网互联\"></a>局域网互联</h1><h2 id=\"局域网互联设备\"><a href=\"#局域网互联设备\" class=\"headerlink\" title=\"局域网互联设备\"></a>局域网互联设备</h2><ul>\n<li>两层网桥（生成树、源路由）、三层交换机、路由器。</li>\n<li><p>网桥要求3层以上的协议相同，1、2层协议不同可互联</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/21/yTfAlq.jpg\" alt=\"jywwq\"></p>\n</li>\n</ul>\n<h1 id=\"生成树网桥\"><a href=\"#生成树网桥\" class=\"headerlink\" title=\"生成树网桥\"></a>生成树网桥</h1><ul>\n<li>又叫透明网桥，IEEE802.1d,生成树算法</li>\n<li>基本思想是在网桥之间传递BPDU，比较参数，根据STP打开好端口，阻塞差的端口，沿着好的端口建立路径， <strong>边走边拐弯</strong>，应用于以太网</li>\n</ul>\n<blockquote>\n<p>生成树协议与算法参考文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYyNzAyMi9hcnRpY2xlL2RldGFpbHMvMTA1NzMwNjE2\">https://blog.csdn.net/weixin_43627022/article/details/105730616</span></p>\n</blockquote>\n<h3 id=\"生成树网桥步骤\"><a href=\"#生成树网桥步骤\" class=\"headerlink\" title=\"生成树网桥步骤\"></a>生成树网桥步骤</h3><ol>\n<li>确定根桥</li>\n<li>确定根端口</li>\n<li>确定指定桥</li>\n<li>确定指定端口</li>\n<li>阻塞剩余端口</li>\n<li>形成无环网络</li>\n</ol>\n<h3 id=\"生成树网桥计算数据\"><a href=\"#生成树网桥计算数据\" class=\"headerlink\" title=\"生成树网桥计算数据\"></a>生成树网桥计算数据</h3><ol>\n<li><strong>确定根桥ID</strong><ul>\n<li>优先级+MAC地址，都选最小</li>\n<li>优先级0-65535，默认32768（±4096）</li>\n</ul>\n</li>\n<li><strong>确定根端口</strong><ul>\n<li>优先级+编号，都选最小的</li>\n<li>优先级0-255，默认128</li>\n</ul>\n</li>\n<li><strong>三小原则</strong><ul>\n<li>优先级</li>\n<li>MAC地址</li>\n<li>通路费用 </li>\n</ul>\n</li>\n</ol>\n<h3 id=\"生成树端口的四种状态\"><a href=\"#生成树端口的四种状态\" class=\"headerlink\" title=\"生成树端口的四种状态\"></a>生成树端口的四种状态</h3><ul>\n<li><strong>Blocking（阻塞）</strong><ul>\n<li>接收BPDU（网桥协议数据单元），不学习MAC地址，不转发数据帧。20s</li>\n</ul>\n</li>\n<li><strong>Listening（侦听）</strong><ul>\n<li>接收BPDU，不学习MAC地址，不转发数据帧，但交换机向其他交换机通告该端口，参与选举根端口或指定端口</li>\n</ul>\n</li>\n<li><strong>Learning（学习）</strong><ul>\n<li>接收BPDU，学习MAC地址，不转发数据帧</li>\n</ul>\n</li>\n<li><strong>Forwarding（转发）</strong><ul>\n<li>正常转发数据帧</li>\n</ul>\n</li>\n<li><strong>总结：</strong><blockquote>\n<p>阻塞————&gt;20秒————&gt;侦听————&gt;15秒————&gt;学习————&gt;15秒————&gt;转发</p>\n</blockquote>\n</li>\n</ul>\n<h3 id=\"生成树种类和标准\"><a href=\"#生成树种类和标准\" class=\"headerlink\" title=\"生成树种类和标准\"></a>生成树种类和标准</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">种类</th>\n<th style=\"text-align:center\">英文简称</th>\n<th style=\"text-align:center\">标准</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">多生成树</td>\n<td style=\"text-align:center\">MSTP</td>\n<td style=\"text-align:center\">IEEE802.1s</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">快速生成树</td>\n<td style=\"text-align:center\">RSTP</td>\n<td style=\"text-align:center\">IEEE802.1w</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">生成树</td>\n<td style=\"text-align:center\">STP</td>\n<td style=\"text-align:center\">IEEE802.1d</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">端口认证</td>\n<td style=\"text-align:center\">基于用户</td>\n<td style=\"text-align:center\">IEEE802.1x</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>巧记： ==多块生（人）口，是s我w弟d兄x==</li>\n</ul>\n<h1 id=\"源路由网桥\"><a href=\"#源路由网桥\" class=\"headerlink\" title=\"源路由网桥\"></a>源路由网桥</h1><ul>\n<li>IEEE802.5，基本思想是发送探测帧到目的节点，返回路径以后沿着路径再传送，发送帧在这条路径上就传送，不在则发送广播，查询路径，选择最优路径再发送。 <strong>选好路再走</strong></li>\n</ul>\n<h1 id=\"城域网简介\"><a href=\"#城域网简介\" class=\"headerlink\" title=\"城域网简介\"></a>城域网简介</h1><h2 id=\"什么是城域网？\"><a href=\"#什么是城域网？\" class=\"headerlink\" title=\"什么是城域网？\"></a>什么是城域网？</h2><ul>\n<li>城域网比局域网传输距离远，能覆盖整个城市。能够提供分组传输的数据、语音和视频等多媒体业务。更大的传输容量，更高的传输效率</li>\n<li><strong>城域以太网</strong><ul>\n<li>以太网专用线</li>\n<li>以太网虚拟专线</li>\n<li>以太局域网服务</li>\n</ul>\n</li>\n<li><strong>无线城域网标准</strong><ul>\n<li>WIMAX(802.16d固定、802.16e移动)</li>\n<li>WIMAXII(802.16m 4G)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Q-in-Q\"><a href=\"#Q-in-Q\" class=\"headerlink\" title=\"Q-in-Q\"></a>Q-in-Q</h2><ul>\n<li><strong>运营商网桥协议（PBP）IEEE802.1ad</strong></li>\n</ul>\n<h2 id=\"MAC-in-MAC\"><a href=\"#MAC-in-MAC\" class=\"headerlink\" title=\"MAC-in-MAC\"></a>MAC-in-MAC</h2><ul>\n<li><strong>运营商主干网桥（PBB）IEEE802.1ah</strong></li>\n</ul>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>生成树协议STP使用[]{.gap}两个参数来选举根网桥。 {.quiz}</p>\n<ul>\n<li>网桥优先级和IP地址 {.options}</li>\n<li>链路速率和IP地址 {.options}</li>\n<li>链路速率和MAC地址 {.options}</li>\n<li>网桥优先级和MAC地址  {.correct}<br>{.options}<blockquote>\n<ul>\n<li>网桥优先级就是桥ID</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>动态分配VLAN的方法不包括  []{.gap} 。 {.quiz}</p>\n<ul>\n<li>网络层协议 {.options}</li>\n<li>网络层地址 {.options}</li>\n<li>交换机端口 {.correct}</li>\n<li>MAC地址 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在下面的标准中，定义快速生成树协议的是[]{.gap} {.quiz}</p>\n<ul>\n<li>802.1d {.options}</li>\n<li>802.1w {.correct}</li>\n<li>802.1s {.options}</li>\n<li>802.1x {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在下面的标准中，支持端口认证的协议是[]{.gap} {.quiz}</p>\n<ul>\n<li>802.1d {.options}</li>\n<li>802.1w {.options}</li>\n<li>802.1s {.options}</li>\n<li>802.1x {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在生成树协议（STP）IEEE802.1d,根据 []{.gap} 来选中根交换机。 {.quiz}</p>\n<ul>\n<li>最小的MAC地址 {.options}</li>\n<li>最大的MAC地址 {.options}</li>\n<li>最小的交换机ID {.correct}</li>\n<li>最大的交换机ID {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在当千兆以太网使用UTP作为传输介质时，限制单根的长度不超过100m，其原因为 []{.gap} {.quiz}</p>\n<ul>\n<li>信号衰减严重 {.options}</li>\n<li>编码方式限制 {.options}</li>\n<li>与百兆以太网兼容 {.options}</li>\n<li>采用CSMA/CD {.correct}<br>{.options}<blockquote>\n<ul>\n<li>超过100m检测不到信号，而不是信号衰减</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>IEEE802.1q协议的作用是 []{.gap} {.quiz}</p>\n<ul>\n<li>生成树协议 {.options}</li>\n<li>以太网流量控制 {.options}</li>\n<li>生成VLAN标记 {.correct}</li>\n<li>基于端口的认证 {.options}<br>{.options}</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%8E%E5%9F%8E%E5%9F%9F%E7%BD%9101/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%8E%E5%9F%8E%E5%9F%9F%E7%BD%9101/",
            "title": "局域网与城域网01",
            "date_published": "2021-02-21T00:56:40.000Z",
            "content_html": "<h1 id=\"局域网体系与标准\"><a href=\"#局域网体系与标准\" class=\"headerlink\" title=\"局域网体系与标准\"></a>局域网体系与标准</h1><h2 id=\"什么是局域网？\"><a href=\"#什么是局域网？\" class=\"headerlink\" title=\"什么是局域网？\"></a>什么是局域网？</h2><ul>\n<li>单一机构所拥有的专用计算机网络，中等规模地理范围，实现 ==多个设备互联==、==信息交换== 和 ==资源共享==</li>\n<li><p>主要针对数据链路层和物理层而制定 </p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/21/yTWOSI.png\" alt=\"jywtxjg\"></p>\n</li>\n<li><p>在==数据链路层分为LLC（逻辑链路控制子层）== 和 ==MAC（介质访问控制子层）==</p>\n</li>\n<li>LLC为上层通过服务，MAC依托在物理层之上</li>\n</ul>\n<h2 id=\"LAN-MAN-的IEEE802标准\"><a href=\"#LAN-MAN-的IEEE802标准\" class=\"headerlink\" title=\"LAN/MAN 的IEEE802标准\"></a>LAN/MAN 的IEEE802标准</h2><ul>\n<li>802.3 &nbsp;&nbsp;CSMA/CD&nbsp;&nbsp;<ul>\n<li><strong>以太网规范，定义CSMA/CD</strong></li>\n<li>还分为IEEE&nbsp;802.3ab和IEEE&nbsp;802.3u</li>\n</ul>\n</li>\n<li>802.6 &nbsp;&nbsp;城域网&nbsp;&nbsp;<ul>\n<li><strong>定义城域网的每天访问控制子层和物理层规范</strong></li>\n</ul>\n</li>\n<li>802.11 &nbsp;&nbsp;无线局域网&nbsp;&nbsp;<ul>\n<li><strong>定义自由空间媒体的媒体访问控制子层和物理层规范</strong></li>\n</ul>\n</li>\n<li>802.16  &nbsp;&nbsp;宽带无线接入标准BWA&nbsp;&nbsp;</li>\n</ul>\n<h1 id=\"数据链路LLC和MAC\"><a href=\"#数据链路LLC和MAC\" class=\"headerlink\" title=\"数据链路LLC和MAC\"></a>数据链路LLC和MAC</h1><h2 id=\"逻辑链路控制LLC\"><a href=\"#逻辑链路控制LLC\" class=\"headerlink\" title=\"逻辑链路控制LLC\"></a>逻辑链路控制LLC</h2><ul>\n<li>目的是 <strong>屏蔽不同介质访问</strong> 控制方法，以向高层（网络层）提供统一的服务和接口，==LLC地址是SAP==</li>\n<li>这个标准和HDLC是 <strong>兼容的</strong>，无帧校验字段，放到了MAC层，同时提供目标地址和源地址字段</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">8位</th>\n<th style=\"text-align:center\">8位</th>\n<th style=\"text-align:center\">8位或16位</th>\n<th style=\"text-align:center\">M*8位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">DSAP</td>\n<td style=\"text-align:center\">SSAP</td>\n<td style=\"text-align:center\">控制</td>\n<td style=\"text-align:center\">信息</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"介质访问控制MAC\"><a href=\"#介质访问控制MAC\" class=\"headerlink\" title=\"介质访问控制MAC\"></a>介质访问控制MAC</h2><ul>\n<li>长度字段表示数据实际长度，==最大1500==。同时还可以表示上层协议类型，1501以上的值</li>\n<li>6+6+2+0-1500+0-46+4</li>\n<li>最小64，最大1518</li>\n<li><strong>MAC地址</strong>：采用16进制数表示，共6B（48位），有IEEE和厂家烧制到网卡</li>\n</ul>\n<h2 id=\"CSMA-CD协议\"><a href=\"#CSMA-CD协议\" class=\"headerlink\" title=\"CSMA/CD协议\"></a>CSMA/CD协议</h2><ul>\n<li>载波监听多路访问/冲突检测。是分布式介质访问控制方法<ul>\n<li>非坚持型：有礼貌的，等一会下楼</li>\n<li>1坚持型：霸道点的，一直要下楼</li>\n<li>P坚持型：和事佬，有概率等下楼</li>\n</ul>\n</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">监听算法</th>\n<th style=\"text-align:center\">信道空闲时</th>\n<th style=\"text-align:center\">信道忙时</th>\n<th style=\"text-align:center\">特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">非坚持型监听算法</td>\n<td style=\"text-align:center\">立即发送</td>\n<td style=\"text-align:center\">等待N，再监听</td>\n<td style=\"text-align:center\">减少冲突，信道利用率降低</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1-坚持型监听算法</td>\n<td style=\"text-align:center\">立即发送</td>\n<td style=\"text-align:center\">继续监听</td>\n<td style=\"text-align:center\">提高信道利用率，增大了冲突</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">P-坚持型监听算法</td>\n<td style=\"text-align:center\">以概率P发送</td>\n<td style=\"text-align:center\">继续监听</td>\n<td style=\"text-align:center\">有效平衡，但是复杂</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"最小帧长计算\"><a href=\"#最小帧长计算\" class=\"headerlink\" title=\"最小帧长计算\"></a>最小帧长计算</h2><ul>\n<li>为检测到冲突，<br><br>$L=2R*d/v$ <br><ul>\n<li>其中，R为网络数据速率，d为最大段长，v为信号传播速度</li>\n</ul>\n</li>\n<li><strong>二进制后退指数算法：</strong><ol>\n<li>考虑网络负载编号</li>\n<li>后退次数与负载大小有关</li>\n<li>重发词素最大为16，然后报给上层协议 </li>\n</ol>\n</li>\n</ul>\n<h2 id=\"以太网\"><a href=\"#以太网\" class=\"headerlink\" title=\"以太网\"></a>以太网</h2><ul>\n<li>早期的802.3局域网，10Mbps，来源于光在空气中传播的介质“以太（ether）”，由此得名“以太网（Ethernet）”</li>\n<li>交换式以太网核心部件是交换机，有一个高速底板，插上一些插槽，插槽上有一些链接器，用于连接10M网卡的主机。如：e0/0,f0/1(插槽/接口),g0/0/0(插槽/模块/接口)<ul>\n<li>==e:以太网10Mbps，f：快速以太网100Mbps，g：吉比特以太网1000Mbps==</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"快速以太网\"><a href=\"#快速以太网\" class=\"headerlink\" title=\"快速以太网\"></a>快速以太网</h2><ul>\n<li>802.3u标准，速率 ==可达100M==，采用100Base-T/F规范</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">标准</th>\n<th style=\"text-align:center\">传输介质</th>\n<th style=\"text-align:center\">线对数</th>\n<th style=\"text-align:center\">传输距离</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">100Base-T2</td>\n<td style=\"text-align:center\">3类UTP</td>\n<td style=\"text-align:center\">2对</td>\n<td style=\"text-align:center\">100m</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">100Base-T4</td>\n<td style=\"text-align:center\">3类UTP</td>\n<td style=\"text-align:center\">4对</td>\n<td style=\"text-align:center\">100m</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">100Base-TX</td>\n<td style=\"text-align:center\">5类UTP</td>\n<td style=\"text-align:center\">2对</td>\n<td style=\"text-align:center\">100m</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">100Base-TXSTP</td>\n<td style=\"text-align:center\">2对</td>\n<td style=\"text-align:center\">100m</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">100Base-FX</td>\n<td style=\"text-align:center\">多模光纤</td>\n<td style=\"text-align:center\">1对</td>\n<td style=\"text-align:center\">2Km（全双工）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">100Base-FX</td>\n<td style=\"text-align:center\">单模光纤</td>\n<td style=\"text-align:center\">1对</td>\n<td style=\"text-align:center\">40Km（全双工）</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"千兆以太网（吉比特以太网）\"><a href=\"#千兆以太网（吉比特以太网）\" class=\"headerlink\" title=\"千兆以太网（吉比特以太网）\"></a>千兆以太网（吉比特以太网）</h2><ul>\n<li>802.3z标准，速率可达 ==1000M==，兼容10M/100M以太网</li>\n</ul>\n\n<table style=\"width: 100%;\">    \n  \n  <tr><th>标准</th><th>名称</th><th>传输介质</th><th>传输距离</th></tr>   \n  <tr><td rowspan=\"6\">IEEE802.3z</td><td rowspan=\"3\">1000Base-LX</td><td>62.5μm多模光纤</td><td>550m</td></tr>   \n  <td>50μm多模光纤</td><td>550m</td></tr>\n  <td>10μm单模光纤</td><td>5Km</td></tr>\n  <tr><td rowspan=\"2\">1000Base-SX</td ><td>62.5μm多模光纤</td><td>275m</td></tr>\n  <tr><td>50μm多模光纤</td><td>550m</td></tr>\n  <tr><td rowspan=\"1\">1000Base-CX</td><td>2对STP</td><td>25m</td></tr>\n  <tr><td>IEEE802.3ab</td><td>1000Base-T</td><td>4对5类UTP</td><td>100m</td></tr>\n</table>  \n\n<h2 id=\"万兆以太网\"><a href=\"#万兆以太网\" class=\"headerlink\" title=\"万兆以太网\"></a>万兆以太网</h2><ul>\n<li>802.3ae标准，速率可达 ==万兆（10Gbps）==， <strong>只支持光纤</strong>， <strong>只支持全双工</strong>，不再采用CSMA/CD，可用于城域网</li>\n</ul>\n\n<table style=\"width: 100%;\" >    \n  \n  <tr><th>名称</th><th>传输介质</th><th>传输距离</th><th>特点</th></tr>   \n  <tr><td rowspan=\"2\">10GBase-S（Short）</td><td>50μm的多模光纤</td><td>300m</td><td rowspan=\"2\">850nm串行</td></tr> \n  <tr><td>62.5μm多模光纤</td><td>65m</td></tr>  \n\n  <tr><td>10GBase-L（Long）</td ><td>单模光纤</td><td>10km</td><td>1310nm串行</td></tr>\n  <tr><td>10GBase-E（Extended）</td ><td>单模光纤</td><td>40km</td><td>1550nm串行</td></tr>\n  <tr><td rowspan=\"3\">10GBase-LX4</td><td>单模光纤</td><td>10km</td><td rowspan=\"3\">1310nm<br>4x2.5Gbps<br>波分多路复用（WDM）</td></tr>\n  <tr><td>50μm的多模光纤</td><td>300m</td></tr>\n  <tr><td>62.5μm的多模光纤</td><td>300m</td></tr>\n</table>  \n\n<h2 id=\"虚拟局域网VLAN\"><a href=\"#虚拟局域网VLAN\" class=\"headerlink\" title=\"虚拟局域网VLAN\"></a>虚拟局域网VLAN</h2><ul>\n<li>根据管理功能、组织机构或应用类型，对物理网络进行分段而形成的逻辑网络，与用户的物理位置无关</li>\n</ul>\n<h3 id=\"VLAN划分方式\"><a href=\"#VLAN划分方式\" class=\"headerlink\" title=\"VLAN划分方式\"></a>VLAN划分方式</h3><ol>\n<li>静态分配VLAN：基于端口</li>\n<li>动态分配VLAN：基于MAC地址、网络层IP地址、规则策略等</li>\n</ol>\n<h3 id=\"划分VLAN的好处\"><a href=\"#划分VLAN的好处\" class=\"headerlink\" title=\"划分VLAN的好处\"></a>划分VLAN的好处</h3><ol>\n<li>控制网络流量，抑制广播风暴</li>\n<li>提高网络安全性，不同VLAN之间可以做控制</li>\n<li>网络管理灵活，用户可以随地接入网络</li>\n</ol>\n<ul>\n<li>==不同VLAN之间通信，需要路由器或三层交换机==</li>\n</ul>\n<h3 id=\"VLAN802-1q标准（dot1q）\"><a href=\"#VLAN802-1q标准（dot1q）\" class=\"headerlink\" title=\"VLAN802.1q标准（dot1q）\"></a>VLAN802.1q标准（dot1q）</h3><ul>\n<li><p>在原来的以太帧增加了 <strong>4B</strong>的控制信息，其中包含 ==12位VLAN标识符VID== ，可用 <strong>4096个VLAN</strong></p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/21/yTWzm8.png\" alt=\"802.1q\"></p>\n</li>\n</ul>\n<h3 id=\"两种端口\"><a href=\"#两种端口\" class=\"headerlink\" title=\"两种端口\"></a>两种端口</h3><ul>\n<li><strong>接入端口Access</strong><ul>\n<li>可通过单个VLAN</li>\n</ul>\n</li>\n<li><p><strong>中继端口Trunk</strong></p>\n<ul>\n<li>可通过多个VLAN</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/21/yTfifs.png\" alt=\"vlandk\"></p>\n</li>\n</ul>\n<h2 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h2><hr>\n<ol>\n<li><p>IEEE802.3规定的最小帧长为64B，这个帧长是指 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>从前导字段到校验和的字段 {.options}</li>\n<li>从目标地址到校验和的长度 {.correct}</li>\n<li>从帧起始符到校验和的长度 {.options}</li>\n<li>数据字段的长度 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在以太网的帧结构中“填充”字段的作用是[]{.gap} 。 {.quiz}</p>\n<ul>\n<li>承载任选的路由信息 {.options}</li>\n<li>用于捎带应答 {.options}</li>\n<li>发送紧急数据 {.options}</li>\n<li>保持最小帧长 {.correct}<br>{.options}<blockquote>\n<p>为了保证64B的最小帧长让以太网识别</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>下面的光纤以太网标准中，支持1000m以上创术距离的是[]{.gap} 。 {.quiz}</p>\n<ul>\n<li>1000Base-Fx {.options}</li>\n<li>1000Base-Cx {.options}</li>\n<li>1000Base-Sx {.options}</li>\n<li>1000Base-Lx {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>一个CSMA/CD协议的以太网，数据速率为1Gb/s，网段长1km，信号速率为200000km/s，则最小帧长为[]{.gap} bit。 {.quiz}</p>\n<ul>\n<li>1000 {.options}</li>\n<li>2000 {.options}</li>\n<li>10000 {.correct}</li>\n<li>2000000 {.options}<br>{.options}<blockquote>\n<ul>\n<li>$R=1Gbps=10^9bps$ <br> $S=1km=1000m$<br>$v=2000000m/s=2\\times10^8m/s$<br>$L=2R\\times(S/v)=2\\times10^9\\times(1000/2\\times10^8)=10000bit$</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>以太网采用的CSMA/CD协议，当冲突发送时，要跳过二进制指数后退算法计算后退时延，关于这个算法，描述错误的是[]{.gap} 。 {.quiz}</p>\n<ul>\n<li>冲突次数越多，后退的时间越短  {.correct}</li>\n<li>平均后退次数的多少与负载有关 {.options}</li>\n<li>后退时延的平均值与负载大小有关 {.options}</li>\n<li>重发次数达到一定极限后放弃发送 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在以太网中，载波监听是网络协议设计中很重要的一个方面。在下列载波监听算法中，信道利用率最高的是（B）监听算法，其存在的最大不足是（H）{multi.quiz}</p>\n<ul>\n<li>非坚持型 {.options}</li>\n<li>1-坚持型 {.correct}</li>\n<li>p-坚持型 {.options}</li>\n<li>N-坚持型 {.options}</li>\n<li>算法的效率不够高，会降低网络速率 {.options}</li>\n<li>算法的硬件实现太复杂，会等待提高成本 {.options}</li>\n<li>对冲突的检测会有影响，实现起来不太容易 {.options}</li>\n<li>它会增大冲突出现的概率 {.correct}<br>{.options}</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B9%BF%E5%9F%9F%E9%80%9A%E4%BF%A1%E7%BD%91/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B9%BF%E5%9F%9F%E9%80%9A%E4%BF%A1%E7%BD%91/",
            "title": "广域通信网",
            "date_published": "2021-02-20T09:01:38.000Z",
            "content_html": "<h1 id=\"广域网概念与分类\"><a href=\"#广域网概念与分类\" class=\"headerlink\" title=\"广域网概念与分类\"></a>广域网概念与分类</h1><h2 id=\"什么是广域网？\"><a href=\"#什么是广域网？\" class=\"headerlink\" title=\"什么是广域网？\"></a>什么是广域网？</h2><ul>\n<li>广域网是指长距离块地区的各种局域网、计算机、终端互联在一起，组成一个资源共享的通信网络</li>\n</ul>\n\n<table style=\"width: 100%;\">    \n  <tr><th colspan=\"3\">传统广域网</th></tr>   \n  <tr><td>公共交换电话网PSTN</td><td>公共数据网X.25</td><td>帧中继网FR</td></tr>   \n  <tr><td>综合业务数据网ISDN</td><td>异步传输模式ATM</td><td>虚拟专用网VPN</td></tr>   \n</table>  \n<table style=\"width: 100%;\">    \n  <tr><th colspan=\"3\">现代广域网</th></tr>   \n  <tr><td>数字数据网DDN</td><td>同步数字传输网SDH</td><td>多业务传送平台MSTP</td></tr>   \n  <tr><td>光纤接入FTTX</td><td>无源光网络PON</td><td>无线网WiMAX、4G、5G</td></tr>   \n</table> \n\n<h1 id=\"公共交换电话网PSTN\"><a href=\"#公共交换电话网PSTN\" class=\"headerlink\" title=\"公共交换电话网PSTN\"></a>公共交换电话网PSTN</h1><ul>\n<li>公共交换电话网PSTN，利用电话线上网，早期是电话+“猫”拨号上网</li>\n<li><strong>四大特性：</strong><ul>\n<li>机械特性</li>\n<li>电气特性</li>\n<li>功能特性</li>\n<li>过程特性</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"调制解调器Modem\"><a href=\"#调制解调器Modem\" class=\"headerlink\" title=\"调制解调器Modem\"></a>调制解调器Modem</h2><ul>\n<li>俗称“猫”，作用是把电话线里面的模拟信号和数字信号互相转换，==V.90标准==可以达到==56Kb/s==（电话猫、电视猫、电力猫、光纤猫）</li>\n</ul>\n<h2 id=\"数据终端设备DTE\"><a href=\"#数据终端设备DTE\" class=\"headerlink\" title=\"数据终端设备DTE\"></a>数据终端设备DTE</h2><ul>\n<li>具有一定数据处理能力和数据收发能力的设备，用于提供或接收数据，如路由器、PC、终端，==DTE和DCE两端要同步==<h2 id=\"数据通信设备DCE\"><a href=\"#数据通信设备DCE\" class=\"headerlink\" title=\"数据通信设备DCE\"></a>数据通信设备DCE</h2></li>\n<li>在DTE和传输线路之间提供信号变换和编码功能，并负责建立、保持和释放链路的连接。如广域网交换机、MODEM</li>\n</ul>\n<h1 id=\"公共数据网X-25\"><a href=\"#公共数据网X-25\" class=\"headerlink\" title=\"公共数据网X.25\"></a>公共数据网X.25</h1><ul>\n<li>X.25使用 <strong>分组交换</strong>，分为三层：物理层、链路层、分组层。对应于OSI的底三层。</li>\n<li>采用虚拟电路、面向连接</li>\n<li><p>才会后退N帧ARQ、滑动窗口默认2</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/20/yI2L7j.png\" alt=\"ggjhw\"></p>\n</li>\n</ul>\n<h2 id=\"流量控制技术\"><a href=\"#流量控制技术\" class=\"headerlink\" title=\"流量控制技术\"></a>流量控制技术</h2><h3 id=\"停等协议\"><a href=\"#停等协议\" class=\"headerlink\" title=\"停等协议\"></a>停等协议</h3><ul>\n<li><p>协调收发端流量。假设没有传输错误的流控技术： <strong>停等协议</strong>，发送一帧，等到应答，在发送；如果不应答，一直等，类似于银行柜台存钱</p>\n<p> <img data-src=\"https://s3.ax1x.com/2021/02/20/yIRS3V.png\" alt=\"tdxy\"></p>\n</li>\n</ul>\n<h3 id=\"滑动窗口协议\"><a href=\"#滑动窗口协议\" class=\"headerlink\" title=\"滑动窗口协议\"></a>滑动窗口协议</h3><ul>\n<li><p>协调收发端流量。假设没有传输错误的流控技术： <strong>滑动窗口协议</strong>，连续发送多个帧而无需应答，类似于银行ATM机</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/20/yIRFHJ.png\" alt=\"hdckxy\"></p>\n</li>\n</ul>\n<h2 id=\"差错控制技术\"><a href=\"#差错控制技术\" class=\"headerlink\" title=\"差错控制技术\"></a>差错控制技术</h2><h2 id=\"检查和纠正错误\"><a href=\"#检查和纠正错误\" class=\"headerlink\" title=\"- 检查和纠正错误\"></a>- 检查和纠正错误</h2><ol>\n<li>肯定应答：收到肯定应答信号ACK继续发送</li>\n<li>否定应答重发：收到否定应答信号NAK重发出错帧</li>\n<li>超时重发：超过规定时间重发该帧。这种技术称为自动重发ARQ<ul>\n<li>ARQ分为三种：停等ARQ、选择重发ARQ、后退N帧ARQ</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"停等ARQ\"><a href=\"#停等ARQ\" class=\"headerlink\" title=\"停等ARQ\"></a>停等ARQ</h3><ul>\n<li>是停等流控和ARQ结合，类似于银行柜台存钱，手续齐全办理，叫号等时间长下一位，忘带身份证就不办理</li>\n</ul>\n<h3 id=\"选择重发ARQ\"><a href=\"#选择重发ARQ\" class=\"headerlink\" title=\"选择重发ARQ\"></a>选择重发ARQ</h3><ul>\n<li>是滑动窗口和ARQ结合，类似于银行ATM一沓一沓存钱，出现假币，选择该假币重发，其他不用重发</li>\n</ul>\n<h3 id=\"后退N帧ARQ\"><a href=\"#后退N帧ARQ\" class=\"headerlink\" title=\"后退N帧ARQ\"></a>后退N帧ARQ</h3><ul>\n<li>是滑动窗口和ARQ结合，类似银行ATM一沓一沓数钱，一张是假币，这一张包括后面的全部重发</li>\n</ul>\n<h2 id=\"各种流控和差错利用率计算公式\"><a href=\"#各种流控和差错利用率计算公式\" class=\"headerlink\" title=\"各种流控和差错利用率计算公式\"></a>各种流控和差错利用率计算公式</h2><ol>\n<li>常数a值的计算：<br><br>$a=(d/v)/(L/R)=(RT)/L=(Rd/v)/L$</li>\n</ol>\n<ul>\n<li>其中，R=数据速率，d=线路长度，v=传播速度，L=帧长，T=传播延迟</li>\n</ul>\n<ol>\n<li><p>效率E值的计算：<br><br>停等协议：$E=1/(2a+1)$<br><br>滑动窗口：$E=W/(2a+1)$</p>\n</li>\n<li><p>窗口W值的计算：<br><br>选择ARQ：W$\\leq<script type=\"math/tex\">2^{k-1}$<br>\n后退ARQ：W$\\leq</script>2^k-1$</p>\n</li>\n</ol>\n<h2 id=\"高级数据链路控制协议HDLC\"><a href=\"#高级数据链路控制协议HDLC\" class=\"headerlink\" title=\"高级数据链路控制协议HDLC\"></a>高级数据链路控制协议HDLC</h2><ul>\n<li>面向比特的，通擦使用CRC-16、CRC-32校验</li>\n<li><p>帧边界01111110在两端，用户数据字段INFO大小不固定</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/20/yIRAE9.png\" alt=\"hdlc\"></p>\n</li>\n</ul>\n<h1 id=\"帧中继FR\"><a href=\"#帧中继FR\" class=\"headerlink\" title=\"帧中继FR\"></a>帧中继FR</h1><ul>\n<li>帧中继FR是X.25演变改进的</li>\n</ul>\n<ol>\n<li>工作在OSI的最底两层</li>\n<li>在第二层建立虚电路，承载数据业务</li>\n<li>FR只做检错，不会重传，没有流控，只有拥塞控制，检错交给高层</li>\n</ol>\n<h2 id=\"帧中继的优点\"><a href=\"#帧中继的优点\" class=\"headerlink\" title=\"帧中继的优点\"></a>帧中继的优点</h2><ol>\n<li>基于分组（帧）交换的透明传输，可提供 <strong>面向连接</strong>的服务</li>\n<li>帧长可变，长度达1600-4096字节，可承载各种局域网的数据帧</li>\n<li>数据速率可达2-45Mbps</li>\n<li>既可以提供带宽，也可以应付突发的数据传输</li>\n<li>没有流控和重传机制，开销小</li>\n</ol>\n<h1 id=\"综合业务数据网ISDN\"><a href=\"#综合业务数据网ISDN\" class=\"headerlink\" title=\"综合业务数据网ISDN\"></a>综合业务数据网ISDN</h1><ul>\n<li>基于电路交换，把数据、声音和视频信号三合一传输</li>\n</ul>\n<h2 id=\"ISDN的两种速率\"><a href=\"#ISDN的两种速率\" class=\"headerlink\" title=\"ISDN的两种速率\"></a>ISDN的两种速率</h2><ul>\n<li>基本（N-ISDN）速率BRI（2B+D）</li>\n<li>基群（B-ISDN）速率PRI（30B+D）<ul>\n<li>B信道为数据信道，D信道为控制信道</li>\n</ul>\n</li>\n<li>$2B+D=2*64+16=144Kb/s$</li>\n<li>$30B+D=30*64+64=1.984Mb/s$，近似于E1</li>\n</ul>\n<h1 id=\"异步传输模式ATM\"><a href=\"#异步传输模式ATM\" class=\"headerlink\" title=\"异步传输模式ATM\"></a>异步传输模式ATM</h1><ul>\n<li>最早是B-ISBN的一部分，分为四层模型</li>\n<li>各功能介绍</li>\n</ul>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">层次</th>\n<th style=\"text-align:center\">子层</th>\n<th style=\"text-align:center\">功能</th>\n<th style=\"text-align:center\">与OSI的对应</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">高层</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">对用户数据的控制</td>\n<td style=\"text-align:center\">高层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ATM适配层</td>\n<td style=\"text-align:center\">汇聚子层</td>\n<td style=\"text-align:center\">为高层提供统一接口</td>\n<td style=\"text-align:center\">第四层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ATM适配层</td>\n<td style=\"text-align:center\">拆装子层</td>\n<td style=\"text-align:center\">分割与合并用户数据</td>\n<td style=\"text-align:center\">第四层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ATM层</td>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\">虚通路和虚信道的管理、信元头的组装和拆分、信元的多路复用、流量控制</td>\n<td style=\"text-align:center\">第三层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物理层</td>\n<td style=\"text-align:center\">传输汇聚子层</td>\n<td style=\"text-align:center\">信元校验和速率控制、数据帧的组装和拆分</td>\n<td style=\"text-align:center\">第二层</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">物理层</td>\n<td style=\"text-align:center\">物理介质子层</td>\n<td style=\"text-align:center\">位定时、物理网络接入</td>\n<td style=\"text-align:center\">第一层</td>\n</tr>\n</tbody>\n</table>\n</div>\n<ul>\n<li>ATM采用53字节信元分组交换，使用统计时分TDM。采用 <strong>双绞线或光纤</strong>，典型数据速率 <strong>155M</strong>，==面向连接==，使用虚电路的虚通路VPI和虚信道VCI</li>\n</ul>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>关于RS-232-C标准的描述正确的是[]{.gap} 。 {.quiz}</p>\n<ul>\n<li>可以实现长距离远程通信 {.options}</li>\n<li>可以使用9针或25针D型连接器 {.correct}</li>\n<li>必须采用24根线的电缆进行连接 {.options}</li>\n<li>通常用于连接并行打印机 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>ATM高层定义了4类业务，压缩视频信号的传送属于[]{.gap} 类业务。{.quiz}</p>\n<ul>\n<li>CBR {.options}</li>\n<li>VBR {.correct}</li>\n<li>UBR {.options}</li>\n<li>ABR {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>下列选项中，不采用虚电路通信的网络是 []{.gap}网。{.quiz}</p>\n<ul>\n<li>X.25 {.options}</li>\n<li>帧中继 {.options}</li>\n<li>ATM {.options}</li>\n<li>IP {.correct}<br>{.options}<blockquote>\n<ul>\n<li>IP 是数据报通信</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>下面关于帧中继网络的描述错误的是[]{.gap} 。 {.quiz}</p>\n<ul>\n<li>用户的数据速率可以在一定的范围内变化 {.options}</li>\n<li>既可以使用流式业务，又可以适应突发式业务 {.options}</li>\n<li>帧中继网可以提供永久虚电路和交换虚电路 {.options}</li>\n<li>帧中继虚电路建立在HDLC协议之上 {.correct}<br>{.options}<blockquote>\n<ul>\n<li>帧中继虚电路是建立在X.25协议之上</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>对于选择重发ARQ协议，如果帧编号字段为K位，则窗口大小为[]{.gap} 。 {.quiz}</p>\n<ul>\n<li>W$\\leq$$2^k-1$ {.options}</li>\n<li>W$\\leq$$2^{k-1}$ {.correct}</li>\n<li>W=$2k-1$ {.options}</li>\n<li>W$\\leq$$2k-1$ {.options}<br>{.options}<blockquote>\n<ul>\n<li>A是后退，CD都错误，无中生有</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>由30B+D组成的ISDN称为[]{.gap} ，通常可以将若干个B信道组成不同的H信道，而最大的H信道的带宽是1.92Mb/s。 {.quiz}</p>\n<ul>\n<li>N-ISDN BRI {.options}</li>\n<li>N-ISDN PRI {.options}</li>\n<li>B-ISDN PRI {.correct}</li>\n<li>B-ISDN BRI {.options}<br>{.options}</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%8002/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%8002/",
            "title": "数据通信基础02",
            "date_published": "2021-02-19T03:15:50.000Z",
            "content_html": "<h1 id=\"数据通信方式\"><a href=\"#数据通信方式\" class=\"headerlink\" title=\"数据通信方式\"></a>数据通信方式</h1><h2 id=\"通信方向\"><a href=\"#通信方向\" class=\"headerlink\" title=\"通信方向\"></a>通信方向</h2><ul>\n<li><strong>单工通信（电视）</strong><ul>\n<li>数据只能从一个方向向另一个方向传输</li>\n</ul>\n</li>\n<li><strong>半双工通信（对讲机）</strong><ul>\n<li>数据可以双向传输，但不可同步进行传输</li>\n</ul>\n</li>\n<li><strong>全双工（手机）</strong><ul>\n<li>数据可双向传输，并且可以同步传输</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"传输方式\"><a href=\"#传输方式\" class=\"headerlink\" title=\"传输方式\"></a>传输方式</h2><h3 id=\"按传输方式分\"><a href=\"#按传输方式分\" class=\"headerlink\" title=\"按传输方式分\"></a>按传输方式分</h3><ul>\n<li><strong>串行传输</strong><ul>\n<li>串行传输是数据在传输中只有1个数据位在设备之间进行的传输，对任何一个由若干位二进制表示的字符,串行传输都是用一个传输信道，按位有序的对字符进行传输。==串行传输的速度比并行传输的速度要慢得多，但费用低。并行传输适用距离短，而串行传输适用远距离传输。==</li>\n</ul>\n</li>\n<li><strong>并行传输</strong><ul>\n<li>并行传输是在传输中有多个数据位同时在设备之间进行的传输。所有数据位能同时沿着各自的信道并排的传输并行传输时，一次可以传一个字符，收发双方不存在同步的问题。==而且速度快、控制方式简单。但是并行传输需要多个物理通道。所以并行传输只适合于短距离、要求传输速度快的场合使用。==<h3 id=\"按同步方式分\"><a href=\"#按同步方式分\" class=\"headerlink\" title=\"按同步方式分\"></a>按同步方式分</h3></li>\n</ul>\n</li>\n<li><strong>异步传输</strong><ul>\n<li>异步传输将比特分成小组进行传送，小组可以是8位的1个字符或更长。发送方可以在任何时刻发送这些比特组，而接收方从不知道它们会在什么时候到达。==（适用于远距离，数据量小的场景）==</li>\n</ul>\n</li>\n<li><p><strong>同步传输</strong></p>\n<ul>\n<li>同步传输的比特分组要大得多。它不是独立地发送每个字符，每个字符都有自己的开始位和停止位，而是把它们组合起来一起发送。我们将这些组合称为数据帧，或简称为帧。==（适用于近距离，数据量大的场景）==</li>\n</ul>\n</li>\n<li><p><strong>两者区别</strong></p>\n<ol>\n<li><p>异步传输是面向字符的传输，而同步传输是面向比特的传输。</p>\n</li>\n<li><p>异步传输的单位是字符而同步传输的单位是桢。</p>\n</li>\n<li><p>异步传输通过字符起止的开始和停止码抓住再同步的机会，而同步传输则是以数据中抽取同步信息。</p>\n</li>\n<li><p>异步传输对时序的要求较低，同步传输往往通过特定的时钟线路协调时序。</p>\n</li>\n<li><p>异步传输相对于同步传输效率较低。</p>\n</li>\n</ol>\n</li>\n</ul>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/19/yhwYm8.jpg\" alt=\"sjcs\"></p>\n<h1 id=\"数据交换方式\"><a href=\"#数据交换方式\" class=\"headerlink\" title=\"数据交换方式\"></a>数据交换方式</h1><h2 id=\"电路交换\"><a href=\"#电路交换\" class=\"headerlink\" title=\"电路交换\"></a>电路交换</h2><ul>\n<li>通信双方通过建立一条物理链路，当双方需要通信时，全权占用该链路，直到通信结束，才释放链路，==电话就是使用电路交换的方式==</li>\n<li><strong>优点：</strong><ul>\n<li>实时性强、适合传输大量数据、有序传输、无冲突</li>\n</ul>\n</li>\n<li><strong>缺点：</strong><ul>\n<li>高独占性、需要建立一条物理链路，利用率低，无差错控制能力</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"报文交换\"><a href=\"#报文交换\" class=\"headerlink\" title=\"报文交换\"></a>报文交换</h2><ul>\n<li><strong>优点：</strong><ul>\n<li>不需要专用通道，线路利用率高，存储转发节点可校验纠错</li>\n</ul>\n</li>\n<li><strong>缺点：</strong><ul>\n<li>有通信延迟</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"分组交换\"><a href=\"#分组交换\" class=\"headerlink\" title=\"分组交换\"></a>分组交换</h2><ul>\n<li><strong>优点：</strong><ul>\n<li>利用率更高，可选路径，数据率转换，支持优先级</li>\n</ul>\n</li>\n<li><strong>缺点：</strong><ul>\n<li>时延、开销大</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"分组交换的三种方式\"><a href=\"#分组交换的三种方式\" class=\"headerlink\" title=\"分组交换的三种方式\"></a>分组交换的三种方式</h3><ul>\n<li><strong>数据报</strong><ul>\n<li>无连接、无序的，单向传输</li>\n</ul>\n</li>\n<li><strong>虚电路</strong><ul>\n<li>交互式、逻辑连接、可靠性高</li>\n</ul>\n</li>\n<li><strong>信元交换</strong><ul>\n<li>升级版虚电路，固定分组长度</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"分组数据报\"><a href=\"#分组数据报\" class=\"headerlink\" title=\"分组数据报\"></a>分组数据报</h2><ul>\n<li>是单线传输、无连接的</li>\n</ul>\n<h1 id=\"多路复用技术\"><a href=\"#多路复用技术\" class=\"headerlink\" title=\"多路复用技术\"></a>多路复用技术</h1><h2 id=\"频分复用FDM\"><a href=\"#频分复用FDM\" class=\"headerlink\" title=\"频分复用FDM\"></a>频分复用FDM</h2><ul>\n<li><p>不同的频率，子信道隔离频带方串扰，如CATV、WIFI</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/19/yhwWtJ.png\" alt=\"pffy\"></p>\n</li>\n</ul>\n<h2 id=\"时分复用TDM\"><a href=\"#时分复用TDM\" class=\"headerlink\" title=\"时分复用TDM\"></a>时分复用TDM</h2><ul>\n<li><p>不同的时间，轮流占用</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/19/yhwLAe.png\" alt=\"sffy\"></p>\n</li>\n</ul>\n<h2 id=\"波分复用WDM\"><a href=\"#波分复用WDM\" class=\"headerlink\" title=\"波分复用WDM\"></a>波分复用WDM</h2><ul>\n<li><p>不同的波长</p>\n<p> <img data-src=\"https://s3.ax1x.com/2021/02/19/yhwXhd.jpg\" alt=\"bffy\"></p>\n</li>\n</ul>\n<h1 id=\"数字传输标准\"><a href=\"#数字传输标准\" class=\"headerlink\" title=\"数字传输标准\"></a>数字传输标准</h1><h2 id=\"T1标准（北美和日本使用）\"><a href=\"#T1标准（北美和日本使用）\" class=\"headerlink\" title=\"T1标准（北美和日本使用）\"></a>T1标准（北美和日本使用）</h2><ul>\n<li>T1标准，即北美的24路PCM国际标准</li>\n<li>速率： ==1.544Mbps==</li>\n<li>次数：125us=8000次</li>\n<li>==1.544Mbps=(24<em>(7+1)+1)</em>8000==<ul>\n<li>其中，北美使用的T1系统共有24个话路，每个话路采样脉冲用7bit编码，然后再加上1位信令码元，因此一个话路占用8bit。帧同步码是在24路的编码之后加上1bit，这样每帧共有193bit，因此T1一次群的数据率为1.544Mbit/s。<h3 id=\"T2、T3、T4标准\"><a href=\"#T2、T3、T4标准\" class=\"headerlink\" title=\"T2、T3、T4标准\"></a>T2、T3、T4标准</h3></li>\n</ul>\n</li>\n<li>T2=4T1</li>\n<li>T3=7T1</li>\n<li>T4=6T1</li>\n<li>巧记T2、T3、T4： <strong>T476=踢屎去喽</strong></li>\n</ul>\n<h2 id=\"E1标准（中国和欧洲使用）\"><a href=\"#E1标准（中国和欧洲使用）\" class=\"headerlink\" title=\"E1标准（中国和欧洲使用）\"></a>E1标准（中国和欧洲使用）</h2><ul>\n<li>E1标准，即欧洲30路PCM国家标准</li>\n<li>速率：==2.048Mbps==</li>\n<li>次数：125us=8000次</li>\n<li>==2.048Mbps=(32<em>(7+1))</em>8000==<ul>\n<li>其中，E1的一个时分复用帧（其长度T=125us）共划 分为32相等的时隙，时隙的编号为CH0~CH31。其中时隙CH0用作帧同步用，时隙CH16用来传送信令，剩下CH1~CH15和CH17~CH31 共30个时隙用作30个话路。每个时隙传送8bit，因此共用256bit。</li>\n<li>每秒传送8个帧，因此PCM一次群E1的数据率就是 2.048Mbit/s。</li>\n</ul>\n</li>\n<li>CH0和CH16为控制信令，30个话音数据</li>\n</ul>\n<h3 id=\"E2、E3、E4标准\"><a href=\"#E2、E3、E4标准\" class=\"headerlink\" title=\"E2、E3、E4标准\"></a>E2、E3、E4标准</h3><ul>\n<li>E2=4E1</li>\n<li>E3=4E2</li>\n<li>E4=4E3</li>\n<li>巧记： <strong>E444</strong></li>\n</ul>\n<h2 id=\"SONET标准（美国）和SDH标准（国际）—-用于光纤网络\"><a href=\"#SONET标准（美国）和SDH标准（国际）—-用于光纤网络\" class=\"headerlink\" title=\"SONET标准（美国）和SDH标准（国际）—-用于光纤网络\"></a>SONET标准（美国）和SDH标准（国际）—-用于光纤网络</h2><ul>\n<li>SONET标准是同步光纤网</li>\n<li>在SONET中，OC-1为 <strong>最小单位</strong> ， <strong>值为51.84Mb/s</strong> ，OC-N表示N倍的OC-1</li>\n<li><strong>OC-3=OC-1*3=155.520Mb/s</strong><font color=red>(重点！！！)</font></li>\n<li><strong>OC-1=57384Mb/s</strong><font color=red>(重点！！！)</font></li>\n</ul>\n<h1 id=\"数据检错纠错\"><a href=\"#数据检错纠错\" class=\"headerlink\" title=\"数据检错纠错\"></a>数据检错纠错</h1><h2 id=\"检错码\"><a href=\"#检错码\" class=\"headerlink\" title=\"检错码\"></a>检错码</h2><ul>\n<li>==奇偶校验== 看1的个数是奇数还是偶数， <strong>只能检错不能纠错</strong> ，广泛应用与移动通信</li>\n</ul>\n<h2 id=\"海明码\"><a href=\"#海明码\" class=\"headerlink\" title=\"海明码\"></a>海明码</h2><ul>\n<li>在数据位m后面增加冗余检验位k，组成信息m+k，则满足m+k $\\lt$ $2^k$ -1可纠正一位错误， <strong>即可检错也可纠错</strong></li>\n<li><strong>码距d</strong>：两个码字之间不同的最小的位数（比特数）</li>\n<li>可以查出多少位错误： $\\leq$ d-1</li>\n<li>可以纠正多少位错误： $\\lt$ d/2</li>\n</ul>\n<h2 id=\"CRC码\"><a href=\"#CRC码\" class=\"headerlink\" title=\"CRC码\"></a>CRC码</h2><ul>\n<li>即冗余循环校验码，是一种循环码，通过循环移位，实现检错，硬件容易实现，广泛用于局域网， <strong>只能检错不能纠错</strong></li>\n<li><p>计算CRC校验码：多项式除法，不进位加法，如生产多项式G(x)= $x^4$ +x+1，信息码字为10111，求CRC校验码。</p>\n<blockquote>\n<p>计算步骤： 把原式变形为： 1$x^4$+0$x^3$+0$x^2$+1$x^1$+1$x^0$<br>看每个指数的系数，把系数连起来作为除数10011<br>由于多项式中最高项系数为4，则在信息码字后面加4个0，即101110000为被除数<br>再进行模2计算，得到的余数即为CRC校验码1100</p>\n</blockquote>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/19/yhwv9A.png\" alt=\"crc\"></p>\n</li>\n</ul>\n<h2 id=\"DHCP的功能\"><a href=\"#DHCP的功能\" class=\"headerlink\" title=\"DHCP的功能\"></a>DHCP的功能</h2><ol>\n<li>保证任何IP地址在==同一时刻只能由一台DHCP客户机所使用==。</li>\n<li>DHCP应当可以给用户分配永久固定的IP地址。</li>\n<li>DHCP应当可以同用其他方法获得IP地址的主机共存（如手工配置IP地址的主机）</li>\n<li>DHCP服务器应当向现有的BOOTP客户端提供服务。</li>\n</ol>\n<h2 id=\"DHCP三种分配IP地址的机制\"><a href=\"#DHCP三种分配IP地址的机制\" class=\"headerlink\" title=\"DHCP三种分配IP地址的机制\"></a>DHCP三种分配IP地址的机制</h2><ol>\n<li>==自动分配方式==(<code>AutomaticAllocation</code>),DHCP服务器为主机指定一个永久性的IP地址，一旦DHCP客户端第一次成功从DHCP服务器端租用到IP地址后，就可以永久性的使用该地址。</li>\n<li>==动态分配方式==(<code>DynamicAllocation</code>),DHCP服务器给主机指定一个具有时间限制的IP地址，时间到期或主机明确表示放弃该地址时，该地址可以被其他主机使用。</li>\n<li>==手工分配方式==(<code>ManualAllocation</code>),客户端的IP地址是由网络管理员指定的，DHCP服务器只是将指定的IP地址告诉客户端主机。<blockquote>\n<p>三种地址分配方式中，只有动态分配可以重复使用客户端不再需要的地址。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>采用海明码进行差错校验，信息码字为1001011，为纠正一位错，则需要 []{.gap} 位冗余位。 {.quiz}</p>\n<ul>\n<li>2 {.options}</li>\n<li>3 {.options}</li>\n<li>4 {.correct}</li>\n<li>8 {.options}<br>{.options}<blockquote>\n<ul>\n<li>:x:</li>\n<li>:x:</li>\n<li>:heavy_check_mark: m=k=1&lt;2^k,m=7 ,k=4</li>\n<li>:x: </li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>按照美国制定的光纤通行标准SONET，OC-48的线路速率是 []{.gap} Mb/s。 {.quiz}</p>\n<ul>\n<li>51.84 {.options}</li>\n<li>622.05 {.options}</li>\n<li>2488.32 {.correct}</li>\n<li>9953.28 {.options}<br>{.options}<blockquote>\n<ul>\n<li>:x:</li>\n<li>:x:</li>\n<li>:heavy_check_mark: OC-3=155.520，OC-3的16倍约为2488</li>\n<li>:x:</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>E1载波把32个信道按 []{.gap} 方式复用在一条2.048Mb/s的高速信道上。 {.quiz}</p>\n<ul>\n<li>TDM {.correct}</li>\n<li>CDMA {.options}</li>\n<li>WDM {.options}</li>\n<li>FDM {.options}<br>{.options}<blockquote>\n<ul>\n<li>:heavy_check_mark: 8b*8000=64kb/s</li>\n<li>:x:</li>\n<li>:x:</li>\n<li>:x:</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>E1载波的数据速率是 [B]{.gap} Mb/s，T1载波的数据速率是 [A]{.gap} Mb/s。 {.quiz}</p>\n<ul>\n<li>1.544 {.correct}</li>\n<li>2.048 {.correct}</li>\n<li>6.312 {.options}</li>\n<li>8.448 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>E1信道的数据速率是2.048Mb/s，其中每个话音信道的数据速率是 []{.gap} Kb/s。 {.quiz}</p>\n<ul>\n<li>56 {.options}</li>\n<li>64 {.correct}</li>\n<li>128 {.options}</li>\n<li>2048 {.options}<br>{.options}<blockquote>\n<ul>\n<li>:x:</li>\n<li>:heavy_check_mark: 8/125us=64kbps 或者8*8000</li>\n<li>:x:</li>\n<li>:x:</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<ol>\n<li>E1线路是一种以时分多路复用技术为基础的传输技术，其有效数据率（扣除开销）约为 []{.gap} Mb/s。{.quiz}<ul>\n<li>1.34 {.options}</li>\n<li>1.544 {.options}</li>\n<li>1.92 {.correct}</li>\n<li>2.048 {.options}<br>{.options}<blockquote>\n<ul>\n<li>:x:</li>\n<li>:x:</li>\n<li>:heavy_check_mark: 2.048*（30/32）=1.92,其中E1线路的速率为2.048Mb/s</li>\n<li>:x:</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%8001/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E6%95%B0%E6%8D%AE%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%8001/",
            "title": "数据通信基础01",
            "date_published": "2021-02-18T02:51:47.000Z",
            "content_html": "<h1 id=\"数据通信基本概念\"><a href=\"#数据通信基本概念\" class=\"headerlink\" title=\"数据通信基本概念\"></a>数据通信基本概念</h1><hr>\n<h2 id=\"信源\"><a href=\"#信源\" class=\"headerlink\" title=\"信源\"></a>信源</h2><ul>\n<li>信源，是产生各类信息的实体。信源给出的符号是不确定的，可用随机变量及其统计特性描述。</li>\n</ul>\n<h2 id=\"信道\"><a href=\"#信道\" class=\"headerlink\" title=\"信道\"></a>信道</h2><ul>\n<li>通信的通道</li>\n</ul>\n<h2 id=\"信宿\"><a href=\"#信宿\" class=\"headerlink\" title=\"信宿\"></a>信宿</h2><ul>\n<li>信息接收者指在信息传递过程中，发出信息一方称发信息者，接受信息的一方称信息接受者，又称受信息或信宿。</li>\n</ul>\n<h2 id=\"数字信号\"><a href=\"#数字信号\" class=\"headerlink\" title=\"数字信号\"></a>数字信号</h2><ul>\n<li>数字信号是信息用于若干个明确定义的离散值表示的时间离散星火</li>\n</ul>\n<h2 id=\"模拟信号\"><a href=\"#模拟信号\" class=\"headerlink\" title=\"模拟信号\"></a>模拟信号</h2><ul>\n<li>模拟信号是在一段连续的时间间隔内，其代表信息的特征量可以在任意瞬间程序为任意数值的信号</li>\n</ul>\n<h2 id=\"模拟通信\"><a href=\"#模拟通信\" class=\"headerlink\" title=\"模拟通信\"></a>模拟通信</h2><ul>\n<li>利用正弦波的幅度、频率或相位的变化，或利用脉冲的幅度、宽度或位置变化来模拟原始信号，以达到通信的目的<h2 id=\"数字通信\"><a href=\"#数字通信\" class=\"headerlink\" title=\"数字通信\"></a>数字通信</h2></li>\n<li><p>用数值信号作为载体来传输消息，或用数字信号对载波就行数字调制后再传输的通信方式</p>\n<p><img data-src=\"https://z3.ax1x.com/2021/03/21/64y5DK.png\" alt=\"sztxjc\"></p>\n</li>\n</ul>\n<h1 id=\"数据通信计算\"><a href=\"#数据通信计算\" class=\"headerlink\" title=\"数据通信计算\"></a>数据通信计算</h1><hr>\n<h2 id=\"模拟信道带宽计算\"><a href=\"#模拟信道带宽计算\" class=\"headerlink\" title=\"模拟信道带宽计算\"></a>模拟信道带宽计算</h2><script type=\"math/tex; mode=display\">W=f2-f1</script><ul>\n<li>其中f1是低频，f2是高频</li>\n</ul>\n<h2 id=\"尼奎斯特定理\"><a href=\"#尼奎斯特定理\" class=\"headerlink\" title=\"尼奎斯特定理\"></a>尼奎斯特定理</h2><script type=\"math/tex; mode=display\">最大数据速率=2W \\log_2 N=B \\log_2 N</script><ul>\n<li>其中，W表示带宽，B表示波特率，N是码元总的种类数</li>\n</ul>\n<h2 id=\"信息量n与码元种类N的关系\"><a href=\"#信息量n与码元种类N的关系\" class=\"headerlink\" title=\"信息量n与码元种类N的关系\"></a>信息量n与码元种类N的关系</h2><script type=\"math/tex; mode=display\">n =\\log_2 N</script><h2 id=\"香农公式\"><a href=\"#香农公式\" class=\"headerlink\" title=\"香农公式\"></a>香农公式</h2><script type=\"math/tex; mode=display\">极限数据速率=带宽\\times\\log_2 (1+S/N)</script><ul>\n<li>其中，S为信号功率，N为噪声功率</li>\n</ul>\n<h2 id=\"误码率\"><a href=\"#误码率\" class=\"headerlink\" title=\"误码率\"></a>误码率</h2><ul>\n<li>指接收到的错误码元数在总传送码元数中所占的比例</li>\n</ul>\n<script type=\"math/tex; mode=display\">P_C = 错误码元数/码元总数</script><h2 id=\"信噪比\"><a href=\"#信噪比\" class=\"headerlink\" title=\"信噪比\"></a>信噪比</h2><script type=\"math/tex; mode=display\">信噪比=信号功率/噪声功率=S/N</script><h2 id=\"码元速率（波特率）\"><a href=\"#码元速率（波特率）\" class=\"headerlink\" title=\"码元速率（波特率）\"></a>码元速率（波特率）</h2><ul>\n<li>即单位时间内载波参数（相位、振幅、频率等）变化的次数，单位为波特，符号<code>Baud</code>，简写<code>B</code></li>\n</ul>\n<h2 id=\"比特率（信息传输速率、信息速率）\"><a href=\"#比特率（信息传输速率、信息速率）\" class=\"headerlink\" title=\"比特率（信息传输速率、信息速率）\"></a>比特率（信息传输速率、信息速率）</h2><ul>\n<li>指单位时间内在信道上传达的数据量（即比特数），单位为比特每秒（<code>bit/s</code>），简写<code>b/s</code>或<code>bps</code></li>\n</ul>\n<h2 id=\"波特率与比特率的关系\"><a href=\"#波特率与比特率的关系\" class=\"headerlink\" title=\"波特率与比特率的关系\"></a>波特率与比特率的关系</h2><script type=\"math/tex; mode=display\">比特率=波特率 \\times 单个调制状态对应的二进制位数= 波特率\\times\\log_2 N</script><h2 id=\"分贝数与信噪比的关系\"><a href=\"#分贝数与信噪比的关系\" class=\"headerlink\" title=\"分贝数与信噪比的关系\"></a>分贝数与信噪比的关系</h2><script type=\"math/tex; mode=display\">dB =10 \\lg (S/N)</script><h2 id=\"公式总结\"><a href=\"#公式总结\" class=\"headerlink\" title=\"公式总结\"></a>公式总结</h2><p><img data-src=\"https://s3.ax1x.com/2021/02/19/yfwB8I.jpg\" alt=\"gongshi\"></p>\n<h1 id=\"常用考试数据\"><a href=\"#常用考试数据\" class=\"headerlink\" title=\"常用考试数据\"></a>常用考试数据</h1><h2 id=\"单位换算\"><a href=\"#单位换算\" class=\"headerlink\" title=\"单位换算\"></a>单位换算</h2><ul>\n<li>通信换算进制1000 &nbsp;&nbsp;1G=1000M</li>\n<li>存储换算进制1024 &nbsp;&nbsp;1G=1024M</li>\n</ul>\n<h2 id=\"信道延迟\"><a href=\"#信道延迟\" class=\"headerlink\" title=\"信道延迟\"></a>信道延迟</h2><ul>\n<li><p><strong>总延迟时间</strong>：</p>\n<script type=\"math/tex; mode=display\">T_{总延迟}=T_1+T_2</script><ul>\n<li>其中$T_1$为发送延迟，$T_2$为传输延迟</li>\n</ul>\n</li>\n<li>==电缆信道延迟：200m/us==（200km/ms、200000km/s）为光速的2/3</li>\n<li>==卫星信道延迟：270ms==</li>\n</ul>\n<h1 id=\"双绞线\"><a href=\"#双绞线\" class=\"headerlink\" title=\"双绞线\"></a>双绞线</h1><ul>\n<li>双绞线分为 <strong>非屏蔽双绞线UTP</strong> ， <strong>屏蔽双绞线STP</strong>。</li>\n<li><strong>100米可达到100MB/s</strong></li>\n</ul>\n<h2 id=\"屏蔽双绞线\"><a href=\"#屏蔽双绞线\" class=\"headerlink\" title=\"屏蔽双绞线\"></a>屏蔽双绞线</h2><ul>\n<li>三类线——带宽10Mbps—-cat3</li>\n<li>五类线——带宽100Mbps—-cat5</li>\n<li>超五类线——带宽100Mbps—-cat5e</li>\n<li>六类线——带宽250Mbps—-cat6</li>\n</ul>\n<h2 id=\"非屏蔽双绞线\"><a href=\"#非屏蔽双绞线\" class=\"headerlink\" title=\"非屏蔽双绞线\"></a>非屏蔽双绞线</h2><ul>\n<li>三类线——带宽16Mbps—-cat3</li>\n<li>五类线——带宽100Mbps—-cat5</li>\n<li>超五类线——带宽100Mbps—-cat5e</li>\n</ul>\n<h2 id=\"双绞线线序标准\"><a href=\"#双绞线线序标准\" class=\"headerlink\" title=\"双绞线线序标准\"></a>双绞线线序标准</h2><ul>\n<li>分为T568A与T568B</li>\n</ul>\n<h3 id=\"T568A—交叉线\"><a href=\"#T568A—交叉线\" class=\"headerlink\" title=\"T568A—交叉线\"></a>T568A—交叉线</h3><p>绿白、绿、橙白、蓝、蓝白、橙、棕白、棕</p>\n<h3 id=\"T568B—直通线\"><a href=\"#T568B—直通线\" class=\"headerlink\" title=\"T568B—直通线\"></a>T568B—直通线</h3><p>橙白、橙、绿白、蓝、蓝白、绿、棕白、棕</p>\n<h2 id=\"交叉线与直通线的适用范围\"><a href=\"#交叉线与直通线的适用范围\" class=\"headerlink\" title=\"交叉线与直通线的适用范围\"></a>交叉线与直通线的适用范围</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">线缆连接设备情况</th>\n<th style=\"text-align:center\">采用的线缆种类</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">计算机——计算机</td>\n<td style=\"text-align:center\">交叉线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">计算机——交换机</td>\n<td style=\"text-align:center\">直通线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">计算机——路由器</td>\n<td style=\"text-align:center\">交叉线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">交换机——交换机</td>\n<td style=\"text-align:center\">交叉线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">交换机——路由器</td>\n<td style=\"text-align:center\">直通线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">路由器——路由器</td>\n<td style=\"text-align:center\">交叉线</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"同轴电缆\"><a href=\"#同轴电缆\" class=\"headerlink\" title=\"同轴电缆\"></a>同轴电缆</h1><ul>\n<li>分为粗同轴电缆与细同轴电缆。 <strong>传送距离长，信号稳定的特点</strong>，常用于电监控、音响设备</li>\n<li><strong>由里到外分别是：中心铜线，塑料绝缘体，网状导电层和电线外皮</strong></li>\n<li>==优点是传送距离长，信号稳定==</li>\n<li><p>同轴电缆分为 <strong>RG-58（基带），RG-59（宽带）</strong></p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/19/yfwRaQ.jpg\" alt=\"tzdl\"></p>\n</li>\n</ul>\n<h1 id=\"光纤\"><a href=\"#光纤\" class=\"headerlink\" title=\"光纤\"></a>光纤</h1><ul>\n<li><p>分为单模光纤SMF与多模光纤MMF，黄色为单模，橙色水蓝色为多模</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/19/yfwhPs.jpg\" alt=\"gx\"></p>\n</li>\n</ul>\n<h2 id=\"单模光纤与多模光纤的对比\"><a href=\"#单模光纤与多模光纤的对比\" class=\"headerlink\" title=\"单模光纤与多模光纤的对比\"></a>单模光纤与多模光纤的对比</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">项目</th>\n<th style=\"text-align:center\">单模光纤</th>\n<th style=\"text-align:center\">单模光纤</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">距离</td>\n<td style=\"text-align:center\">长</td>\n<td style=\"text-align:center\">短</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">速率</td>\n<td style=\"text-align:center\">高</td>\n<td style=\"text-align:center\">低</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">光源</td>\n<td style=\"text-align:center\">激光</td>\n<td style=\"text-align:center\">发光二极管</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">直径</td>\n<td style=\"text-align:center\">小</td>\n<td style=\"text-align:center\">大</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">端接</td>\n<td style=\"text-align:center\">较难</td>\n<td style=\"text-align:center\">较易</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">造价</td>\n<td style=\"text-align:center\">高</td>\n<td style=\"text-align:center\">低</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"无线信道\"><a href=\"#无线信道\" class=\"headerlink\" title=\"无线信道\"></a>无线信道</h1><ul>\n<li><p>分为 <strong>无线电波</strong> 和 <strong>红外光波</strong></p>\n</li>\n<li><p><strong>无线电波</strong></p>\n<ul>\n<li>长波</li>\n<li>中波</li>\n<li>短波</li>\n<li>超短波</li>\n<li><strong>微波</strong><ul>\n<li>地面微波</li>\n<li>卫星微波</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>红外光波</strong><ul>\n<li>近红外线</li>\n<li>中红外线</li>\n<li>远红外线</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"模拟信道调制\"><a href=\"#模拟信道调制\" class=\"headerlink\" title=\"模拟信道调制\"></a>模拟信道调制</h1><ul>\n<li><p>分为 <strong>调幅ASK</strong>、 <strong>调频FSK</strong>、 <strong>调相PSK</strong>、 <strong>正交调幅QAM</strong></p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/19/yfwTMV.png\" alt=\"tiaozhi\"></p>\n</li>\n</ul>\n<h1 id=\"数字信道编码\"><a href=\"#数字信道编码\" class=\"headerlink\" title=\"数字信道编码\"></a>数字信道编码</h1><ul>\n<li>分为采样、量化、编码三步骤</li>\n</ul>\n<h1 id=\"调制技术与码元数\"><a href=\"#调制技术与码元数\" class=\"headerlink\" title=\"调制技术与码元数\"></a>调制技术与码元数</h1><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">调制技术</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">码元种类N</th>\n<th style=\"text-align:center\">比特位n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ASK</td>\n<td style=\"text-align:center\">幅度键控</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FSK</td>\n<td style=\"text-align:center\">频移键控</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PSK</td>\n<td style=\"text-align:center\">相移键控</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DPSK</td>\n<td style=\"text-align:center\">4相键控</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">QPSK</td>\n<td style=\"text-align:center\">正交相移键控</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">2</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h1 id=\"极性编码\"><a href=\"#极性编码\" class=\"headerlink\" title=\"极性编码\"></a>极性编码</h1><blockquote>\n<p>参考视频：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMW40NDExMTd4NT9mcm9tPXNlYXJjaCZhbXA7c2VpZD0xMDQ4NzEzMTI4MDg4NTA3NDA3NQ==\">https://www.bilibili.com/video/BV1n441117x5?from=search&amp;seid=10487131280885074075</span></p>\n</blockquote>\n<ul>\n<li><p>分为单极性、极性、双极性</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/19/yfwqZF.jpg\" alt=\"jxbm\"></p>\n<ul>\n<li><strong>单极性码</strong><ul>\n<li>只有 ==一个极性==，正电平为0，零电平为1</li>\n</ul>\n</li>\n<li><strong>极性码</strong><ul>\n<li>==两个极性==，正电平为0，零电平为1</li>\n</ul>\n</li>\n<li><strong>双极性码</strong><ul>\n<li>零电平为0，正负电平交替翻转表示1，这种编码不能定时，需要引入时钟</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"归零性编码\"><a href=\"#归零性编码\" class=\"headerlink\" title=\"归零性编码\"></a>归零性编码</h1><ul>\n<li><p>分为归零码、不归零码、双相码</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/19/yfwji9.png\" alt=\"gljxm\"></p>\n<ul>\n<li><strong>归零码</strong><ul>\n<li>码元中间 ==信号回归到零电平，正电平到零电平转换变为0，负点平到零电平转换变为1==，这种码元自定时</li>\n<li>通过“归零”这一步骤，相当于代替时钟信号编码在数据中，即可做到同步</li>\n<li>该编码效率较低</li>\n</ul>\n</li>\n<li><strong>不归零码</strong><ul>\n<li>码元中间信号==不归零==，1表示电平翻转，0不翻转，正电为1，负电为0</li>\n<li>因存在同步问题，计算机网络不使用该类编码</li>\n</ul>\n</li>\n<li><strong>双相码</strong><ul>\n<li>低到高表示0，高到低表示1，这种编码抗干扰性好，实现自同步</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"曼彻斯特码与差分曼码\"><a href=\"#曼彻斯特码与差分曼码\" class=\"headerlink\" title=\"曼彻斯特码与差分曼码\"></a>曼彻斯特码与差分曼码</h1><ul>\n<li>曼彻斯特码降0升1，降1升0，效率50%</li>\n<li><p>差分曼码折0平1，效率50%</p>\n<p>  <img data-src=\"https://s3.ax1x.com/2021/02/19/yf08ij.png\" alt=\"cfmm\"></p>\n<ul>\n<li><strong>曼彻斯特码</strong><ul>\n<li>==低到高表示0，高到低表示1==，码元中间==电平转换既表示数据，又做定时信号==</li>\n<li>使用在10Mb/s的传统以太网中，跳变时刻即表示数据，也表示时钟</li>\n</ul>\n</li>\n<li><strong>差分曼彻斯特码</strong><ul>\n<li>每一位开始处是否有电平翻转，有着表示0，没有则表示1</li>\n<li>跳变仅表示时钟，码元开始处才表示数据的变化</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h1><ol>\n<li><p>设信道带宽为4000Hz，信噪比为30dB，按照香农定理，信道容量为 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>4Kb/s {.options}</li>\n<li>1.6Kb/s {.options}</li>\n<li>40Kb/s {.correct}</li>\n<li>120Kb/s {.options}<br>{.options}<blockquote>\n<ul>\n<li>使用香农公式 C&nbsp;=&nbsp;W $\\log_2 (1+S/N)$ ,和公式 dB&nbsp;=&nbsp;10 $\\lg_10 (S/N)$,由30dB得到&nbsp;S/N&nbsp;=&nbsp;1000；于是&nbsp;C&nbsp;=&nbsp;4000 $\\log_2 (1+1000)$ &nbsp;= &nbsp;40000b/s；除以进率1000，换算为Kb/s等于40Kb/s</li>\n<li>{.options}</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>所谓正交幅度调制是把两个 []{.gap} 的模拟信号合为一个载波信号。 {.quiz} </p>\n<ul>\n<li>幅度相同相位相差90° {.correct}</li>\n<li>幅度相同相位相差180°  {.options}</li>\n<li>频率相同相位相差90° {.options}</li>\n<li>频率相同相位相差180° {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>地面上相距2000km的两地之间通过电缆传输4000bit长的数据包，数据速率为64Kb/s，从喀什发送到接收完成需要花费的时间为 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>48ms {.options}</li>\n<li>640ms {.options}</li>\n<li>32.5ms {.options}</li>\n<li>72.5ms {.correct}<br>{.options}<blockquote>\n<ul>\n<li>一个数据包从开始发送到接收完成的总时间=发送时间+传播延迟时间；传播延迟时间=2000km/(200km/ms)=10ms;发送时间=4000b/(6400b/s)=0.065s=62.5ms;总时间=62.5+10=72.5ms  </li>\n<li>{.options}</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>PCM编码是把模拟信号数字化的过程，通常模拟话音信道的带宽为4000Hz，则在数字化采用频率至少 []{.gap} 次/秒。 {.quiz}</p>\n<ul>\n<li>2000 {.options}</li>\n<li>4000 {.options}</li>\n<li>8000 {.correct}</li>\n<li>16000 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在异步通信中，每个字符包含一位起始位、7位数据位、1位奇偶位和1位终止位，每秒钟传送200个字符，采用DPSK调制，则码元速率为 []{.gap} B。 {.quiz}</p>\n<ul>\n<li>200 {.options}</li>\n<li>500 {.options}</li>\n<li>1000 {.options}</li>\n<li>2000 {.correct}<br>{.options}<blockquote>\n<ul>\n<li>R=200*(1+7+1+1)=2000bps，根据DPSK默认是2DPSK，也就是2相N=2，带入R=B$\\log_2 (N)$，数值为：2000=B$\\log_2 (2)$，得出波特率B=2000</li>\n<li>{.options}</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>设信道带宽为4000Hz，采用PCM编码，采用周期为125us，每个样本量化为128个等级，则信道的数据速率为 []{.gap} Kb/s。 {.quiz}</p>\n<ul>\n<li>10 {.options}</li>\n<li>16 {.options}</li>\n<li>56 {.correct}</li>\n<li>64 {.options}<br>{.options}<blockquote>\n<ul>\n<li>128个等级即2^7=128，需要yong7位来表示，125us的周期是每秒变化8000次，则有7*8000=56000b/s=56Kb/s</li>\n<li>{.options}</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E6%A6%82%E8%AE%BA/",
            "url": "https://peter-pan001.github.io/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E6%A6%82%E8%AE%BA/",
            "title": "计算机基础概论",
            "date_published": "2021-02-17T12:41:16.000Z",
            "content_html": "<h1 id=\"计算机网络概念\"><a href=\"#计算机网络概念\" class=\"headerlink\" title=\"计算机网络概念\"></a>计算机网络概念</h1><h2 id=\"计算机网络\"><a href=\"#计算机网络\" class=\"headerlink\" title=\"计算机网络\"></a>计算机网络</h2><ul>\n<li>计算机网络时通过通信线路和通信设备连接的许多的 ==分散独立工作== 的计算机系统，遵从一定的协议用 软件==实现资源共享== 的 <strong>系统</strong></li>\n</ul>\n<h2 id=\"计算机组成\"><a href=\"#计算机组成\" class=\"headerlink\" title=\"计算机组成\"></a>计算机组成</h2><ul>\n<li><strong>硬件</strong><ul>\n<li>电脑、路由器等</li>\n</ul>\n</li>\n<li><strong>软件</strong><ul>\n<li>聊天软件、通信软件等</li>\n</ul>\n</li>\n<li><strong>协议</strong><ul>\n<li>一类数据传输的标准</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"协议分类\"><a href=\"#协议分类\" class=\"headerlink\" title=\"协议分类\"></a>协议分类</h2><ul>\n<li>协议分为国际标准OSI/RM和工人标准TCP/IP</li>\n</ul>\n<h2 id=\"计算机网络分类\"><a href=\"#计算机网络分类\" class=\"headerlink\" title=\"计算机网络分类\"></a>计算机网络分类</h2><h3 id=\"按分布范围\"><a href=\"#按分布范围\" class=\"headerlink\" title=\"按分布范围\"></a>按分布范围</h3><ul>\n<li>局域网</li>\n<li>城域网</li>\n<li>广域网</li>\n</ul>\n<h3 id=\"按拓扑结构\"><a href=\"#按拓扑结构\" class=\"headerlink\" title=\"按拓扑结构\"></a>按拓扑结构</h3><ul>\n<li><strong>星型</strong><ul>\n<li>耗材多，过于依赖中心节点，便于管理</li>\n</ul>\n</li>\n<li><strong>环型</strong><ul>\n<li>单点破坏，则全网络瘫痪</li>\n</ul>\n</li>\n<li><strong>树型</strong><ul>\n<li>层次化便于管理</li>\n</ul>\n</li>\n<li><strong>总线型（已淘汰！）</strong><ul>\n<li>耗材少，成本低，冲突多</li>\n</ul>\n</li>\n<li><p><strong>网状拓扑</strong></p>\n<ul>\n<li>可靠性高，实现负载均衡，选路成本高</li>\n</ul>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/18/yRt8I0.jpg\" alt=\"tuopu\"></p>\n</li>\n</ul>\n<h3 id=\"其他分类\"><a href=\"#其他分类\" class=\"headerlink\" title=\"其他分类\"></a>其他分类</h3><ul>\n<li>公用与专用网</li>\n<li>通信网ISP与信息网ICP</li>\n<li>校园网与企业网</li>\n<li>骨干网与接入网</li>\n<li>有线网与无线网</li>\n</ul>\n<h2 id=\"OSI-RM模型\"><a href=\"#OSI-RM模型\" class=\"headerlink\" title=\"OSI/RM模型\"></a>OSI/RM模型</h2><ul>\n<li><p>OSI/RM模型（开放系统互联参考模型）是应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/18/yRtBZR.png\" alt=\"osi01\"></p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/18/yRtgzD.png\" alt=\"[osi02](osi02.png)\"></p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/18/yRtfLd.png\" alt=\"[osi03](osi03.png)\"></p>\n</li>\n</ul>\n<h2 id=\"TCP-IP模型\"><a href=\"#TCP-IP模型\" class=\"headerlink\" title=\"TCP/IP模型\"></a>TCP/IP模型</h2><ul>\n<li><p>TCP/IP（因特网传输协议）四层协议模型包括应用层、传输层、互联网层、网路接口层</p>\n<p><img data-src=\"https://s3.ax1x.com/2021/02/18/yRt5dI.png\" alt=\"[tcpips](tcp_ip.png)\"></p>\n</li>\n</ul>\n<h2 id=\"OSI各层解析\"><a href=\"#OSI各层解析\" class=\"headerlink\" title=\"OSI各层解析\"></a>OSI各层解析</h2><h3 id=\"底层（用于通信）\"><a href=\"#底层（用于通信）\" class=\"headerlink\" title=\"底层（用于通信）\"></a>底层（用于通信）</h3><ul>\n<li><strong>物理层</strong><ul>\n<li>封装单位：==比特流==</li>\n<li>地址标识：bit流</li>\n<li>功能：提供物理链路，二进制数据比特流传输、定义机械/电气特性与接口</li>\n</ul>\n</li>\n<li><strong>数据链路层</strong><ul>\n<li>封装单位：==数据帧==</li>\n<li>地址标识：MAC地址</li>\n<li>功能：把不可靠信道转变为可靠信道，将比特组织成帧，在链路上提供点到点的帧传输，进行差错检测与流量控制</li>\n</ul>\n</li>\n<li><strong>网络层</strong><ul>\n<li>封装单位： ==数据报或数据分组==</li>\n<li>地址标识：IP地址</li>\n<li>功能：路径的选择，网络联机的多路复用、差错的检测与恢复、排序与流量控制、服务选择</li>\n</ul>\n</li>\n<li><strong>传输层</strong><ul>\n<li>封装单位： ==数据报文或数据段==</li>\n<li>地址标识：端口号</li>\n<li>功能：提供端到端之间可靠透明的数据传输。分段与重组、差错控制与流量控制，保证数据传输的正确性</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"高层（用于资源）\"><a href=\"#高层（用于资源）\" class=\"headerlink\" title=\"高层（用于资源）\"></a>高层（用于资源）</h3><ul>\n<li><strong>会话层</strong><ul>\n<li>封装单位： ==应用进程==</li>\n<li>地址标识： 进程号</li>\n<li>功能：会话连接的恢复与释放、对会话进行分段、同步等操作</li>\n</ul>\n</li>\n<li><strong>表示层</strong><ul>\n<li>封装单位： ==应用进程==</li>\n<li>地址标识： 进程号</li>\n<li>功能：数据加密与数据压缩、语法表示与连接管理</li>\n</ul>\n</li>\n<li><strong>应用层</strong><ul>\n<li>封装单位： ==应用进程==</li>\n<li>地址标识： 进程号</li>\n<li>功能：应用层包含用户应用程序和协议</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"数据在网络传输中的操作——封装与解封\"><a href=\"#数据在网络传输中的操作——封装与解封\" class=\"headerlink\" title=\"数据在网络传输中的操作——封装与解封\"></a>数据在网络传输中的操作——封装与解封</h2><h3 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h3><p> <img data-src=\"https://s3.ax1x.com/2021/02/18/yRNeT1.png\" alt=\"fz01\"></p>\n<h3 id=\"解封\"><a href=\"#解封\" class=\"headerlink\" title=\"解封\"></a>解封</h3><p> <img data-src=\"https://s3.ax1x.com/2021/02/18/yRtves.png\" alt=\"[jf01](jf01.png)\"></p>\n<h2 id=\"练习例题\"><a href=\"#练习例题\" class=\"headerlink\" title=\"练习例题\"></a>练习例题</h2><ol>\n<li><p>[]{.gap} 结构要求把工作站连接到一台中央设备 {.quiz}</p>\n<ul>\n<li>星型 {.correct}</li>\n<li>环型 {.options}</li>\n<li>树型 {.options} </li>\n<li>总线型 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>组建计算机网络的目的是实现联网计算机系统的 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>硬件共享 {.options}</li>\n<li>软件共享 {.options}</li>\n<li>数据共享 {.options}</li>\n<li>资源共享 {.correct}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在ISO OSI/RM中，[]{.gap} 实现 ==数据压缩== 功能 {.quiz}</p>\n<ul>\n<li>应用层 {.options}</li>\n<li>表示层 {.correct}</li>\n<li>会话层 {.options}</li>\n<li>传输层 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在OSI参考模型中，数据链路层处理的数据单位是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>比特 {.options}</li>\n<li>帧 {.correct}</li>\n<li>分组 {.options}</li>\n<li>报文 {.options}<br>{.options}<blockquote>\n<ul>\n<li>:x: 物理层</li>\n<li>:heavy_check_mark: 数据链路层</li>\n<li>:x: 网络层</li>\n<li>:x: 传输层<br>{.options}</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>在OSI参考模型中，实现端到端的应答、分组排序和流量控制功能的协议层是 []{.gap} 。 {.quiz}</p>\n<ul>\n<li>数据链路层 {.options}</li>\n<li>网络层 {.options}</li>\n<li>传输层 {.correct}</li>\n<li>会话层 {.options}<br>{.options}</li>\n</ul>\n</li>\n<li><p>在ISU参考模型中，下层协议为上层洗衣提供服务（SAP）。在Internet中，网络层的服务访问点是[]{.gap} 。 {.quiz}</p>\n<ul>\n<li>MAC地址 {.options}</li>\n<li>LLC地址 {.options}</li>\n<li>IP地址 {.correct}</li>\n<li>端口号  {.options}<br>{.options}<blockquote>\n<ul>\n<li>:x: 位于数据链路层</li>\n<li>:x: 介于数据链路层与网络层之间，作为逻辑链路控制</li>\n<li>:heavy_check_mark: 网络层</li>\n<li>:x: 传输层<br>{.options}</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "软考网络工程师"
            ]
        }
    ]
}