<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://peter-pan001.github.io/my-blog</id>
    <title>理 想 净 土 • Posts by &#34;html&#34; tag</title>
    <link href="https://peter-pan001.github.io/my-blog" />
    <updated>2021-03-25T02:42:18.000Z</updated>
    <category term="Java" />
    <category term="linux" />
    <category term="Linux" />
    <category term="network" />
    <category term="MySQL" />
    <category term="云计算" />
    <category term="git、github" />
    <category term="前端" />
    <category term="JavaScript" />
    <category term="html" />
    <category term="css" />
    <category term="算法与数据结构" />
    <category term="数据分析" />
    <category term="软考网络工程师" />
    <entry>
        <id>https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AFHTML5+CSS3/</id>
        <title>前端HTML5+CSS3</title>
        <link rel="alternate" href="https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AFHTML5+CSS3/"/>
        <content type="html">&lt;h2 id=&#34;网页简史&#34;&gt;&lt;a href=&#34;#网页简史&#34; class=&#34;headerlink&#34; title=&#34;网页简史&#34;&gt;&lt;/a&gt;网页简史&lt;/h2&gt;&lt;h3 id=&#34;诞生&#34;&gt;&lt;a href=&#34;#诞生&#34; class=&#34;headerlink&#34; title=&#34;诞生&#34;&gt;&lt;/a&gt;诞生&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;万维网发明人——蒂姆.伯纳斯-李&lt;/li&gt;
&lt;li&gt;1991.08.06，世界上第一个服务器和第一个网站在欧洲核子研究中心上线&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;W3C标准的建立&#34;&gt;&lt;a href=&#34;#W3C标准的建立&#34; class=&#34;headerlink&#34; title=&#34;W3C标准的建立&#34;&gt;&lt;/a&gt;W3C标准的建立&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;伯纳斯李于&lt;font color=red&gt;1994年建立万维网联盟（W3C）&lt;/font&gt;，W3C为了制订网页开发的标准，以使用不同的浏览器达到相同的效果&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网页的组成&#34;&gt;&lt;a href=&#34;#网页的组成&#34; class=&#34;headerlink&#34; title=&#34;网页的组成&#34;&gt;&lt;/a&gt;网页的组成&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;结构&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;HTML用于描述网页的结构&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表现&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;CSS用于控制页面中元素的样式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;行为&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;JavaScript用于响应用户的操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;HTML&#34;&gt;&lt;a href=&#34;#HTML&#34; class=&#34;headerlink&#34; title=&#34;HTML&#34;&gt;&lt;/a&gt;HTML&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTML (HYpertext Markup Language)&lt;font color=red&gt;超文本标记语言&lt;/font&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;主要负责网页的结构&lt;/li&gt;
&lt;li&gt;通过使用标签的方式标识网页的不同组成部分&lt;/li&gt;
&lt;li&gt;&lt;p&gt;超文本即超链接，即一个网页跳转到另一个网页的连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单的HTML代码&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;title&amp;gt;网页文本标题&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;一级标题&amp;lt;/h1&amp;gt;
        &amp;lt;h2&amp;gt;二级标题&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;段落&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;自结束标签与注释&#34;&gt;&lt;a href=&#34;#自结束标签与注释&#34; class=&#34;headerlink&#34; title=&#34;自结束标签与注释&#34;&gt;&lt;/a&gt;自结束标签与注释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;类似于&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;img &amp;gt;
&amp;lt;img /&amp;gt;
&amp;lt;img &amp;gt;
&amp;lt;input /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就叫做&lt;strong&gt;自结束标签&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;格式：&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;!-- 你要注释的内容 --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;HTML的注释中的内容会被浏览器给忽略掉，不会在网页中直接显示&lt;/li&gt;
&lt;li&gt;但可以在HTML编辑器中查看源码获取到注释的内容，或者网页中点击右键显示网页源代码也可以&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注释&lt;/strong&gt;的作用主要是在多人协同开发的场景中，对其他成员阐述和解释自己的代码，&lt;font color=red&gt;开发过程中要养成写注释的习惯，可以使代码更加简单明了！&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font color=red&gt;注释不能嵌套&lt;/font&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;标签中的属性&#34;&gt;&lt;a href=&#34;#标签中的属性&#34; class=&#34;headerlink&#34; title=&#34;标签中的属性&#34;&gt;&lt;/a&gt;标签中的属性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;属性&lt;/strong&gt;用来设置标签的内容如何显示，在开始标签或自结束标签中设置&lt;/li&gt;
&lt;li&gt;属性是一个&lt;font color=blue&gt;名值对（X=Y）&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;有些属性有属性值，有些没有，如果有属性值，需要用双引号引出&lt;/li&gt;
&lt;li&gt;多个属性需要空格隔开&lt;/li&gt;
&lt;li&gt;例如：&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;h1&amp;gt;&amp;lt;font color=&amp;quot;red&amp;quot; size=&amp;quot;3&amp;quot;&amp;gt;这是一个大标题&amp;lt;/font&amp;gt;&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;文档声明&#34;&gt;&lt;a href=&#34;#文档声明&#34; class=&#34;headerlink&#34; title=&#34;文档声明&#34;&gt;&lt;/a&gt;文档声明&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;网页版本的演变&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;HTML4&lt;/li&gt;
&lt;li&gt;XHTML2.0&lt;/li&gt;
&lt;li&gt;HTML5（现在使用的版本）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;文档声明（doctype）&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;文档声明&lt;/strong&gt;是用来告诉浏览器当前网页的版本的&lt;/li&gt;
&lt;li&gt;必须写在HTML文件的第一行&lt;/li&gt;
&lt;li&gt;格式：&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;!Doctype HTML&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;字符编码&#34;&gt;&lt;a href=&#34;#字符编码&#34; class=&#34;headerlink&#34; title=&#34;字符编码&#34;&gt;&lt;/a&gt;字符编码&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;所有的数据在计算机中存储是都是以&lt;font color=red&gt;二进制形式&lt;/font&gt;存储，包括文字&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编码&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;将字符转换为二进制码的过程称为编码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;解码&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;将二进制码转换为字符的过程称为解码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;乱码问题&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;如果编码和解码所采用的的字符集不同就会出现乱码问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常见的字符集&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;ASCII（美国编码）&lt;/li&gt;
&lt;li&gt;ISO088591（欧洲编码）&lt;/li&gt;
&lt;li&gt;GB2313（中国）&lt;/li&gt;
&lt;li&gt;GBK（中国，在GB2313基础下扩充）&lt;/li&gt;
&lt;li&gt;UTF-8（万国码，编辑器的默认编码格式，微软记事本除外）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在HTML5里面设置网页字符集的格式&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;格式：&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;文档的使用&#34;&gt;&lt;a href=&#34;#文档的使用&#34; class=&#34;headerlink&#34; title=&#34;文档的使用&#34;&gt;&lt;/a&gt;文档的使用&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一个标准的HTML文档的代码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;!doctype html&amp;gt;

&amp;lt;html&amp;gt;
      &amp;lt;!-- head是网页的头部，head的内容不会在网页中直接出现，而是帮助浏览器或搜索引擎解析网页 --&amp;gt;
      &amp;lt;head&amp;gt;
      &amp;lt;!-- meta标签用来设置网页的元数据 --&amp;gt;
      &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
      &amp;lt;!--titlw中的内容会显示在浏览器的标题栏中，搜索引擎会根据title中的内容来判断网页的主要内容 --&amp;gt;
      &amp;lt;title&amp;gt;
          网页解析标题
      &amp;lt;/title&amp;gt;
      &amp;lt;/head&amp;gt;
      &amp;lt;!--网页的内容主体 --&amp;gt;
      &amp;lt;body&amp;gt;

      &amp;lt;h1&amp;gt;一级标题&amp;lt;/h1&amp;gt;

      &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;vscode编写HTML文档的一些常用快捷键&#34;&gt;&lt;a href=&#34;#vscode编写HTML文档的一些常用快捷键&#34; class=&#34;headerlink&#34; title=&#34;vscode编写HTML文档的一些常用快捷键&#34;&gt;&lt;/a&gt;vscode编写HTML文档的一些常用快捷键&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;打开一个文档的基本结构： ！ +  TAB键&lt;/li&gt;
&lt;li&gt;段落： p + TAB键&lt;/li&gt;
&lt;li&gt;光标下移： Ctrl  + 回车&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;HTML实体&#34;&gt;&lt;a href=&#34;#HTML实体&#34; class=&#34;headerlink&#34; title=&#34;HTML实体&#34;&gt;&lt;/a&gt;HTML实体&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在网页中编写多个空格时，默认情况下会被浏览器自动解析为一个空格&lt;/li&gt;
&lt;li&gt;当我们需要写一下&lt;strong&gt;特殊符号&lt;/strong&gt;如大于号小于号等就需要用到HTML的实体&lt;/li&gt;
&lt;li&gt;实体的语法：&lt;ul&gt;
&lt;li&gt;&amp;amp;实体名;(全英文下)&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;amp;nbsp;  空格 &amp;quot; &amp;quot;
&amp;amp;gt;  大于号  &amp;quot; &amp;lt; &amp;quot;
&amp;amp;lt;  小于号  &amp;quot; &amp;gt; &amp;quot;
&amp;amp;copy;   版权符号
&amp;amp;amp;   和号   &amp;quot; &amp;amp; &amp;quot;
&amp;amp;quot;  引号   &amp;quot; &amp;quot; &amp;quot;
&lt;/code&gt;&lt;/pre&gt;
(更多的实体语法参照W3school的HTML教程)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;meta标签&#34;&gt;&lt;a href=&#34;#meta标签&#34; class=&#34;headerlink&#34; title=&#34;meta标签&#34;&gt;&lt;/a&gt;meta标签&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;关于meta&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;通常所说的META标签，是在HTML网页源代码中一个重要的html标签。META标签&lt;strong&gt;用来描述一个HTML网页文档的属性&lt;/strong&gt;，例如作者、日期和时间、网页描述、关键词、页面刷新等。&lt;/li&gt;
&lt;li&gt;META标签是HTML标记HEAD区的一个关键标签，它位于HTML文档的&amp;lt; head &amp;gt;和&amp;lt; title &amp;gt;之间&lt;font color=brown&gt;（有些也不是在&amp;lt; head &amp;gt;和&amp;lt; title &amp;gt;之间）。&lt;/font&gt;它提供的信息虽然用户不可见，但却是文档的最基本的元信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;META标签的组成&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;两大部分&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;HTTP-EQUIV和NAME变量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;属性&lt;/strong&gt;&lt;br&gt;|属性|值|描述|&lt;br&gt;|:——-:|:——-:|:—:|&lt;br&gt;|charset|character_set| 定义文档的字符编码|&lt;br&gt;|content|text|定义与http-equiv或name属性相关的元数据|&lt;br&gt;|http-equiv|content-typedefault-style&amp;nbsp;&amp;nbsp;refresh|把 content 属性关联到 HTTP 头部|&lt;br&gt;|name| application-name &amp;nbsp;&amp;nbsp;author&amp;nbsp;&amp;nbsp;   description&amp;nbsp;&amp;nbsp; generator &amp;nbsp;&amp;nbsp;keywords| 把content属性关联到一个名称|&lt;br&gt;(摘自百度百科)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;各个功能&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;charset&lt;/strong&gt;  指定网页的字符集&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt; 指定数据的名称&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;content&lt;/strong&gt;  指定数据的内容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;keywords&lt;/strong&gt;  表示网站的关键字，可以同时设置多个关键字，使用逗号隔开&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;   用于指定网站的描述（即搜索引擎的超链接）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;title标签的内容会作为搜索结果的超链接上的文本表示&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;meta charset=&amp;quot;utf-8&amp;quot; /&amp;gt;
&amp;lt;meta name=&amp;quot;renderer&amp;quot; content=&amp;quot;webkit&amp;quot; /&amp;gt;
&amp;lt;title&amp;gt;淘宝网 - 淘！我喜欢&amp;lt;/title&amp;gt;
&amp;lt;meta name=&amp;quot;spm-id&amp;quot; content=&amp;quot;a21bo&amp;quot; /&amp;gt;
&amp;lt;meta name=&amp;quot;description&amp;quot; content=&amp;quot;淘宝网 - 亚洲较大的网上交易平台，提供各类服饰、美容、家居、数码、话费/&amp;quot; /&amp;gt;
&amp;lt;meta name=&amp;quot;keyword&amp;quot; content=&amp;quot;淘宝,掏宝,网上购物,C2C,在线交易,交易市场,网上交易,交易市场,网上买,网上卖&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;语义化标签01&#34;&gt;&lt;a href=&#34;#语义化标签01&#34; class=&#34;headerlink&#34; title=&#34;语义化标签01&#34;&gt;&lt;/a&gt;语义化标签01&lt;/h3&gt;&lt;h4 id=&#34;概述&#34;&gt;&lt;a href=&#34;#概述&#34; class=&#34;headerlink&#34; title=&#34;概述&#34;&gt;&lt;/a&gt;概述&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;语义化标签&lt;/strong&gt;指具有其含义的标签，使开发者更直观、优雅的编写代码&lt;h4 id=&#34;标题标签-块元素&#34;&gt;&lt;a href=&#34;#标题标签-块元素&#34; class=&#34;headerlink&#34; title=&#34;标题标签(块元素)&#34;&gt;&lt;/a&gt;标题标签(块元素)&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;一共有六级标题，从h1到h6&lt;/li&gt;
&lt;li&gt;六级标题的重要性从h1到h6&lt;font color=red&gt;逐级递减&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;h1的标签在网页中的重要性&lt;strong&gt;仅次于title标签&lt;/strong&gt;，在一般情况下一个网页&lt;font color=red&gt;只有一个h1标签&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;在网页中独占一行的元素称为&lt;strong&gt;块元素（block element）&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;hgroup标签&#34;&gt;&lt;a href=&#34;#hgroup标签&#34; class=&#34;headerlink&#34; title=&#34;hgroup标签&#34;&gt;&lt;/a&gt;hgroup标签&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;hgroup标签&lt;strong&gt;用来给标题分组，多个标题可以放进一个hgroup标签里&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;hgroup&amp;gt;
&amp;lt;h1&amp;gt;你好，服务器&amp;lt;/h1&amp;gt;
&amp;lt;h2&amp;gt;章节01&amp;lt;/h2&amp;gt;
&amp;lt;/hgroup&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;p标签（段落标签，块元素）&#34;&gt;&lt;a href=&#34;#p标签（段落标签，块元素）&#34; class=&#34;headerlink&#34; title=&#34;p标签（段落标签，块元素）&#34;&gt;&lt;/a&gt;p标签（段落标签，块元素）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;p标签&lt;/strong&gt;在网页中表示一个段落&lt;h4 id=&#34;em标签&#34;&gt;&lt;a href=&#34;#em标签&#34; class=&#34;headerlink&#34; title=&#34;em标签&#34;&gt;&lt;/a&gt;em标签&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;em标签&lt;/strong&gt;用于加重语句语调&lt;/li&gt;
&lt;li&gt;&lt;font color=red&gt;在网页中不会独占一行的元素称为&lt;/font&gt;&lt;strong&gt;行内元素（Inline element）&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;p&amp;gt;今天天气&amp;lt;em&amp;gt;真&amp;lt;/em&amp;gt;不错&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;真牛掰&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;font size=2&gt;&lt;p&gt;今天天气&lt;em&gt;真&lt;/em&gt;不错&lt;/p&gt;&lt;br&gt;  &lt;p&gt;&lt;em&gt;真牛掰&lt;/em&gt;&lt;/p&gt;&lt;/font&gt;&lt;h4 id=&#34;strong标签&#34;&gt;&lt;a href=&#34;#strong标签&#34; class=&#34;headerlink&#34; title=&#34;strong标签&#34;&gt;&lt;/a&gt;strong标签&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;表示强调重要的内容&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;  &amp;lt;p&amp;gt;你今天&amp;lt;strong&amp;gt;必须完成任务&amp;lt;/strong&amp;gt;&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;font size=2&gt;&lt;p&gt;你今天&lt;strong&gt;必须完成任务&lt;/strong&gt;&lt;/p&gt;&lt;/font&gt;&lt;h4 id=&#34;blockquote长引用标签&#34;&gt;&lt;a href=&#34;#blockquote长引用标签&#34; class=&#34;headerlink&#34; title=&#34;blockquote长引用标签&#34;&gt;&lt;/a&gt;blockquote长引用标签&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;表示长引用&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;顾炎武说：
&amp;lt;blockquote&amp;gt;
  天下兴亡，匹夫有责
&amp;lt;/blockquote&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
  &lt;font size=2&gt;顾炎武说：&lt;br&gt;  &lt;blockquote&gt;
  天下兴亡，匹夫有责
&lt;/blockquote&gt;
  &lt;/font&gt;&lt;h4 id=&#34;q标签&#34;&gt;&lt;a href=&#34;#q标签&#34; class=&#34;headerlink&#34; title=&#34;q标签&#34;&gt;&lt;/a&gt;q标签&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;表示一个短引用&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;  子曰：&amp;lt;q&amp;gt;温故而知新，可以为师矣&amp;lt;/q&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;font size=2&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;子曰：&lt;q&gt;温故而知新，可以为师矣&lt;/q&gt;
&lt;/font&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;块和行内&#34;&gt;&lt;a href=&#34;#块和行内&#34; class=&#34;headerlink&#34; title=&#34;块和行内&#34;&gt;&lt;/a&gt;块和行内&lt;/h4&gt;&lt;h5 id=&#34;块元素（block-element）&#34;&gt;&lt;a href=&#34;#块元素（block-element）&#34; class=&#34;headerlink&#34; title=&#34;块元素（block element）&#34;&gt;&lt;/a&gt;块元素（block element）&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;在网页中一般通过元素对页面进行布局&lt;h5 id=&#34;行内元素（inline-element）&#34;&gt;&lt;a href=&#34;#行内元素（inline-element）&#34; class=&#34;headerlink&#34; title=&#34;行内元素（inline element）&#34;&gt;&lt;/a&gt;行内元素（inline element）&lt;/h5&gt;&lt;/li&gt;
&lt;li&gt;行内元素主要用来包裹文字&lt;ul&gt;
&lt;li&gt;例如标题标签h1、段落标签p&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一般情况下会在块元素中放入行内元素，但不会在行内元素中放入块元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font color=red&gt;p段落标签里不能放入任何块元素&lt;/font&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;在浏览器解析网页时，会&lt;font color=blue&gt;自动对网页中不符合规范的内容进行修改&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;语义化标签02&#34;&gt;&lt;a href=&#34;#语义化标签02&#34; class=&#34;headerlink&#34; title=&#34;语义化标签02&#34;&gt;&lt;/a&gt;语义化标签02&lt;/h3&gt;&lt;h4 id=&#34;布局标签（HTML5新增！）&#34;&gt;&lt;a href=&#34;#布局标签（HTML5新增！）&#34; class=&#34;headerlink&#34; title=&#34;布局标签（HTML5新增！）&#34;&gt;&lt;/a&gt;布局标签（HTML5新增！）&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;header&lt;/strong&gt; 表示网页的头部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;main&lt;/strong&gt; 表示网页的主体部分，一个网页只有一个main&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;footer&lt;/strong&gt; 表示网页的底部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;nav&lt;/strong&gt; 表示网页中的导航&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;aside&lt;/strong&gt; 表示网页侧边栏(对主体部分的某个内容进行详细的解释，或作其他功能使用)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;article&lt;/strong&gt; 表示一个独立的文章&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;section&lt;/strong&gt; 表示一个独立的区块，上面所有标签不能表示时使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font color=red&gt;div&lt;/font&gt;&lt;/strong&gt; 可以代替以上所有布局标签，&lt;strong&gt;无任何语义&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font color=blue&gt;span&lt;/font&gt;&lt;/strong&gt; 行内元素，&lt;strong&gt;无语义&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;
&amp;lt;main&amp;gt;&amp;lt;/main&amp;gt;
&amp;lt;footer&amp;gt;&amp;lt;/footer&amp;gt;
&amp;lt;nav&amp;gt;&amp;lt;/nav&amp;gt;
&amp;lt;aside&amp;gt;&amp;lt;/aside&amp;gt;
&amp;lt;article&amp;gt;&amp;lt;/article&amp;gt;
&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;
&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;列表&#34;&gt;&lt;a href=&#34;#列表&#34; class=&#34;headerlink&#34; title=&#34;列表&#34;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=brown&gt;列表分类
- **有序列表**
  - 使用&amp;nbsp;**ol**&amp;nbsp;来创建有序列表
  - 使用&amp;nbsp;**li**&amp;nbsp;作为列表项
    ```html
    &lt;ol&gt;
      &lt;li&gt;文字&lt;/li&gt;
      &lt;li&gt;图片&lt;/li&gt;
      &lt;li&gt;动画&lt;/li&gt;
    &lt;/ol&gt;
    ```
    &lt;ol&gt;
      &lt;li&gt;文字&lt;/li&gt;
      &lt;li&gt;图片&lt;/li&gt;
      &lt;li&gt;动画&lt;/li&gt;
    &lt;/ol&gt;
- **无序列表**（主要用于导航的使用）
  - 使用&amp;nbsp;**ul**&amp;nbsp;来创建无序列表
  - 使用&amp;nbsp;**li**&amp;nbsp;作为列表项
    ```html
    &lt;ul&gt;
      &lt;li&gt;首页&lt;/li&gt;
      &lt;li&gt;产品&lt;/li&gt;
      &lt;li&gt;售后支持&lt;/li&gt;
    &lt;/ul&gt;
    ```
      &lt;ul&gt;
      &lt;li&gt;首页&lt;/li&gt;
      &lt;li&gt;产品&lt;/li&gt;
      &lt;li&gt;售后支持&lt;/li&gt;
    &lt;/ul&gt;
- **定义列表**
  - 使用&amp;nbsp;**dl**&amp;nbsp;来创建一个定义列表
  - 使用&amp;nbsp;**dt**&amp;nbsp;来表示定义的内容
  - 使用&amp;nbsp;**dd**&amp;nbsp;来对内容进行解释
  ```html
  &lt;dl&gt;
    &lt;dt&gt;结构&lt;/dt&gt;
    &lt;dd&gt;结构表示网页的结构，用来规范网页中哪里是标题，哪里是段落&lt;/dd&gt;
  &lt;/dl&gt;
  ```
   &lt;dl&gt;
    &lt;dt&gt;结构&lt;/dt&gt;
    &lt;dd&gt;结构表示网页的结构，用来规范网页中哪里是标题，哪里是段落&lt;/dd&gt;
  &lt;/dl&gt;&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font color=red&gt;列表之间可以互相嵌套&lt;/font&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;超链接&#34;&gt;&lt;a href=&#34;#超链接&#34; class=&#34;headerlink&#34; title=&#34;超链接&#34;&gt;&lt;/a&gt;超链接&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;超链接&lt;/strong&gt;可以让我们从一个网页跳转到其他页面&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;a标签&lt;/strong&gt;定义超链接&lt;ul&gt;
&lt;li&gt;它跳转的可以是外部的一个网址（绝对路径）&lt;/li&gt;
&lt;li&gt;也可以是该网页同一目录下的文档（相对路径）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;超链接也是一个&lt;strong&gt;行内元素&lt;/strong&gt;，在&lt;strong&gt;a标签&lt;/strong&gt;里可以嵌套除它本身以外的任何元素（Ctrl+shift+向下  == 向下复制）&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;a href=&amp;quot;https://baidu.com&amp;quot;&amp;gt;百度&amp;lt;/a&amp;gt;
&amp;lt;a href=&amp;quot;./同一目录的文档名&amp;quot;&amp;gt;跳转到统一目录下的文档&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;target&lt;/strong&gt;属性  用来指定超链接打开的位置&lt;ul&gt;
&lt;li&gt;可选值：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;_self&lt;/strong&gt; 表示默认值，在当前页面打开超链接&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;_blank&lt;/strong&gt; 在新的窗口/标签栏中打开超链接&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;a href=&amp;quot;index.html&amp;quot; target =&amp;quot;_blank&amp;quot;&amp;gt;页面01&amp;lt;/a&amp;gt; 
&amp;lt;a href=&amp;quot;index.html&amp;quot; target =&amp;quot;_self&amp;quot;&amp;gt;页面02&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;#&lt;/strong&gt;&amp;nbsp;在href后面设置#号超链接，点击此超链接&lt;strong&gt;回到页面顶部&lt;/strong&gt;(页面不会发生跳转)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;&amp;nbsp;属性；是元素的唯一标识，同一页面不可有重复的id属性&lt;font color=blue&gt;（可以作为网页位置的别名）&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通过&lt;font color=purple&gt;用#号加id名&lt;/font&gt;可以形成一个超链接到达使用这个id名的标题/段落中&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;可以使用&lt;code&gt;Javascript:;&lt;/code&gt;,来作为href的属性，此时点击这个超链接&lt;strong&gt;没有任何作用&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;这是一个无效果的超链接&amp;lt;/a&amp;gt;
&amp;lt;a id=&amp;quot;bottom&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;回到顶部&amp;lt;/a&amp;gt;
&amp;lt;p  id =p1&amp;gt;这是第一个段落&amp;lt;/p&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;a href=&amp;quot;p1&amp;quot;&amp;gt;去第一个段落&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;相对路径&#34;&gt;&lt;a href=&#34;#相对路径&#34; class=&#34;headerlink&#34; title=&#34;相对路径&#34;&gt;&lt;/a&gt;相对路径&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;当我们需要跳转到一个服务器内部的页面时，要用到&lt;strong&gt;相对路径&lt;/strong&gt;，用.或..开头&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&lt;strong&gt;&lt;font color=blue&gt;./&lt;/font&gt;&lt;/strong&gt;&amp;nbsp;表示当前文件所在的目录&lt;/li&gt;
&lt;li&gt;&amp;nbsp;&lt;strong&gt;&lt;font color=blue&gt;../&lt;/font&gt;&lt;/strong&gt;&amp;nbsp;表示当前文件所在目录的上一级目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;图片标签&#34;&gt;&lt;a href=&#34;#图片标签&#34; class=&#34;headerlink&#34; title=&#34;图片标签&#34;&gt;&lt;/a&gt;图片标签&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;图片标签用于在当前页面中引入一个外部照片&lt;/li&gt;
&lt;li&gt;图片标签img是一个&lt;strong&gt;自结束标签&lt;/strong&gt;，属于替换元素（介乎于块和行内元素）&lt;/li&gt;
&lt;li&gt;属性：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;src&lt;/strong&gt;&amp;nbsp;属性指定的是外部图片的路径描述&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;alt&lt;/strong&gt;&amp;nbsp;属性指图片的描述，这个描述&lt;strong&gt;默认情况下不会显示&lt;/strong&gt;，&lt;strong&gt;&lt;font color=purple&gt;只有当图片无法被浏览器加载出来时，才会显示alt中的内容，如果不写alt则不会被搜索引擎所收录（有点类似于meta的description）&lt;/font&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;width&lt;/strong&gt;&amp;nbsp;表示设置图片的宽度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;height&lt;/strong&gt;&amp;nbsp;表示设置图片的高度&lt;ul&gt;
&lt;li&gt;一般情况下，只更改width和height中的一个，这样图片就会被等比例的缩放&lt;/li&gt;
&lt;li&gt;在pc端不建议更改图片大小，会导致内存增大或图片失真的情况&lt;/li&gt;
&lt;li&gt;但在移动端就要经常使用到缩放&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;图片格式&#34;&gt;&lt;a href=&#34;#图片格式&#34; class=&#34;headerlink&#34; title=&#34;图片格式&#34;&gt;&lt;/a&gt;图片格式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;格式分类&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JPEG(jpg)&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;支持的颜色比较丰富，不支持透明效果，不支持动图，一般用于显示照片&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GIF&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;支持的颜色比较少，支持简单透明，支持动图，一般用于动图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PNG&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;支持的颜色丰富，支持复杂透明，不支持动图，网页专用格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;webp&lt;ul&gt;
&lt;li&gt;谷歌专属格式，具备其他格式所有优点，但兼容性不好&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;base64编码&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;将图片使用base64编码，这样可以让图片变成字符，通过字符的形式引入图片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可以使图片更快的加载出网页中&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;音视频播放&#34;&gt;&lt;a href=&#34;#音视频播放&#34; class=&#34;headerlink&#34; title=&#34;音视频播放&#34;&gt;&lt;/a&gt;音视频播放&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;audio&lt;/strong&gt;标签用来向页面导入一个外部的音频文件，当音频文件引入时，默认情况下不允许用户控制&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;audio src=&amp;quot;音频文件路径&amp;quot;&amp;gt;&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;controls&lt;/strong&gt; 设置允许用户对音频进行控制（播放/暂停）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;autoplay&lt;/strong&gt; 设置音频自动播放&lt;ul&gt;
&lt;li&gt;大部分浏览器不会自动对音频播放&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;loop&lt;/strong&gt; 设置音频循环播放&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;audio src=&amp;quot;音频文件路径&amp;quot; controls loop&amp;gt;&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;不是所有浏览器都支持audio标签&lt;/li&gt;
&lt;li&gt;可以使用如下写法：&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;audio controls&amp;gt;
对不起，您的浏览器不支持播放此音频
&amp;lt;source src=&amp;quot;音频文件路径&amp;gt;
&amp;lt;/audio&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;font color=red&gt;这样写的好处是如果浏览器不支持audio标签，就会显示文字，反之则会显示音频，不会显示文字&lt;/font&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;video&lt;/strong&gt;标签用来向网页引入一个视频文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;video controls&amp;gt;
&amp;lt;source src=&amp;quot;音频文件路径&amp;quot;&amp;gt;
&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于网页引入音频视频，一般不会再本地播放，会通过代理进行音视频托管，减轻服务器内存，对带宽的要求也相应降低，成本也就减少&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;CSS&#34;&gt;&lt;a href=&#34;#CSS&#34; class=&#34;headerlink&#34; title=&#34;CSS&#34;&gt;&lt;/a&gt;CSS&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CSS&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;层叠样式表&lt;/strong&gt;(英文全称：Cascading Style Sheets)是&lt;font color=brown&gt;一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言&lt;/font&gt;。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。[摘自百度百科]&lt;/li&gt;
&lt;li&gt;CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;font size=5 color=orange&gt;三种方式修改元素样式&lt;/font&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;font size=4 color=brown&gt;第一种:(内联样式/行内样式)
- 在标签内部通过style属性来设置元素样式
- 但该样式只对当前标签内部有效，对在实际的开发应用过程中非常不友好，对后期的维护相当麻烦，需要一个个的去修改
```html
&lt;p style=&#34;color:red; font-size=60px&#34;&gt;牵一发而动全身&lt;/p&gt;
```
- **注意：千万不能在开发中使用，非常低效，不推荐，仅供学习使用** &lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font size=4 color= brown&gt;第二种：(内部样式表)&lt;ul&gt;
&lt;li&gt;把style写在head标签中&lt;/li&gt;
&lt;li&gt;然后通过CSS的选择器选择元素并为其设置样式&lt;/li&gt;
&lt;li&gt;该方法的好处是：可以&lt;strong&gt;同时为多个标签设置样式，只需要修改一次即可对所有标签进行样式修改，方便样式进行复用&lt;/strong&gt;&amp;lt;/font&amp;gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
  p{
    color=red 
    font-size=50px
    }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;font size=4 color= brown&gt;第三种：(外部样式表)&lt;ul&gt;
&lt;li&gt;可以将CSS样式编写到一个外部的CSS文件中，然后通过&lt;strong&gt;link标签&lt;/strong&gt;来引入外部的CSS文件&lt;/li&gt;
&lt;li&gt;外部样式表需要通过&lt;strong&gt;link标签&lt;/strong&gt;进行引入&lt;ul&gt;
&lt;li&gt;只要网页对其进行引用就可以使用这些样式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可以使样式在不同的页面中进行复用(推荐使用，尤其开发中必备)&lt;/strong&gt;&amp;lt;/font&amp;gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;需要引用的CSS文件路径&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;CSS语法&#34;&gt;&lt;a href=&#34;#CSS语法&#34; class=&#34;headerlink&#34; title=&#34;CSS语法&#34;&gt;&lt;/a&gt;CSS语法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;font size=4&gt;&lt;strong&gt;注释&lt;/strong&gt;：注释里得到东西会自动被浏览器忽略&lt;ul&gt;
&lt;li&gt;格式(快捷键Ctrl+/)&lt;pre&gt;&lt;code class=&#34;lang-css&#34;&gt;/*  注释内容 */
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基本语法：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;选择器（selector）&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;通过选择器可以选中页面的指定元素，例如p的作用就是选中页面所有的p标签元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;声明块&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;通过声明块来指定要给元素设置的样式&lt;/li&gt;
&lt;li&gt;声明块由一个个声明组成，格式是&lt;font color=purple&gt;名值对&lt;/font&gt;，以&lt;code&gt;;&lt;/code&gt;结尾&lt;pre&gt;&lt;code class=&#34;lang-css&#34;&gt;p{
color:red;
font-size:60px;
}
h1{
color:blue;
font-size:80px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;class属性&#34;&gt;&lt;a href=&#34;#class属性&#34; class=&#34;headerlink&#34; title=&#34;class属性&#34;&gt;&lt;/a&gt;class属性&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;class&lt;/strong&gt;是一个标签的属性，它与id相似，但是&lt;font color=purple&gt;可以重复使用，对元素进行分组&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;语法：&lt;ul&gt;
&lt;li&gt;&lt;font color=red&gt;.class{属性：属性值}&lt;/font&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;p class=&amp;quot;red&amp;quot;&amp;gt;天苍苍，野茫茫&amp;lt;/p&amp;gt;
&amp;lt;p class=&amp;quot;red&amp;quot;&amp;gt;风吹草低见牛羊&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;lang-css&#34;&gt;.red{
color:red;
font-size:15px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;常用选择器&#34;&gt;&lt;a href=&#34;#常用选择器&#34; class=&#34;headerlink&#34; title=&#34;常用选择器&#34;&gt;&lt;/a&gt;常用选择器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;元素选择器&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;作用：&lt;font color=brown&gt;根据标签名设置指定元素&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;语法：&lt;font color=red&gt; 标签名{ }&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;例如： p{ } &amp;nbsp;  h1{ }&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;id选择器&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;作用：&lt;font color=brown&gt;根据元素的id属性值选择一个元素&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;语法： &lt;font color=red&gt;#id属性值{ }&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;例如： #green{ } #bottom{ }&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;类选择器&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;作用：&lt;font color=brown&gt;根据元素的class属性值选中一组元素&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;语法: &amp;nbsp;&lt;font color=red&gt;.class属性值&lt;/font&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;h1 class=&amp;quot;good&amp;quot;&amp;gt;美好的一天&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;lang-css&#34;&gt;.good{
color:orange;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;通配选择器&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;作用: &amp;nbsp;&lt;font color=brown&gt;选中页面的所有元素&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;语法：&lt;font color=red&gt;*&lt;/font&gt;&lt;pre&gt;&lt;code class=&#34;lang-css&#34;&gt;*{
color:black;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;复合选择器&#34;&gt;&lt;a href=&#34;#复合选择器&#34; class=&#34;headerlink&#34; title=&#34;复合选择器&#34;&gt;&lt;/a&gt;复合选择器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;交集选择器&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;作用：选中同时复合多个条件的元素&lt;/li&gt;
&lt;li&gt;语法：&lt;strong&gt;选择器1选择器2选择器n{ }&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;交集选择器如果有元素选择器，&lt;strong&gt;&lt;font color=red&gt;必须用元素选择器开头&lt;/font&gt;&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;red&amp;quot;&amp;gt;我是div&amp;lt;/div&amp;gt;
&amp;lt;p class=&amp;quot;red&amp;quot;&amp;gt;我是段落&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;quot;red2 a b &amp;quot;&amp;gt;我是div2&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;lang-css&#34;&gt;&amp;lt;style&amp;gt;
div.red{
  font-size:25px;
}
.a.b{
  color:blue;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并集选择器&lt;/strong&gt;(选择器分组)&lt;ul&gt;
&lt;li&gt;作用：同时选中多个选择器对应的元素&lt;/li&gt;
&lt;li&gt;语法：&lt;strong&gt;选择器1，选择器2，选择器n{ }&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-css&#34;&gt;h1,span{
color:orange;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;关系选择器&#34;&gt;&lt;a href=&#34;#关系选择器&#34; class=&#34;headerlink&#34; title=&#34;关系选择器&#34;&gt;&lt;/a&gt;关系选择器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;font size=5 color=orange&gt;各种元素类别&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;父元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;直接包含子元素的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;子元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;直接被父元素包含的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;祖先元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;font color=red&gt;直接或间接&lt;/font&gt;包含后代元素的元素&lt;/li&gt;
&lt;li&gt;一个元素的父元素也是其祖先元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后代元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;直接或间接被祖先元素包含的元素&lt;/li&gt;
&lt;li&gt;子元素也是后代元素&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;兄弟元素&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;拥有相同父元素的元素&lt;br&gt;```html&lt;br&gt;&lt;div&gt;&lt;br&gt;我是一个div&lt;br&gt;&lt;p&gt;&lt;br&gt;我是div的p元素&lt;br&gt;&lt;span&gt;我是p元素中的span&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/p&amp;gt;&lt;br&gt;&lt;span&gt;我是div的span元素&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;br&gt;```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;子元素选择器&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;作用：选中指定父元素的指定子元素&lt;/li&gt;
&lt;li&gt;语法：&lt;strong&gt;父元素 &amp;gt; 子元素&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
  div &amp;gt; span{
    color:yellow;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;后代元素选择器&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;作用：选中指定元素内的指定后代元素&lt;/li&gt;
&lt;li&gt;语法：&lt;strong&gt;祖先 后代&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
div span{
  color:red;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选择下一个兄弟元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;语法： &lt;strong&gt;前一个 + 后一个&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
p + span{
  font-size:30px;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选择所有的兄弟元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;语法： &lt;strong&gt;兄 ~ 弟&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;属性选择器&#34;&gt;&lt;a href=&#34;#属性选择器&#34; class=&#34;headerlink&#34; title=&#34;属性选择器&#34;&gt;&lt;/a&gt;属性选择器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;选择含有指定属性的元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;[属性名]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选择含有指定属性和属性值的元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;[属性名 = 属性值]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选择属性值一指定值开头的元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;[属性名 ^= 属性值]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选择属性值以指定值结尾的元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;[属性名 $= 属性值]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;选择属性值中含有某值的元素的元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;[属性名 *= 属性值]&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;head&amp;gt;
&amp;lt;style&amp;gt;
  p[title=abc]{
    color:orange;
  }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p title=&amp;quot;abc&amp;quot;&amp;gt;黄沙百战穿金甲&amp;lt;/p&amp;gt;
&amp;lt;p titie=&amp;quot;abcdef&amp;quot;&amp;gt;不破楼兰终不还&amp;lt;/p&amp;gt;
&amp;lt;p titl=&amp;quot;hello&amp;quot;&amp;gt;一曲新词酒一杯&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;伪类选择器&#34;&gt;&lt;a href=&#34;#伪类选择器&#34; class=&#34;headerlink&#34; title=&#34;伪类选择器&#34;&gt;&lt;/a&gt;伪类选择器&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;伪类&lt;/strong&gt;：不存在的类，特殊的类&lt;ul&gt;
&lt;li&gt;伪类用来描述一个元素的特殊状态&lt;ul&gt;
&lt;li&gt;比如：第一个子元素，被点击的元素，鼠标移入的元素等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;伪类一般情况下都是&amp;nbsp;:&amp;nbsp;开头&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:first-child&lt;/code&gt; 第一个子元素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:last-child&lt;/code&gt; 最后一个子元素&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:nth-child&lt;/code&gt;选中第n个子元素&lt;ul&gt;
&lt;li&gt;&lt;font color=brown&gt;特殊值：&lt;/font&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;n&lt;/strong&gt; 第n个 范围从0到正无穷&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2n&lt;/strong&gt; 或 even 表示选中偶数位子元素&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2n+1&lt;/strong&gt; 或 odd 表示选中奇数位的子元素  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:first-of-type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:last-of-type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nth-of-type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=purple&gt;这些伪类和前面的基本一致，不同点在于它们是同类型元素排序&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:not()&lt;/code&gt; 否定伪类&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;将符合条件的元素从选择器中除去&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;超链接的伪类&#34;&gt;&lt;a href=&#34;#超链接的伪类&#34; class=&#34;headerlink&#34; title=&#34;超链接的伪类&#34;&gt;&lt;/a&gt;超链接的伪类&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;:link&lt;/strong&gt; &amp;nbsp;用来表示没访问过的链接&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:visited&lt;/strong&gt;&amp;nbsp;用来表示已经访问过的链接,由于隐私的原因，因此visited这个伪类&lt;font color=blue&gt;只能修改链接的颜色&lt;/font&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;这两个表示的是超链接的状态，可在同一个超链接中进行引用&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
a:link{
  color:red;
  font-size:60px;
}
a:visited{
  color:purple;
}
a:hover{
  color:orange;
}
a:active{
  color:green;
}
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;a href=&amp;quot;www.baidu.com&amp;quot;&amp;gt;百度&amp;lt;/a&amp;gt;
&amp;lt;a href=&amp;quot;www.sina.com&amp;quot;&amp;gt;新浪&amp;lt;/a&amp;gt;  
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:hover&lt;/strong&gt;&amp;nbsp;用来&lt;font color=greed&gt;表示鼠标移入的状态&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;:active&lt;/strong&gt;&amp;nbsp;用来&lt;font color=greed&gt;表示鼠标点击的动作&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;伪元素选择器&#34;&gt;&lt;a href=&#34;#伪元素选择器&#34; class=&#34;headerlink&#34; title=&#34;伪元素选择器&#34;&gt;&lt;/a&gt;伪元素选择器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;伪元素&lt;/strong&gt;表示页面中的一些特殊的并不真实存在的元素&lt;/li&gt;
&lt;li&gt;&lt;p&gt;伪元素用&amp;nbsp;&lt;strong&gt;::&lt;/strong&gt;&amp;nbsp;开头&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;::first-letter&lt;/strong&gt;表示第一个字母&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;::first-line&lt;/strong&gt;表示第一行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;::selection&lt;/strong&gt;表示选中的内容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;::before&lt;/strong&gt;元素的开始&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;::after&lt;/strong&gt;元素的结束&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;before和after必须配合content属性来使用&lt;/strong&gt;&lt;br&gt;```html&lt;br&gt;&lt;style&gt;&lt;br&gt;p::first-letter{&lt;br&gt;font-size:50px;&lt;br&gt;}&lt;br&gt;p::first-line{&lt;br&gt;background-color:yellow;&lt;br&gt;}&lt;br&gt;p::selection{&lt;br&gt;background-color:orange;&lt;br&gt;}&lt;br&gt;div::after{&lt;br&gt;content:’#’&lt;br&gt;}&lt;br&gt;div::before{&lt;br&gt;content:’#’&lt;br&gt;}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/style&amp;gt;&lt;br&gt;&lt;body&gt;&lt;br&gt;  &lt;div&gt;what a beautiful world&lt;/div&gt;&lt;br&gt;  &lt;p&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; I had traveled here to Henson&amp;#39;s last home -- now a historic site that Carter formerly directed -- to learn more about a man who was， in many ways， an African-American Moses。 After winning his own freedom from slavery， Henson secretly helped hundreds of other slaves to escape north to Canada -- and liberty。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  &amp;lt;/p&amp;gt;&lt;br&gt;&amp;lt;/body&amp;gt;&lt;br&gt;```&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;继承&#34;&gt;&lt;a href=&#34;#继承&#34; class=&#34;headerlink&#34; title=&#34;继承&#34;&gt;&lt;/a&gt;继承&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;继承&lt;/strong&gt;，指的是&lt;strong&gt;样式的继承&lt;/strong&gt;，我们为一个元素设置的样式也会相应的应用到他的后代元素中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;继承&lt;/strong&gt;是发生在&lt;font color=red&gt;祖先后后代&lt;/font&gt;之间的&lt;/li&gt;
&lt;li&gt;继承的意义是为了方便我们开发，使用继承的方式可以将一些通用的样式统一设置到共同的祖先元素中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并不是所有的样式都可以被继承&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;例如，背景相关的&lt;br&gt;```html&lt;br&gt;&lt;style&gt;&lt;br&gt;p{&lt;br&gt;color:red;&lt;br&gt;}&lt;br&gt;div{&lt;br&gt;background-color:yellow;&lt;br&gt;}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;body&gt;&lt;br&gt;  &lt;p&gt;
    这是一个段落
    &lt;span&gt;我是p元素中的span&lt;/span&gt;
  &lt;/p&gt;&lt;br&gt;  &lt;span&gt;我是p元素外的span&lt;/span&gt;&lt;/p&gt;
  &lt;div&gt;
    我是一个div
    &lt;span&gt;我是div中的span&lt;/span&gt;
  &lt;/div&gt;
  &lt;span&gt;我是div外的span&lt;/span&gt;
&lt;/body&gt; 
```
---
### 选择器的权重(优先级)
- **样式的冲突**
  - &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#FFFF00&gt;当我们通过不同的选择器，选中相同的样式设置不同的值时，此时就发生样式的冲突&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
  - 例如：
  ```html 
  &lt;style&gt;
    div{
      color:blue;
    }
    .red{
      color:green;
    }
  &lt;/style&gt;
  &lt;body&gt;
    &lt;div id=&#34;box&#34; class=&#34;red&#34;&gt;这是一个div&lt;/div&gt;
  &lt;/body&gt;
  ```
- **选择器的优先级**&lt;font color=brown&gt;(从高到低)&lt;/font&gt;
  - **内联样式**  1,0,0,0
  - **id选择器**   0,1,0,0
  - **类和伪类选择器**  0,0,1,0
  - **元素选择器**   0,0,0,1
  - **通配选择器** 0,0,0,0
  - **继承的样式** 没有优先级
- 比较优先级时，需要对所有的选择器的优先级进行**相加**计算，**最后的样式优先级越高，则使用越高的样式**
- 选择器的累加不会超过其最大的数量级
- 如果优先级计算后相同，此时则**优先使用靠下的样式(即最新的样式覆盖旧的样式)**
- **可以通过在某一个样式后面加上&amp;nbsp;&amp;nbsp;!important&amp;nbsp;&amp;nbsp;，这样使样式达到&lt;font color=blue&gt;最高优先级&lt;/font&gt;**&lt;font color=brown&gt;（但是在开发中慎用）&lt;/font&gt;
--- 
### 像素、百分比、HSL值
- **&lt;font color=orange&gt;长度单位&lt;/font&gt;**
  - **像素：**
    - &lt;font color=brown&gt;屏幕，实际上是由一个个的小像素点组成
      - 例如，某屏幕参数1920*1080表示宽度有1920个像素，高度有1080个像素
    - &lt;font color=blue&gt;不同屏幕的像素是不同的，像素越小其屏幕的清晰度越高&lt;/font&gt;
    - 同样的200px在不同的屏幕下的显示效果也不同
  - **百分比：**
    - 也可以将属性设置为相应的其子元素的百分比
    - **设置百分比可以使子元素跟随父元素的改变而改变**
  - **em**
    - em是相当于元素的字体大小来计算
    - ** 1em=100%font-size**
  - **rem**
    - rem相对于根元素的字体大小计算
  - **HSL值**
    - **H 色相**&amp;nbsp; 一个彩虹环，范围0-360（即0-360度）
    - **S 饱和度**&amp;nbsp; 颜色的浓度,范围：0%-100%（必须加百分号） 
    - **L 亮度**&amp;nbsp; 屏幕亮度，范围：0%-100%（必须加百分号）
  ```html
  &lt;style&gt;
    .box1{
      width:300px;
      height:300px;
      background-color:green;
    }
    .box2{
      width:600px;
      height:600px;
      background-color:red;
    }
    .box3{
      font-size:30px;
      width:10em;
      height:30em;
      background-color:orange;
    }
  &lt;/style&gt;
  &lt;/body&gt;
    &lt;div class=&#34;box1&#34;&gt;
      &lt;div class=&#34;box2&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;box3&#34;&gt;&lt;/div&gt;
  &lt;/body&gt;
  ```
- **&lt;font color=orange&gt;颜色单位&lt;/font&gt;**
  - 在css中可以直接使用颜色的英文来设置，但是非常不方便&lt;/font&gt;
  - **RGB值**（自然光）
    - &lt;font color=#FF00FF&gt;RGB通过三种颜色的不同浓度来调配出不同的颜色
    - R=Red G=Green B=Blue
    - **每一种颜色的范围是0-255之间**
    - 语法：**RGB(红，绿，蓝)**
  - **RGBA**
    - 在RGB基础上增加透明度设置
    - 四个参数：R，G，B，透明度
    - 1表示完全不透明，0表示完全透明,.5表示半透明
  - **十六进制的RGB值**
    - **语法：#红色绿色蓝色**
    - 颜色浓度通00-ff
    - 如果两位两位重复可以简写
    - ##aabbcc——&gt;#abc
 &lt;/font&gt;
  ```html
  &lt;style&gt;
    .box{
      width:100px;
      height:100px;
      background-color:rgb(255,0,0);
      background-color:rgb(0,255,0);
      background-color:rgb(0,0,255);
      background-color:rgb(0,0,0);
      background-color:rgb(255,255,255);
      background-color:rgba(255,153,210,.5);
      background-color:#FFFF00;
      background-color:#abc;
      background-color:hsla(95,40%,50%);
    }
  &lt;/style&gt;
  &lt;body&gt;
  &lt;div class=&#34;box&#34;&gt;&lt;/div&gt;
  &lt;/body&gt; 
  ```
--- 
&lt;/font&gt;
## Layout布局
### 01文档流
- **文档流（normal flow）**
  - &lt;font color=purple&gt;网页是一个多层的结构，层层叠着
  - 通过css可以分别为每一层来设置样式&lt;/font&gt;
  - **&lt;font color=brown&gt;最底层就称为文档流，文档流是网页的基础&lt;/font&gt;**
  - &lt;font color=purple&gt;我们所创建的元素默认都是在文档流中进行排列的
  - 元素的主要状态
    - 在文档流
    - 不在文档流
  - 元素在文档流的特点
    - **块元素**
    - 在页面中独占一行
      - 默认宽度是父元素的全部
      - 默认高度是子元素高度
    - **行内元素**
      - 行内元素只占用自身大小
      - 从左向右排列，如果一行无法完全显示，则会换行继续排列
      - 行内元素的默认宽度和高度都是被内容撑开&lt;/font&gt;
      ```html
      &lt;style&gt;
      .box1{
        background-color:#FFFF00;
      }
      .box2{
        background-color:#FFEE00;
      }
      .span{
        width:200px;
        height:200px;
      }
      &lt;/style&gt;
      &lt;body&gt;
        &lt;div class=&#34;box1&#34;&gt;我是div1&lt;/div&gt;
        &lt;div class=&#34;box2&#34;&gt;我是div2&lt;/div&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;我是span&amp;lt;/span&amp;gt;

  &amp;lt;/body&amp;gt; 
  ```
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;02盒子模型（Box-Model）&#34;&gt;&lt;a href=&#34;#02盒子模型（Box-Model）&#34; class=&#34;headerlink&#34; title=&#34;02盒子模型（Box Model）&#34;&gt;&lt;/a&gt;02盒子模型（Box Model）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;font color=brown&gt;CSS把页面中的所有元素都设置为一个矩形的盒子&lt;/li&gt;
&lt;li&gt;将元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子摆放到不同的位置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;每个盒子都由几个部分组成&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内容区（content）&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;内容区的大小通过width和height两个属性确定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内边距（padding）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;边框（border）&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;边框属于盒子的边缘，边框里面属于盒子内部，出了边框都是盒子的外部，&lt;strong&gt;边框的大小会影响整个盒子的大小&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;要设置边框至少需要设置三个属性&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;边框的宽度&amp;nbsp;border-width&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;边框的颜色&amp;nbsp;border-color&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;边框的样式&amp;nbsp;border-style&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;外边距（margin）&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&#34;./image/boxmodel.png&#34; alt=&#34;boxmodel&#34;&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
.box{
  /*内容区设置*/
  width:200px;
  height:200px;
  background-color:#bfa;
  /*边框的设置*/
  border-width:10px;
  border-color:orange;
  border-style:solid;
}
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;盒子模型之边框&#34;&gt;&lt;a href=&#34;#盒子模型之边框&#34; class=&#34;headerlink&#34; title=&#34;盒子模型之边框&#34;&gt;&lt;/a&gt;盒子模型之边框&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;边框包括：&lt;ul&gt;
&lt;li&gt;边框宽度&lt;/li&gt;
&lt;li&gt;边框颜色&lt;/li&gt;
&lt;li&gt;边框样式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于border-width&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;存在默认值3px，即不设置边框宽度也会有3像素的边框&lt;/li&gt;
&lt;li&gt;属性值的情况：&lt;ul&gt;
&lt;li&gt;四个值： 上 右 下 左&lt;/li&gt;
&lt;li&gt;三个值： 上 左右 下&lt;/li&gt;
&lt;li&gt;两个值： 上下 左右&lt;/li&gt;
&lt;li&gt;一个值：上下左右&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不仅可以对边框的四个方向进行设置，还可以单独设置各个方向的边框宽度（其格式为：border-xxx-width）&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;单独设置上边宽&lt;/strong&gt; border-top-width&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单独设置右边宽&lt;/strong&gt; border-right-width&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单独设置下边宽&lt;/strong&gt; border-bottom-width&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单独设置左边宽&lt;/strong&gt; border-left-width&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于border-color&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;存在默认值black&lt;/li&gt;
&lt;li&gt;其设置规则和border-width相同&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;对于border-style&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;默认值为none无边框&lt;/li&gt;
&lt;li&gt;指定边框样式&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;solid&lt;/strong&gt; 表示实线&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dotted&lt;/strong&gt; 点状虚线&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dashed&lt;/strong&gt; 虚线&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;double&lt;/strong&gt; 双线&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;border的简写： 同时设置边框的所有属性，各个属性用空格隔开&lt;/strong&gt;&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
  .box{
    border:10px red solid;
    border-right:none;
  }
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;盒子模型之内边距&#34;&gt;&lt;a href=&#34;#盒子模型之内边距&#34; class=&#34;headerlink&#34; title=&#34;盒子模型之内边距&#34;&gt;&lt;/a&gt;盒子模型之内边距&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;内边距&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内容区和边框之间的距离&lt;ul&gt;
&lt;li&gt;四个方向的内边距&lt;ul&gt;
&lt;li&gt;padding-top&lt;/li&gt;
&lt;li&gt;padding-right&lt;/li&gt;
&lt;li&gt;padding-bottom&lt;/li&gt;
&lt;li&gt;padding-left&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;所以一个盒子的可见区包括内容区、边框、内边距&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
.box{
  width:200px;
  height:200px;
  background-color:#bfa;
  border:10px orange solid;

  padding:100px;
}
.inner{
  width:100%;
  height:100%;
  background-color:yellow;
}
&amp;lt;/style&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;
&amp;lt;div class=&amp;quot;inner&amp;quot;&amp;gt;&amp;lt;div&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;盒子模型之外边距&#34;&gt;&lt;a href=&#34;#盒子模型之外边距&#34; class=&#34;headerlink&#34; title=&#34;盒子模型之外边距&#34;&gt;&lt;/a&gt;盒子模型之外边距&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;外边距（margin）&lt;ul&gt;
&lt;li&gt;外边距不会影响盒子的可见区大小&lt;/li&gt;
&lt;li&gt;但是会影响盒子的位置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;四个方向设置外边距&lt;ul&gt;
&lt;li&gt;margin-top&lt;ul&gt;
&lt;li&gt;上外边距，设置一个正值，元素会向下移动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;margin-right&lt;/li&gt;
&lt;li&gt;margin-bottom&lt;ul&gt;
&lt;li&gt;下外边距，设置一个正值，其他元素会向下移动（没有其他像素则不会有效果产生）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;margin-left&lt;ul&gt;
&lt;li&gt;左外边距，设置一个正值，元素会向右移动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元素在页面中是按自左向右顺序排列的&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;因此默认情况下如果我们设置外边距的上边和左边，自身会进行移动&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;而设置外边距的右边和下边则会移动其他元素&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;margin的简写—-和padding一样&lt;br&gt;```html&lt;br&gt;&lt;style&gt;&lt;br&gt;.box{&lt;br&gt;  width:200px;&lt;br&gt;  height:200px;&lt;br&gt;  background-color:#bfa;&lt;br&gt;  border:10px orange solid;&lt;/p&gt;
&lt;p&gt;  padding:100px;&lt;br&gt;  margin-top:100px;&lt;br&gt;  margin-left:100px;&lt;br&gt;  margin-right:150px;&lt;br&gt;  margin-bottom:150px;&lt;br&gt;}&lt;/p&gt;
&lt;p&gt;.box2{&lt;br&gt;  width:220px;&lt;br&gt;  height:220px;&lt;br&gt;  background-color:yellow;&lt;br&gt;}&lt;br&gt;&amp;lt;/style&amp;gt;&lt;br&gt;&lt;body&gt;&lt;/p&gt;
&lt;div class=&#34;box&#34;&gt;

&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;br&gt;&lt;div class=&#34;box2&#34;&gt;&lt;/div&gt;&lt;br&gt;&amp;lt;/body&amp;gt;&lt;br&gt;```&lt;/p&gt;
&lt;h3 id=&#34;盒子模型之水平方向布局&#34;&gt;&lt;a href=&#34;#盒子模型之水平方向布局&#34; class=&#34;headerlink&#34; title=&#34;盒子模型之水平方向布局&#34;&gt;&lt;/a&gt;盒子模型之水平方向布局&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;水平方向布局&lt;ul&gt;
&lt;li&gt;元素在其父元素中水平方向的位置由以下几个属性&lt;strong&gt;共同决定&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;margin-left&lt;/li&gt;
&lt;li&gt;border-left&lt;/li&gt;
&lt;li&gt;padding-left&lt;/li&gt;
&lt;li&gt;width&lt;/li&gt;
&lt;li&gt;padding-right&lt;/li&gt;
&lt;li&gt;border-right&lt;/li&gt;
&lt;li&gt;margin-right&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一个元素在其父元素中，水平布局必须满足以下等式&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;margin-left + border-left + padding-left + width + padding-right + border-right + margin-right = 其父元素内容区的width值（必须满足）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;以上的情况&lt;strong&gt;必须满足&lt;/strong&gt;，如果等式不成立，则称为过渡约束，等式自动进行调整&lt;ul&gt;
&lt;li&gt;调整方式：&lt;ul&gt;
&lt;li&gt;如果这七个值中没有&lt;strong&gt;auto&lt;/strong&gt;的情况，则浏览器会自动调整&lt;strong&gt;margin-right&lt;/strong&gt;的值以使等式成立&lt;/li&gt;
&lt;li&gt;可设置auto的值有：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;width&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;margin-right&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;margin-left&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如果某个值为auto，则会自动调整设置auto的那个值以令等式成立&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果将一个宽度和一个外边距设置为auto，则宽度会调整到最大，外边距会自动设置为0&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果三个值都设置auto，则外边距两个都是0，宽度最大化&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如果两个外边距设置为auto，则宽度固定，两个外边距的值相同&lt;/strong&gt;(使一个子元素在其父元素中水平居中的方法)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;盒子模型之垂直方向布局&#34;&gt;&lt;a href=&#34;#盒子模型之垂直方向布局&#34; class=&#34;headerlink&#34; title=&#34;盒子模型之垂直方向布局&#34;&gt;&lt;/a&gt;盒子模型之垂直方向布局&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;默认情况下父元素的高度别内容撑开&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子元素是在父元素的内容区中排列的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果子元素的大小超过了父元素，则子元素会从父元素中溢出&lt;/li&gt;
&lt;li&gt;使用&amp;nbsp;overflow&amp;nbsp;属性来设置父元素如何处理溢出的子元素&lt;ul&gt;
&lt;li&gt;取值：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;visible&lt;/strong&gt; 默认值，子元素会从父元素中溢出，在父元素外部的位置显示&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hidden&lt;/strong&gt; 溢出内容将会被剪裁不会显示&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;scroll&lt;/strong&gt; 生成两个滚动条，通过滚动条来查看完整的内容&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auto&lt;/strong&gt; 根据需求生成滚动条&lt;br&gt;```html&lt;br&gt;&lt;style&gt;&lt;br&gt;.outer{&lt;br&gt;background-color:#bfa;&lt;br&gt;height:600px;&lt;br&gt;}&lt;br&gt;.inner{&lt;br&gt;width:100px;&lt;br&gt;background-color:yellow;&lt;br&gt;height:100px;&lt;br&gt;margin-bottom:100px;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;}&lt;br&gt;.box1{&lt;br&gt;  width:200px;&lt;br&gt;  height:200px;&lt;br&gt;  background-color:#bfa;&lt;/p&gt;
&lt;p&gt;  overflow:auto;&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;.box2{&lt;br&gt;  width:100px;&lt;br&gt;  height:400px;&lt;br&gt;  background-color:orange;&lt;br&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;body&gt;
  &lt;div class=&#34;outer&#34;&gt;
    &lt;div class=&#34;inner1&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;inner2&#34;&gt;&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;box1&#34;&gt;&lt;/div&gt;
  &lt;div class=&#34;box2&#34;&gt;&lt;/div&gt;
&lt;/body&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
### 垂直外边距的重叠
  - 相邻的垂直方向的外边距会发生重叠现象
  - **对于兄弟元素**
    - 兄弟元素间的相邻垂直外边距会取**两者之间的较大值**（两者都是正值的前提下）
    - 如果相邻外边距**一正一负**，则取**两者之和**
    - 如果相邻外边距**都是负数**，则取**两者中绝对值较大的**
  - **对于父子元素**
    - 父子元素间相邻的**上外边距**，子元素的属性值会传递给父元素
    - 父子元素会影响页面的布局
  ```html
  &amp;lt;style&amp;gt;
    .box1{
      width:200px;
      height:200px;
      background-color:#bfa;
      margin-bottom:100px;
    }
    .box2{
      width:100px;
      height:100px;
      background-color:red;
      margin-top:100px;

    }
    .box3{
      width:200px;
      height:200px;
      background-color:#bfa;
    }
    .box4{
      width:100px;
      height:100px;
      background-color:red;

    }
  &amp;lt;/style&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;div class=&amp;quot;box1&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&amp;quot;box2&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;div class=&amp;quot;box3&amp;quot;&amp;gt;
      &amp;lt;div class=&amp;quot;box4&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;行内元素的盒模型&#34;&gt;&lt;a href=&#34;#行内元素的盒模型&#34; class=&#34;headerlink&#34; title=&#34;行内元素的盒模型&#34;&gt;&lt;/a&gt;行内元素的盒模型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;行内元素的盒模型&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;行内元素不支持设置宽度和高度&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;可以设置padding、border、margin，但这三个属性&lt;strong&gt;均对垂直方向的布局没有影响&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;display&lt;/strong&gt; 设置元素显示的类型&lt;ul&gt;
&lt;li&gt;可选值：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;inline&lt;/strong&gt; 将元素设置为&lt;strong&gt;行内元素&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;block&lt;/strong&gt; 将元素设置为&lt;strong&gt;块元素&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inline-block&lt;/strong&gt; 将元素设置为&lt;strong&gt;行内块元素&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;行内块：既可以设置宽度和高度又不会独占一行（开发尽量避免使用）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;table&lt;/strong&gt; 将元素设置成&lt;strong&gt;表格&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;none&lt;/strong&gt; 元素不会在页面显示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;visibility&lt;/strong&gt; 用来设置元素的显示状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;可选值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;visible&lt;/strong&gt; 默认值，元素在页面中&lt;strong&gt;正常显示&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hidden&lt;/strong&gt; 元素在页面中隐藏，但依然占用页面位置&amp;lt;/font&amp;gt;&lt;br&gt;```html&lt;br&gt;&lt;style&gt;&lt;br&gt;.s1{&lt;br&gt;background-color:yellow;&lt;br&gt;margin:100px;&lt;br&gt;}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;.box1{&lt;br&gt;  width:200px;&lt;br&gt;  height:200px;&lt;br&gt;  background-color:#bfa;&lt;br&gt;}&lt;/p&gt;
&lt;p&gt;a{&lt;br&gt;  display:none;&lt;br&gt;  visibility:visible;&lt;br&gt;  width:100px;&lt;br&gt;  height:100px;&lt;br&gt;  background-color:orange&lt;br&gt;}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;/style&amp;gt;&lt;br&gt;&lt;body&gt;&lt;br&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;amF2YXNjcmlwdDo7&#34;&gt;超链接&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;amF2YXNjcmlwdDo7&#34;&gt;超链接&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;s1&#34;&gt;我是span&amp;lt;/sapn&amp;gt;&lt;br&gt;&lt;span class=&#34;s1&#34;&gt;我是span&amp;lt;/sapn&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;box&#34;&gt;&lt;/div&gt;&lt;br&gt;&amp;lt;/body&amp;gt;&lt;br&gt;```&lt;/p&gt;
&lt;h3 id=&#34;浏览器的默认样式&#34;&gt;&lt;a href=&#34;#浏览器的默认样式&#34; class=&#34;headerlink&#34; title=&#34;浏览器的默认样式&#34;&gt;&lt;/a&gt;浏览器的默认样式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;默认样式&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;默认样式的存在会影响页面的布局，通常情况下编写网页时必须要去除浏览器的默认样式&lt;/li&gt;
&lt;li&gt;方法1 ：&lt;ul&gt;
&lt;li&gt;快速去除&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
*{
margin:0;
padding:0;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;方法2、3：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重置样式表&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;reset.css 直接去除了浏览器的默认样式&lt;/li&gt;
&lt;li&gt;normalize.css 对默认样式进行统一&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;盒子的尺寸&#34;&gt;&lt;a href=&#34;#盒子的尺寸&#34; class=&#34;headerlink&#34; title=&#34;盒子的尺寸&#34;&gt;&lt;/a&gt;盒子的尺寸&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;默认情况下，盒子可见区的大小由内容区、内边距和边框共同决定&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;box-sizing&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;用来设置盒子尺寸的计算方式（设置width和height的作用）&lt;ul&gt;
&lt;li&gt;可选值：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;content-box&lt;/strong&gt; 默认值，宽度和高度用来设置内容区的大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;border-box&lt;/strong&gt; 宽度和高度整个盒子可见框的大小&lt;/li&gt;
&lt;li&gt;width=内容区宽度+内边距宽度+边框宽度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;轮廓与圆角&#34;&gt;&lt;a href=&#34;#轮廓与圆角&#34; class=&#34;headerlink&#34; title=&#34;轮廓与圆角&#34;&gt;&lt;/a&gt;轮廓与圆角&lt;/h3&gt;&lt;h4 id=&#34;轮廓&#34;&gt;&lt;a href=&#34;#轮廓&#34; class=&#34;headerlink&#34; title=&#34;轮廓&#34;&gt;&lt;/a&gt;轮廓&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;outline&lt;/strong&gt; 用来设置元素的轮廓线，用法与border相同&lt;ul&gt;
&lt;li&gt;轮廓不会影响可见区的大小&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;box-shadow&lt;/strong&gt; 用来设置元素的阴影效果，阴影不会影响页面布局&lt;ul&gt;
&lt;li&gt;box-shadow属性&lt;ul&gt;
&lt;li&gt;第一个值：水平偏移量，设置阴影的水平位置，正值向右，负值向左&lt;/li&gt;
&lt;li&gt;第二个值：垂直偏移量，设置阴影的垂直位置，正值向下，负值向上&lt;/li&gt;
&lt;li&gt;第三个值：阴影的模糊半径（越大越模糊）&lt;/li&gt;
&lt;li&gt;第四个值：阴影颜色&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
.div{
  width:100px;
  height:100px;
  background-color:orange;
  box-shadow:10px 10px 10px red;
}
&amp;lt;/style&amp;gt; 
&amp;lt;body&amp;gt;
&amp;lt;div class=&amp;quot;box&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;圆角&#34;&gt;&lt;a href=&#34;#圆角&#34; class=&#34;headerlink&#34; title=&#34;圆角&#34;&gt;&lt;/a&gt;圆角&lt;/h4&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;border-radius&lt;/strong&gt; 用来设置圆角&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;四个方向&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;border-top-left-radius 左上角&lt;/li&gt;
&lt;li&gt;border-top-right-radius 右上角&lt;/li&gt;
&lt;li&gt;border-bottom-left-radius 左下角&lt;/li&gt;
&lt;li&gt;border-bottom-right-radius  右下角&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;属性值&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;一个值的情况：水平垂直方向的半径均相同&lt;/li&gt;
&lt;li&gt;两个值的情况：第一个为水平半径，第二个为垂直半径&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;浮动概述&#34;&gt;&lt;a href=&#34;#浮动概述&#34; class=&#34;headerlink&#34; title=&#34;浮动概述&#34;&gt;&lt;/a&gt;浮动概述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CSS的浮动（float），会使元素向左或向右移动，其周围的元素也会重新排列&lt;/li&gt;
&lt;li&gt;Float常用于图像，在布局中也一样有用&lt;/li&gt;
&lt;li&gt;通过浮动可以使一个元素向其父元素的左侧或右侧移动&lt;ul&gt;
&lt;li&gt;使用float属性来设置元素的浮动&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;可选值&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;none&lt;/strong&gt; 默认值，元素不浮动&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;left&lt;/strong&gt; 元素向左浮动&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;right&lt;/strong&gt; 元素向右浮动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;ul&gt;
&lt;li&gt;元素设置浮动后，水平布局的等式就&lt;strong&gt;不需要强制成立&lt;/strong&gt;（即width=内容区宽度+内边距宽度+边框宽度不需要成立）&lt;/li&gt;
&lt;li&gt;元素下面的还在文档流的元素会自动向上移动&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;浮动的特点&#34;&gt;&lt;a href=&#34;#浮动的特点&#34; class=&#34;headerlink&#34; title=&#34;浮动的特点&#34;&gt;&lt;/a&gt;浮动的特点&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;浮动元素会完全脱离文档流，不再占据文档流中的位置&lt;/li&gt;
&lt;li&gt;设置浮动以后元素会向父元素的左侧或右侧移动&lt;/li&gt;
&lt;li&gt;浮动元素默认不会从父元素中移出&lt;/li&gt;
&lt;li&gt;浮动元素向左或向右移动时，不会超过它前边的其他浮动元素&lt;/li&gt;
&lt;li&gt;如果浮动元素的上边是一个没有设置浮动的圆水泥，则浮动元素无法上移&lt;/li&gt;
&lt;li&gt;浮动元素不会超过它上边的浮动兄弟元素，最多就是和它一样的高度&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;font color=red&gt;总结&lt;/font&gt;&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;通过浮动可以制作一些水平方向的布局&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;浮动元素的其他特点&#34;&gt;&lt;a href=&#34;#浮动元素的其他特点&#34; class=&#34;headerlink&#34; title=&#34;浮动元素的其他特点&#34;&gt;&lt;/a&gt;浮动元素的其他特点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;浮动不会盖住文字，文字会自动环绕在浮动元素的周围，所以我们可以利用浮动来&lt;strong&gt;设置文字环绕图片的效果&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;元素设置浮动之后，脱离文档流，并且其元素特性会发生变化&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;脱离文档流的元素特点&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;块元素&lt;ol&gt;
&lt;li&gt;块元素不再独占页面的一行&lt;/li&gt;
&lt;li&gt;脱离文档流后，块元素的宽度和高度默认被内容撑开&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;行内元素&lt;ul&gt;
&lt;li&gt;脱离文档流会变成块元素，特点与块元素一致&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font color=greed&gt;因此，脱离文档流的元素不再区分块元素和行内元素，统一变成块元素&lt;/font&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;高度塌陷问题&#34;&gt;&lt;a href=&#34;#高度塌陷问题&#34; class=&#34;headerlink&#34; title=&#34;高度塌陷问题&#34;&gt;&lt;/a&gt;高度塌陷问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;图片例子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原本效果：&lt;br&gt;&lt;img data-src=&#34;image/高度塌陷01.png&#34; alt=&#34;高度塌陷01&#34;&gt;&lt;/li&gt;
&lt;li&gt;高度塌陷效果：&lt;br&gt;&lt;img data-src=&#34;./image/高度塌陷02.png&#34; alt=&#34;高度塌陷02&#34;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;font color=purple&gt;高度塌陷的问题
- 在浮动布局中，父元素的高度默认是被子元素撑开的
  - 当子元素浮动后，&lt;font color=red&gt;其余完全脱离文档流&lt;/font&gt;，子元素从文档流中脱离
  - 将会无法撑起父元素的高度，导致父元素的高度丢失
  - 父元素高度丢失后，其下边的元素会自动上移，导致页面的布局混乱
  - 所以高度塌陷问题是浮动布局中较为常见的问题，必须要处理！&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;解决方法：&lt;ul&gt;
&lt;li&gt;BFC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;BFC&#34;&gt;&lt;a href=&#34;#BFC&#34; class=&#34;headerlink&#34; title=&#34;BFC&#34;&gt;&lt;/a&gt;BFC&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;何为BFC？&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BFC（Block Formating Context）块级格式化环境&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;BFC是CSS中一个隐含的属性，可以为一个元素开启BFC，开启BFC后该元素&lt;strong&gt;变成一个独立的布局区域&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;元素开启BFC的特点：&lt;/strong&gt;&lt;ol&gt;
&lt;li&gt;开启BFC的元素不会被浮动元素所覆盖&lt;/li&gt;
&lt;li&gt;开启BFC的元素子元素和父元素的外边距（margin）不会重叠&lt;/li&gt;
&lt;li&gt;开启BFC的元素可以包含浮动的子元素&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;开启方法&lt;ul&gt;
&lt;li&gt;设置元素的浮动（不推荐）&lt;/li&gt;
&lt;li&gt;将元素设置为行内块元素（block-inline）（不推荐）&lt;/li&gt;
&lt;li&gt;将元素的overflow设置为一个非visible的值 &lt;ul&gt;
&lt;li&gt;overflow设置auto或hidden最佳&lt;h3 id=&#34;clear属性与clearfix类&#34;&gt;&lt;a href=&#34;#clear属性与clearfix类&#34; class=&#34;headerlink&#34; title=&#34;clear属性与clearfix类&#34;&gt;&lt;/a&gt;clear属性与clearfix类&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;情景：&lt;ul&gt;
&lt;li&gt;如果我们不希望某个元素因为其他元素浮动的影响而改变位置，可以通过clear属性来&lt;strong&gt;清除浮动元素&lt;/strong&gt;对当前元素产生的影响&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;clear&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;font color=blue&gt;作用：&lt;ul&gt;
&lt;li&gt;清除浮动元素对当前元素所产生的影响&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可选值：&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;left&lt;/strong&gt;&amp;nbsp;清除左侧浮动元素对当前元素的影响  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;right&lt;/strong&gt;&amp;nbsp;清除右侧浮动元素对当前元素的影响&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;原理&lt;ul&gt;
&lt;li&gt;设置清除浮动以后，浏览器会自动为元素添加一个上外边距，以使其位置不受其他元素的影响&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;clearfix&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;这个样式可以同时解决高度塌陷和外边距重叠的问题&lt;pre&gt;&lt;code class=&#34;lang-html&#34;&gt;&amp;lt;style&amp;gt;
.clearfix::before,
.clearfix::after{
  content:&amp;#39;&amp;#39;;
  display:table;
  clear:both;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="html" />
        <updated>2021-03-25T02:42:18.000Z</updated>
    </entry>
</feed>
