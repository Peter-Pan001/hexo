<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>理 想 净 土 • Posts by &#34;云计算&#34; category</title>
        <link>https://peter-pan001.github.io/my-blog</link>
        <description>不必匆忙，不必火花四溅，不必成为别人，只需成为自己</description>
        <language>zh-CN</language>
        <pubDate>Wed, 26 Jan 2022 12:28:00 +0800</pubDate>
        <lastBuildDate>Wed, 26 Jan 2022 12:28:00 +0800</lastBuildDate>
        <category>Java</category>
        <category>linux</category>
        <category>Linux</category>
        <category>network</category>
        <category>MySQL</category>
        <category>云计算</category>
        <category>git、github</category>
        <category>前端</category>
        <category>JavaScript</category>
        <category>html</category>
        <category>css</category>
        <category>算法与数据结构</category>
        <category>数据分析</category>
        <category>软考网络工程师</category>
        <item>
            <guid isPermalink="true">https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E7%BD%91%E7%BB%9C%E8%99%9A%E6%8B%9F%E5%8C%96/</guid>
            <title>网络虚拟化</title>
            <link>https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E7%BD%91%E7%BB%9C%E8%99%9A%E6%8B%9F%E5%8C%96/</link>
            <category>云计算</category>
            <pubDate>Wed, 26 Jan 2022 12:28:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;Linux-Bridge&#34;&gt;&lt;a href=&#34;#Linux-Bridge&#34; class=&#34;headerlink&#34; title=&#34;Linux Bridge&#34;&gt;&lt;/a&gt;Linux Bridge&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Linux Bridge（网桥）是工作于二层的虚拟网络设备，功能类似于物理的交换机。&lt;/li&gt;
&lt;li&gt;Bridge可以绑定其他Linux网络设备作为从设备，并将这些设备虚拟化为端口，当一个从设备被绑定到Bridge上时，就相当于真实网络中的交换机端口插入了一个连接有终端的网线，br0会根据MAC地址与端口的映射关系进行转发。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qTS0g.png&#34; alt=&#34;lbridge&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;OVS-开源虚拟以太网交换机&#34;&gt;&lt;a href=&#34;#OVS-开源虚拟以太网交换机&#34; class=&#34;headerlink&#34; title=&#34;OVS 开源虚拟以太网交换机&#34;&gt;&lt;/a&gt;OVS 开源虚拟以太网交换机&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;OVS能够支持多种标准的管理接口和协议，还可以支持跨多个物理服务器的分布式环境。OVS提供了对OpenFlow协议的支持，并且能够与众多开源的虚拟化平台相整合。主要有两个作用：传递虚拟机VM之间的流量，以及实现VM和外界网络的通信。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qTenU.png&#34; alt=&#34;ovs&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OVS提供了对OpenFlow协议的支持，并且能够与众多开源的虚拟化平台相整合。&lt;/li&gt;
&lt;li&gt;OpenFlow交换机将原来完全由交换机/路由器控制的报文转发过程转化为由OpenFlow交换机（OpenFlow Switch）和控制服务器（Controller）来共同完成，从而实现了数据转发和路由控制的分离。控制器可以通过事先规定好的接口操作来控制OpenFlow交换机中的流表，从而达到控制数据转发的目的。&lt;/li&gt;
&lt;li&gt;OpenFlow网络由OpenFlow交换机、FlowVisor和Controller三部分组成。OpenFlow交换机进行数据层的转发；FlowVisor对网络进行虚拟化；Controller对网络进行集中控制，实现控制层的功能。&lt;br&gt;OpenFlow交换机由流表、安全通道和OpenFlow协议三部分组成。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;DVS-分布式虚拟交换机&#34;&gt;&lt;a href=&#34;#DVS-分布式虚拟交换机&#34; class=&#34;headerlink&#34; title=&#34;DVS 分布式虚拟交换机&#34;&gt;&lt;/a&gt;DVS 分布式虚拟交换机&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;每台主机都连接到分布式交换机中。分布式交换机的一端是与虚拟机相连的虚拟端口，另一端是与虚拟机所在主机上的物理以太网适配器相连的上行链路。通过它可以连接主机和虚拟机，实现系统网络互通。另外，分布式交换机在所有关联主机之间作为单个虚拟交换机使用。此功能可使虚拟机在跨主机进行迁移时确保其网络配置保持一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qTKAJ.png&#34; alt=&#34;DVS&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;EVS-弹性虚拟交换&#34;&gt;&lt;a href=&#34;#EVS-弹性虚拟交换&#34; class=&#34;headerlink&#34; title=&#34;EVS 弹性虚拟交换&#34;&gt;&lt;/a&gt;EVS 弹性虚拟交换&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Elastic Virtual Switch（EVS）是基于OVS转发技术，提升了其IO性能的一种弹性化虚拟交换。仍然符合openflow协议标准。&lt;/li&gt;
&lt;li&gt;其中IO性能提升使用了Intel DPDK技术，通过用户态进程接管网卡数据收发，采用“IO独占核”技术，即每个端口分配一个核专门用于数据收发，这种轮询式的处理方式比中断式的处理更高效，因而IO性能方面有显著提升。&lt;/li&gt;
&lt;li&gt;EVS关键技术：&lt;ul&gt;
&lt;li&gt;物理网卡访问：DPDK高速数据通道&lt;/li&gt;
&lt;li&gt;报文处理：使用大页内存&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;交换业务处理&lt;ul&gt;
&lt;li&gt;轮询转发，减少调度开销&lt;/li&gt;
&lt;li&gt;多核（线程）并行处理&lt;/li&gt;
&lt;li&gt;Openflow流表转发优化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;前后端：vhost-user技术&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qTMN9.png&#34; alt=&#34;EVS&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在Host上运行用户态EVS，借助于DPDK的网卡管理API和大页内存，来提升物理网卡收发包性能和处理能力。 &lt;/li&gt;
&lt;li&gt;基于vhost-user技术，vhost在用户态直接和EVS交互，通过地址偏移获取DPDK大页地址，性能提升30%-40%。&lt;/li&gt;
&lt;li&gt;利用批处理和轮询机制提升报文处理能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;华为分布式交换方案&#34;&gt;&lt;a href=&#34;#华为分布式交换方案&#34; class=&#34;headerlink&#34; title=&#34;华为分布式交换方案&#34;&gt;&lt;/a&gt;华为分布式交换方案&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qT31x.png&#34; alt=&#34;fbsjhfa&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;集中管理：统一Portal和集中的管理，简化用户的管理和配置；&lt;/li&gt;
&lt;li&gt;开源Open vSwitch：集成开源Open vSwitch，充分利用和集成了开源社区虚拟交换的能力；&lt;/li&gt;
&lt;li&gt;提供丰富虚拟交换的二层特性，包括交换、QoS、安全隔离等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;FusionCompute分布式交换机&#34;&gt;&lt;a href=&#34;#FusionCompute分布式交换机&#34; class=&#34;headerlink&#34; title=&#34;FusionCompute分布式交换机&#34;&gt;&lt;/a&gt;FusionCompute分布式交换机&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qTNHe.png&#34; alt=&#34;fbjhj&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分布式交换机模型基本特征：&lt;ul&gt;
&lt;li&gt;虚拟化管理员可以配置多个分布式交换机， ==每个分布式交换机可以覆盖集群中的多个CNA节点==&lt;/li&gt;
&lt;li&gt;每个分布式交换机具有多个分布式的虚拟端口VSP，每个VSP具有各自的属性(速率)，为了管理方便采用Port Group组管理相同属性的一组端口，相同端口组的VLAN相同；&lt;/li&gt;
&lt;li&gt;虚拟化管理员或业务系统（例如VDI/IDC）,可选择管理/存储/业务使用的不同物理接口；每个分布式交换机可以配置一个UpLink端口或者一个Uplink端口聚合组，用于VM对外的通信。 ==Uplink端口聚合组可以包含多个物理端口，端口聚合组可以配置负载均衡策略==&lt;/li&gt;
&lt;li&gt;每个VM可以具有多个vNIC接口，vNIC可以和交换机的VSP一一对接；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;虚拟交换模型&#34;&gt;&lt;a href=&#34;#虚拟交换模型&#34; class=&#34;headerlink&#34; title=&#34;虚拟交换模型&#34;&gt;&lt;/a&gt;虚拟交换模型&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qTdNd.png&#34; alt=&#34;xnjhmx&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;虚拟化管理员可通过定义端口组 属性（安全/QoS）简化对虚拟机端口属性的设置；设置端口组属性，不影响虚拟机正常工作；&lt;/li&gt;
&lt;li&gt;端口组：端口组是网络属性相同的一组端口的属性集合。管理员可以通过配置端口组属性（带宽QOS、2层安全属性、VLAN等）简化对虚拟机端口属性的设置。设置端口组属性，不影响虚拟机正常工作；&lt;/li&gt;
&lt;li&gt;上行链路：分布式交换机关联的服务器物理网口；管理员可以查询上行链路的名称、速率、模式、状态等信息；&lt;/li&gt;
&lt;li&gt;上行链路聚合：分布式交换机关联的服务器绑定网口，绑定网口可以包含多个物理网口，这些物理网口可以配置主备或负载均衡策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;华为虚拟交换模式&#34;&gt;&lt;a href=&#34;#华为虚拟交换模式&#34; class=&#34;headerlink&#34; title=&#34;华为虚拟交换模式&#34;&gt;&lt;/a&gt;华为虚拟交换模式&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qTD3t.png&#34; alt=&#34;xnjhms&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通交换：普通模式下，虚拟机有前后端两个虚拟网卡设备，其中，前端网卡连接在虚拟交换机的虚端口上。虚拟机网络数据包 ==通过环形缓冲区和事件通道在前后端网卡之间传输== ，并最终通过后端网卡连接的虚拟交换机实现转发&lt;/li&gt;
&lt;li&gt;SR-IOV：简单说来，支持SR-IOV的物理网卡可以虚拟出多个网卡以供虚拟机使用，==对于虚拟机来说就像是有一块单独的物理网卡一样== ，相比软件虚拟化提升了网络I/O的性能，相对于硬件直通(PCI Passthrough)又减少了硬件网卡数量上的需求&lt;/li&gt;
&lt;li&gt;用户态交换：通过使用DPDK（Data Plane Development Kit，数据平面开发套件，DPDK是一系列库和驱动的集合）技术，用来在x86平台进行快速的数据包处理。它通过环境抽象层旁路内核协议栈、轮询模式的报文无中断收发、优化内存/缓冲区/队列管理、基于网卡多队列和流识别的负载均衡等多项技术， ==实现了在x86处理器架构下的高性能报文转发能力，提高虚拟机网络性能==&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网络安全策略&#34;&gt;&lt;a href=&#34;#网络安全策略&#34; class=&#34;headerlink&#34; title=&#34;网络安全策略&#34;&gt;&lt;/a&gt;网络安全策略&lt;/h2&gt;&lt;h3 id=&#34;二层网络安全策略&#34;&gt;&lt;a href=&#34;#二层网络安全策略&#34; class=&#34;headerlink&#34; title=&#34;二层网络安全策略&#34;&gt;&lt;/a&gt;二层网络安全策略&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;防止IP地址和MAC仿冒（IP和MAC绑定）：防止虚拟机用户通过修改虚拟网卡的IP、MAC地址发起IP、MAC仿冒攻击，增强用户虚拟机的网络安全。通过生成IP-MAC的绑定关系，基于IP源侧防护(IP Source Guard)与动态ARP检测（DAI）对非绑定关系的报文进行过滤。&lt;br&gt;防止DHCP Server仿冒(DHCP Server隔离)：禁止用户虚拟机启动DHCP Server服务，防止用户无意识或恶意启动DHCP Server服务，影响正常的虚拟机IP地址分配过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;广播报文抑制&#34;&gt;&lt;a href=&#34;#广播报文抑制&#34; class=&#34;headerlink&#34; title=&#34;广播报文抑制&#34;&gt;&lt;/a&gt;广播报文抑制&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;虚拟交换机提供虚拟机虚端口发送方向的广播报文抑制开关，以及抑制阈值设置功能。可以通过开启虚拟机网卡所在端口组的广播包抑制开关设置阈值，减少过量广播报文对二层网络带宽的消耗。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;安全组&#34;&gt;&lt;a href=&#34;#安全组&#34; class=&#34;headerlink&#34; title=&#34;安全组&#34;&gt;&lt;/a&gt;安全组&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;用户根据虚拟机安全需求创建安全组，每个安全组可以设定一组访问规则。当虚拟机加入安全组后，即受到该访问规则组的保护。用户通过在创建虚拟机时选定要加入的安全组来对自身的虚拟机进行安全隔离和访问控制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Trunk口&#34;&gt;&lt;a href=&#34;#Trunk口&#34; class=&#34;headerlink&#34; title=&#34;Trunk口&#34;&gt;&lt;/a&gt;Trunk口&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;虚拟机网卡通过虚端口接入虚拟交换机进行网络数据包的收发。&lt;br&gt;虚拟交换机虚端口支持配置为Trunk类型，并允许设置Trunk的VLAN ID范围，之后虚端口便具备了同时收发携带不同VLAN标签的网络数据包的功能，从而满足了虚拟网卡支持Trunk类型端口的需求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qTsjf.png&#34; alt=&#34;trunkk&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通类型的虚端口只能属于一个VLAN，中继类型的虚端口可以允许多个VLAN接收和发送报文。普通虚拟机选择普通类型的端口，虚拟机的网卡启用VLAN设备的情况下选择中继类型的端口，否则虚拟机的网络可能不通。&lt;/li&gt;
&lt;li&gt;端口组配置为中继的方式后，可以在linux虚拟机内创建多个VLAN设备，这些VLAN设备通过1个虚拟网卡即可以收发携带不同VLAN标签的网络数据包。使虚拟机不用创建多个虚拟网卡，即可收发携带不同VLAN标签的网络数据包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网口绑定&#34;&gt;&lt;a href=&#34;#网口绑定&#34; class=&#34;headerlink&#34; title=&#34;网口绑定&#34;&gt;&lt;/a&gt;网口绑定&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/26/7qT6u8.png&#34; alt=&#34;wkbd&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于普通网卡，绑定模式可以选择以下几种：&lt;ul&gt;
&lt;li&gt;主备&lt;/li&gt;
&lt;li&gt;轮询&lt;/li&gt;
&lt;li&gt;基于源目的IP和端口负荷分担&lt;/li&gt;
&lt;li&gt;基于源目的MAC的负荷分担&lt;/li&gt;
&lt;li&gt;基于源目的MAC的LACP&lt;/li&gt;
&lt;li&gt;基于源目的IP的LACP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对于支持DPDK驱动的物理网卡，绑定模式可以选择以下几种：&lt;ul&gt;
&lt;li&gt;DPDK驱动的主备模式&lt;/li&gt;
&lt;li&gt;DPDK驱动的基于源目的MAC的LACP模式&lt;/li&gt;
&lt;li&gt;DPDK驱动的基于源目的IP和端口的LACP模式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;Question&#34;&gt;&lt;a href=&#34;#Question&#34; class=&#34;headerlink&#34; title=&#34;Question&#34;&gt;&lt;/a&gt;Question&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在FusionCompute分布式交换机里，虚拟机与外部网络通信依靠的是什么端口？[]{.gap} 。 {.quiz}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mgnt {.options}&lt;/li&gt;
&lt;li&gt;存储接口 {.options}&lt;/li&gt;
&lt;li&gt;上行链路 {.correct}&lt;/li&gt;
&lt;li&gt;端口组 {.options}&lt;br&gt;{.options}     &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;FusionCompute分布式交换机支持哪几种类型？（多选）[]{.gap} 。 {.quiz}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;普通模式 {.correct}&lt;/li&gt;
&lt;li&gt;SR-IOV直通模式 {.correct}&lt;/li&gt;
&lt;li&gt;用户态交换模式 {.correct}&lt;/li&gt;
&lt;li&gt;标准模式 {.options}&lt;br&gt;{.options}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E5%AD%98%E5%82%A8%E8%99%9A%E6%8B%9F%E5%8C%96/</guid>
            <title>存储虚拟化</title>
            <link>https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E5%AD%98%E5%82%A8%E8%99%9A%E6%8B%9F%E5%8C%96/</link>
            <category>云计算</category>
            <pubDate>Tue, 25 Jan 2022 23:13:39 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;存储虚拟化架构&#34;&gt;&lt;a href=&#34;#存储虚拟化架构&#34; class=&#34;headerlink&#34; title=&#34;存储虚拟化架构&#34;&gt;&lt;/a&gt;存储虚拟化架构&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7byHUS.png&#34; alt=&#34;cunchujiagou&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SAN :存储区域网络（Storage Area Network，简称SAN）采用网状通道（Fibre Channel ，简称FC，区别与Fiber Channel光纤通道）技术，通过FC交换机连接存储阵列和服务器主机，建立专用于数据存储的区域网络。适用对网络性能没有太大要求、但安全要求高的场景&lt;br&gt;NAS：NAS（Network Attached Storage：网络附属存储）按字面简单说就是连接在网络上，具备资料存储功能的装置，因此也称为“网络存储器”。它是一种专用数据存储服务器。它以数据为中心，将存储设备与服务器彻底分离，集中管理数据，从而释放带宽、提高性能、降低总拥有成本、保护投资。主打高性能，但数据安全较为欠缺&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b6FC4.png&#34; alt=&#34;cunchujiagou02&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;FusionSphere存储虚拟化平台主要由文件系统、磁盘驱动和磁盘工具组成。SAN设备和本地磁盘等块设备连接到服务器上后，经过设备驱动层和通用块层后，对主机呈现一个磁盘设备。&lt;/li&gt;
&lt;li&gt;文件系统建立在主机能够访问的存储设备上，创建文件系统的过程就是主机对存储设备执行格式化，在存储设备上写入文件系统的元数据和inode信息，建立文件到裸设备块的映射，并负责裸设备块的管理，包括空间分配和释放。 ==对于虚拟化来说，文件系统屏蔽了块层的操作，提供了文件级的抽象操作。虚拟机磁盘就是放在文件系统中的文件。==&lt;/li&gt;
&lt;li&gt;虚拟机磁盘在使用时，需要由磁盘驱动挂载给虚拟机，并通过QEMU管理起来，用户虚拟机的所有读写IO都会由前端驱动截获，转发给QEMU进程，并转换为用户态驱动的读写操作，最终写入磁盘文件中。&lt;/li&gt;
&lt;li&gt;虚拟机磁盘中包含了属性信息和数据区域，磁盘工具提供了一系列对虚拟机磁盘的操作，可以解析磁盘文件的文件头，读取或修改磁盘的属性信息，创建磁盘的数据区等操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;VIMS虚拟集群存储文件系统&#34;&gt;&lt;a href=&#34;#VIMS虚拟集群存储文件系统&#34; class=&#34;headerlink&#34; title=&#34;VIMS虚拟集群存储文件系统&#34;&gt;&lt;/a&gt;VIMS虚拟集群存储文件系统&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;VIMS是一种高性能的集群文件系统，使虚拟化技术的应用超出了单个存储系统的限制，可让多个虚拟机共同访问一个整合的集群式存储池，从而显著提高了资源利用率。VIMS 是跨越多个存储服务器实现虚拟化的基础，它可启用存储热迁移、DRS（Storage Dynamic Resource Scheduler） 和High Availability 等各种服务。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b6EvR.png&#34; alt=&#34;vircoutfile&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;VIMS分布式锁&#34;&gt;&lt;a href=&#34;#VIMS分布式锁&#34; class=&#34;headerlink&#34; title=&#34;VIMS分布式锁&#34;&gt;&lt;/a&gt;VIMS分布式锁&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一个VIMS卷同时被多个CNA节点挂载，因此每个CNA节点都可以访问VIMS卷上的文件。为保证多节点读写同一文件的数据一致性，VIMS需要实现分布式文件锁。VIMS的DLM（Distribute lock manager）模块负责实现分布式文件锁，它提供集群概念上的锁服务，调用者通过DLM保证集群间的同步要求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;VIMS心跳&#34;&gt;&lt;a href=&#34;#VIMS心跳&#34; class=&#34;headerlink&#34; title=&#34;VIMS心跳&#34;&gt;&lt;/a&gt;VIMS心跳&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;VIMS存在两种心跳，磁盘心跳用于检测主机是否可以正常读写共享存储，网络心跳用于检测主机间网络通信是否正常。作为集群文件系统，挂载了VIMS卷的CNA节点从来都不是单独的个体，作为集群节点成员之一，通过网络心跳确保与其它节点进行正常的网络通信。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;FC磁盘技术&#34;&gt;&lt;a href=&#34;#FC磁盘技术&#34; class=&#34;headerlink&#34; title=&#34;FC磁盘技术&#34;&gt;&lt;/a&gt;FC磁盘技术&lt;/h2&gt;&lt;h3 id=&#34;普通磁盘&#34;&gt;&lt;a href=&#34;#普通磁盘&#34; class=&#34;headerlink&#34; title=&#34;普通磁盘&#34;&gt;&lt;/a&gt;普通磁盘&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;普通磁盘创建时大小与虚拟磁盘大小相同，并将文件所有位置填0，占用空间较大，置备时间较长&lt;br&gt;该磁盘创建所需时间会比创建其他类型的磁盘长,能够提供最好的性能体验和数据安全性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;即写多少，分配多少&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b6ZK1.png&#34; alt=&#34;ptcp&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;普通延时置零磁盘&#34;&gt;&lt;a href=&#34;#普通延时置零磁盘&#34; class=&#34;headerlink&#34; title=&#34;普通延时置零磁盘&#34;&gt;&lt;/a&gt;普通延时置零磁盘&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;普通延迟置零卷创建时大小与虚拟磁盘大小相同，但不会进行填0操作，占用空间较大，置备时间较普通卷短&lt;br&gt;普通延迟置零磁盘创建很快，创建时进行全空间分配，但未进行全置零动作，性能较普通磁盘有所下降。适用于对发放速度要求高的场景&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;比普通磁盘多了置零动作&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b6uVK.png&#34; alt=&#34;ptyszlcp&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;精简磁盘&#34;&gt;&lt;a href=&#34;#精简磁盘&#34; class=&#34;headerlink&#34; title=&#34;精简磁盘&#34;&gt;&lt;/a&gt;精简磁盘&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;精简磁盘创建时大小为0，精简磁盘创建时含少量元数据信息，大小一般为几十K，创建时间均非常短。随着用户写入数据，精简磁盘的大小与实际占用空间将逐步增加&lt;br&gt;该磁盘用于FusionSphere系统中的精简磁盘，可以提高存储设备的利用率。精简磁盘使用动态磁盘技术，可以节省存储空间。该磁盘在创建时不进行空间分配，而是在用户IO写入磁盘文件时才进行空间动态分配，性能较普通磁盘有所下降。适用于用户对存储需求不明确，或是规划的容量比实际使用的容量多的场景&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;按需分配，要多少拿多少&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b6M5D.png&#34; alt=&#34;jjcp&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;差分磁盘&#34;&gt;&lt;a href=&#34;#差分磁盘&#34; class=&#34;headerlink&#34; title=&#34;差分磁盘&#34;&gt;&lt;/a&gt;差分磁盘&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;差分磁盘必须基于一个已有的父磁盘来创建，它只记录相对于父磁盘的差异数据，包括数据的增改，差分磁盘不能脱离父磁盘而存在，如果父磁盘进行了修改，则差分磁盘的数据将不再可用。&lt;br&gt;对差分磁盘进行读操作，会首先读取差分磁盘中的数据区域，如果不存在，则表示该数据区域未被修改，则通过文件头的索引找到父磁盘，在对该区域进行读取。对差分磁盘进行写操作时，则直接写在差分磁盘上。&lt;br&gt;差分磁盘的结构和动态磁盘完全一致，文件头中会记录父磁盘的路径，数据区只记录和父磁盘差异数据，大小也会随着数据的写入而自动增长。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b632d.png&#34; alt=&#34;cfcp&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;快照&#34;&gt;&lt;a href=&#34;#快照&#34; class=&#34;headerlink&#34; title=&#34;快照&#34;&gt;&lt;/a&gt;快照&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;虚拟机可以将当前状态保存在快照文件中，包括磁盘内容、内存和寄存器数据。用户可以通过恢复快照多次回到这一状态，虚拟机用户在执行一些重大、高危操作前，例如系统补丁，升级，破坏性测试前执行快照，可以用于故障时的快速还原。&lt;br&gt;FusionCompute支持普通快照、一致性快照以及内存快照。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;创建快照&#34;&gt;&lt;a href=&#34;#创建快照&#34; class=&#34;headerlink&#34; title=&#34;创建快照&#34;&gt;&lt;/a&gt;创建快照&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b68xA.png&#34; alt=&#34;cjkz&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;回滚快照&#34;&gt;&lt;a href=&#34;#回滚快照&#34; class=&#34;headerlink&#34; title=&#34;回滚快照&#34;&gt;&lt;/a&gt;回滚快照&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b6JKI.png&#34; alt=&#34;hgkz&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;删除快照&#34;&gt;&lt;a href=&#34;#删除快照&#34; class=&#34;headerlink&#34; title=&#34;删除快照&#34;&gt;&lt;/a&gt;删除快照&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b6UVf.png&#34; alt=&#34;sckz&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;链接克隆&#34;&gt;&lt;a href=&#34;#链接克隆&#34; class=&#34;headerlink&#34; title=&#34;链接克隆&#34;&gt;&lt;/a&gt;链接克隆&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;链接克隆虚拟机可以基于同一个虚拟机模板，快速发放多个类似的虚拟机。通过对虚拟机模板的系统卷创建多个差分磁盘，将每个差分磁盘挂载给独立的虚拟机。应用于需要大量发放拥有相同或类似数据的虚拟机，且对性能要求不高。&lt;br&gt;在链接克隆场景下，将若干链接克隆虚拟机的共同模板中的热点数据放在主机内存中，达到快速读取的目的，能够极大提升虚拟机的启动和运行速度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;实现原理&#34;&gt;&lt;a href=&#34;#实现原理&#34; class=&#34;headerlink&#34; title=&#34;实现原理&#34;&gt;&lt;/a&gt;实现原理&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b60Pg.png&#34; alt=&#34;sxyl&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;存储热迁移&#34;&gt;&lt;a href=&#34;#存储热迁移&#34; class=&#34;headerlink&#34; title=&#34;存储热迁移&#34;&gt;&lt;/a&gt;存储热迁移&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;FusionSphere提供了虚拟机磁盘的冷迁移和热迁移，冷迁移是在虚拟机关机时候，将其磁盘文件从一个存储移动到另一个存储，热迁移可以在不中断业务的前提下，将虚拟机磁盘从一个存储迁移至另一个存储。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;热迁移首先使用写时重定向，将虚拟机数据写入目的存储的一个差异磁盘，这样，原磁盘文件就变成只读的。&lt;/li&gt;
&lt;li&gt;将源卷的所有的数据块依次读取出来并合并到目标端的差异磁盘中，等数据合并完成后，目的端的差分磁盘就拥有虚拟磁盘的所有最新数据。&lt;/li&gt;
&lt;li&gt;去除目的端快照对源卷的依赖，将差分磁盘修改为动态磁盘，这样，目的端磁盘文件可以独立运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b6rxs.png&#34; alt=&#34;ccrqy&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;存储资源裸设备映射-RDM&#34;&gt;&lt;a href=&#34;#存储资源裸设备映射-RDM&#34; class=&#34;headerlink&#34; title=&#34;存储资源裸设备映射 (RDM)&#34;&gt;&lt;/a&gt;存储资源裸设备映射 (RDM)&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Raw Device Mapping绕过hvpervisor，物理裸设备映射(RDM)能够将虚拟机下发的SCSI命令直接透传，使得虚拟机中的业务能够直接操作物理SCSI设备，避免由于虚拟化层的模拟导致功能丢失。&lt;br&gt;不支持链接克隆、存储瘦分配、磁盘在线/离线扩容 、存储增量快照 、iCache 、存储热迁移、存储QoS、磁盘备份、虚拟机转为模板等&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;技术特点&lt;ul&gt;
&lt;li&gt;虚拟机直接通过SCSI命令操作裸存储设备&lt;/li&gt;
&lt;li&gt;兼容FC光纤存储和IP SAN存储&lt;/li&gt;
&lt;li&gt;适用于需要高性能存储的应用，比如Oracle RAC&lt;h2 id=&#34;存储扩容原理&#34;&gt;&lt;a href=&#34;#存储扩容原理&#34; class=&#34;headerlink&#34; title=&#34;存储扩容原理&#34;&gt;&lt;/a&gt;存储扩容原理&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;当需要扩容时，先在主节点上将新增的存储空间以线性映射的方式追加至虚拟块设备末尾，完成虚拟块设备的扩容后，再将新增的存储空间分成数段逐渐增加至文件系统 (更新文件系统中的元数据)，主节点完成数据存储的扩容。由于虚拟块设备的信息都是保存在节点内存中，则当其它节点发现数据存储空间有变化时，则需要更新虚拟块设备信息，完成扩容虚拟块设备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7b66rq.png&#34; alt=&#34;cckr&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/FusionSphere%E6%9E%B6%E6%9E%84/</guid>
            <title>FusionSphere架构</title>
            <link>https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/FusionSphere%E6%9E%B6%E6%9E%84/</link>
            <category>云计算</category>
            <pubDate>Tue, 25 Jan 2022 23:08:15 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;FusionSphere虚拟化套件&#34;&gt;&lt;a href=&#34;#FusionSphere虚拟化套件&#34; class=&#34;headerlink&#34; title=&#34;FusionSphere虚拟化套件&#34;&gt;&lt;/a&gt;FusionSphere虚拟化套件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;前面讲到，虚拟化是云计算的基础，但虚拟化不等于云计算，所有的云软件都要借助虚拟化才能实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;关于FusionSphere：&lt;ul&gt;
&lt;li&gt;华为FusionSphere虚拟化套件是业界领先的虚拟化解决方案，能够帮助客户带来如下的价值，从而大幅提升数据中心基础设施的效率。&lt;/li&gt;
&lt;li&gt;定位特点：简化管理，优质性能&lt;/li&gt;
&lt;li&gt;管理方面，支持多站点统一管理；支持跨地域容灾，保障业务连续性；支持物理机、第三方平台迁移&lt;/li&gt;
&lt;li&gt;性能方面，包含大规格虚拟机；采用KVM引擎；支持多款显卡直通和虚拟化（GPU增强）；支持OVS+DPDK网络调优&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;FusionSphere虚拟化组件构成&#34;&gt;&lt;a href=&#34;#FusionSphere虚拟化组件构成&#34; class=&#34;headerlink&#34; title=&#34;FusionSphere虚拟化组件构成&#34;&gt;&lt;/a&gt;FusionSphere虚拟化组件构成&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7bs2yq.png&#34; alt=&#34;fspherecombat&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;FusionSphere服务器虚拟化架构&#34;&gt;&lt;a href=&#34;#FusionSphere服务器虚拟化架构&#34; class=&#34;headerlink&#34; title=&#34;FusionSphere服务器虚拟化架构&#34;&gt;&lt;/a&gt;FusionSphere服务器虚拟化架构&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7bsoY4.png&#34; alt=&#34;fsphereserve&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;服务器虚拟化产品（FusionCompute）、虚拟化管理软件（FusionManager）、备份软件（eBackup ）和容灾软件（UltraVR）组成。主要实现硬件资源的虚拟化，以及对虚拟资源集中管理，提供基础备份、容灾，轻量级运营，云基础服务，性能管理等能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;FusionCompute：提供对x86物理服务器，SAN设备的虚拟化能力，并提供软件定义网络基础能力。&lt;/li&gt;
&lt;li&gt;FusionManager：使用FusionCompute能力，并集成防火墙，负载均衡器等的自动化管理能力，提供企业级和运营级的虚拟数据中心管理方案。&lt;/li&gt;
&lt;li&gt;UltraVR： 提供跨站点容灾能力。&lt;/li&gt;
&lt;li&gt;eBackup： 提供虚拟机的备份能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;组件说明：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;table-container&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;组件&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Fusion Compute&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;必选组件 &amp;lt;/br&amp;gt; Fusion Compute是 ==云操作系统软件== ，主要负责硬件资源的虚拟化，以及对虚拟资源、业务资源、用户资源的集中管理。通过统一的接囗，对这些虚拟资源进行集中调度和管理，从而降低业务的运行成本，保证系统的安全性和可靠性，协助运营商和企业构筑安全、绿色、节能的云数据中心能力。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Fusion Manager&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;可选组件 &amp;lt;/br&amp;gt; Fusion Manager主要 ==对云计算的软件和硬件进行全面的监控和管理== ，实现同构，异构VMware虚拟化多资源池管理，软硬件统一告警监控，并向内部运维管理人员提供管理门户&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;eBackup&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;可选组件 &amp;lt;/br&amp;gt; eBackup是虚拟化备份软件，配合Fusion Compute快照功能和CBT(Changed Block Tracking)备份功能实现Fusion Sphere的虚拟机数据备份方案。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;UltraVR&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;可选组件 &amp;lt;/br&amp;gt; UltraVR是容灾业务管理软件，利用底层SAN存储系统提供的异步远程复制特性，提供虚拟机关腱数据的数据保护和容灾恢复。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;h2 id=&#34;FusionSphere应用场景&#34;&gt;&lt;a href=&#34;#FusionSphere应用场景&#34; class=&#34;headerlink&#34; title=&#34;FusionSphere应用场景&#34;&gt;&lt;/a&gt;FusionSphere应用场景&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;单虚拟化场景&lt;ul&gt;
&lt;li&gt;只采用FusionCompute作为统一的操作维护管理平台对整个系统进行操作与维护的应用场景&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多虚拟化场景&lt;ul&gt;
&lt;li&gt;多套虚拟化环境需要进行统一管理&lt;ul&gt;
&lt;li&gt;统一管理和维护：支持同时接入FusionCompute和VMware虚拟化环境，对多虚拟化环境的资源和业务进行统一的管理和维护。&lt;/li&gt;
&lt;li&gt;统一监控告警：支持对多个虚拟化环境、多种物理设备的告警进行统一接入、监控和管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;私有云场景&lt;ul&gt;
&lt;li&gt;多租户共享VPC场景&lt;/li&gt;
&lt;li&gt;多租户私有VPC场景&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;FusionSphere在整个华为云计算体系的定位&#34;&gt;&lt;a href=&#34;#FusionSphere在整个华为云计算体系的定位&#34; class=&#34;headerlink&#34; title=&#34;FusionSphere在整个华为云计算体系的定位&#34;&gt;&lt;/a&gt;FusionSphere在整个华为云计算体系的定位&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7byM1s.png&#34; alt=&#34;fspherestand&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;FusionCompute架构&#34;&gt;&lt;a href=&#34;#FusionCompute架构&#34; class=&#34;headerlink&#34; title=&#34;FusionCompute架构&#34;&gt;&lt;/a&gt;FusionCompute架构&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7by8BV.png&#34; alt=&#34;fcomputeking&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/Fusion%20Compute%E5%AE%89%E8%A3%85/</guid>
            <title>Fusion Compute安装</title>
            <link>https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/Fusion%20Compute%E5%AE%89%E8%A3%85/</link>
            <category>云计算</category>
            <pubDate>Thu, 20 Jan 2022 18:42:15 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前期准备&#34;&gt;&lt;a href=&#34;#前期准备&#34; class=&#34;headerlink&#34; title=&#34;前期准备&#34;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;PC机&lt;ol&gt;
&lt;li&gt;关闭防火墙&lt;/li&gt;
&lt;li&gt;特定版本的浏览器。&lt;/li&gt;
&lt;li&gt;Java7的届件安装，需要调整Java安全级别为最低。&lt;/li&gt;
&lt;li&gt;实现PC与物理服务器的通信&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;服务器&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;获取管理网卡IP地址。&lt;/li&gt;
&lt;li&gt;配置RAlD，建议前面两张网卡去配置RAID1，剩余的磁盘建议针对每个磁盘做RAID0。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;网络规划：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CNA：192.168.22.130&lt;/li&gt;
&lt;li&gt;VRM：192.168.1.107&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E8%AE%A1%E7%AE%97%E8%99%9A%E6%8B%9F%E5%8C%96/</guid>
            <title>计算虚拟化简介</title>
            <link>https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E8%AE%A1%E7%AE%97%E8%99%9A%E6%8B%9F%E5%8C%96/</link>
            <category>云计算</category>
            <pubDate>Wed, 19 Jan 2022 19:55:37 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;何为虚拟化？&#34;&gt;&lt;a href=&#34;#何为虚拟化？&#34; class=&#34;headerlink&#34; title=&#34;何为虚拟化？&#34;&gt;&lt;/a&gt;何为虚拟化？&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;虚拟化技术不等于云计算，云计算的实现不一定需要虚拟化，但虚拟化在IaaS中起着非常重要的作用（裸金属服务器）&lt;/li&gt;
&lt;li&gt;裸金属服务器，又不仅限于物理服务器，它是物理服务器和云服务的结合。&lt;/li&gt;
&lt;li&gt;“裸金属”，意味它不包括相应的操作系统和软件，这个是客户后期自选配置的。大部分云服务提供商的裸金属服务器产品，不提供本地硬盘（可以支持），主要提供CPU和内存。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;虚拟化是云计算基础，针对云计算能够提供不仅仅是IaaS服务PaaS和SaaS的大部分服务都是基于IaaS服务建立的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;虚拟机如何创建？&#34;&gt;&lt;a href=&#34;#虚拟机如何创建？&#34; class=&#34;headerlink&#34; title=&#34;虚拟机如何创建？&#34;&gt;&lt;/a&gt;虚拟机如何创建？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;虚拟机通过物理CPU的虚拟化技术，分配给虚拟机以资源，通过操作系统控制，形成虚拟机&lt;/li&gt;
&lt;li&gt;或者通过虚拟化软件在实机的基础上建立&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;为什么要使用虚拟化&#34;&gt;&lt;a href=&#34;#为什么要使用虚拟化&#34; class=&#34;headerlink&#34; title=&#34;为什么要使用虚拟化&#34;&gt;&lt;/a&gt;为什么要使用虚拟化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用虚拟化技术可以提高资源的利用率，实现软硬件的解耦&lt;/li&gt;
&lt;li&gt;虚拟化的本质是将原来的的物理设备逻辑化&lt;/li&gt;
&lt;li&gt;未使用虚拟化的软硬件是高耦合的，同一时刻只能运行一个OS，且硬件与OS比例1:1，并且硬件资源是独立的&lt;/li&gt;
&lt;li&gt;使用虚拟化，可以实现软硬件解耦，同一时刻可以运行多个OS，且硬件与OS比例1:n，并且硬件资源是共享的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见的虚拟化&#34;&gt;&lt;a href=&#34;#常见的虚拟化&#34; class=&#34;headerlink&#34; title=&#34;常见的虚拟化&#34;&gt;&lt;/a&gt;常见的虚拟化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;开源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KVM、XEN&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;闭源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hyper-V、VMware、Fusion Sphere&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;相关概念&#34;&gt;&lt;a href=&#34;#相关概念&#34; class=&#34;headerlink&#34; title=&#34;相关概念&#34;&gt;&lt;/a&gt;相关概念&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Guest OS ：虚拟机OS&lt;/li&gt;
&lt;li&gt;Guest Machine ：虚拟处理的虚拟机&lt;/li&gt;
&lt;li&gt;Hypervisor ：虚拟化监控机&lt;/li&gt;
&lt;li&gt;Host OS ：运行在物理机上的OS&lt;/li&gt;
&lt;li&gt;Host Machine ： 物理机&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;虚拟化架构&#34;&gt;&lt;a href=&#34;#虚拟化架构&#34; class=&#34;headerlink&#34; title=&#34;虚拟化架构&#34;&gt;&lt;/a&gt;虚拟化架构&lt;/h2&gt;&lt;div class=&#34;table-container&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;寄居虚拟化&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;裸金属虚拟化&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;操作系统虚拟化&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;混合虚拟化&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;优点&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;简单、易于实现&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;虚拟机不依赖操作系统&amp;lt;/br&amp;gt;支持多种操作系统，多种应用&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;简单、易于实现&amp;lt;/br&amp;gt;管理开销非常低&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;相对于寄居虚拟化价格，没有冗余，性能高&amp;lt;/br&amp;gt;可支持多种操作系统&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;缺点&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;安装和运行应用程序依赖于主机操作系统对设备的支持&amp;lt;/br&amp;gt;管理开销较大，性能损耗大&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;虚拟层内核开发难度大&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;隔离性差，多容器共享同一操作系统&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;需底层硬件支持虚拟化扩展功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;厂家&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;VMware Work&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;VMware ESXServer&amp;lt;/br&amp;gt;Citrix XenServer&amp;lt;/br&amp;gt;Fusion Sphere&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Virtuozzo&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Redhat KVM&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/19/7swXCV.png&#34; alt=&#34;virtual frame&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;根据hypervisor的位置不同&#34;&gt;&lt;a href=&#34;#根据hypervisor的位置不同&#34; class=&#34;headerlink&#34; title=&#34;根据hypervisor的位置不同&#34;&gt;&lt;/a&gt;根据hypervisor的位置不同&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/19/7swj3T.png&#34; alt=&#34;classicforvir&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1型虚拟化&lt;/strong&gt; 。Hypervisor直接安装在物理机上，多个虚拟机在Hypervisor运行。Hypervisor实现方式一般是一个特殊定制的Linux系统。Xen和VMWare的ESXi都属于这个类型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2型虚拟化&lt;/strong&gt; 。物理机上首先安装常规的操作系统，比如Redhat、Ubuntu和Windows.Hypervisor作为OS上的一个程序模块运行，并对管理虚拟机进行管理。KVM、VirtualBox和VMWareWorkstation都属于这个类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;理论上讲：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1型虚拟化一般对硬件虚拟化功能进行了特别优化，性能上比2型要高。&lt;br&gt;KVM注重性能，XEN注重安全性，针对应用的访问路径开销，KVM比XEN要短&lt;/li&gt;
&lt;li&gt;2型虚拟化因为基于普通的操作系统，会比较灵活，比如支持虚拟机嵌套。嵌套意味着可以在KVM虚拟机中再运行KVM&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;Hypervisor作用&#34;&gt;&lt;a href=&#34;#Hypervisor作用&#34; class=&#34;headerlink&#34; title=&#34;Hypervisor作用&#34;&gt;&lt;/a&gt;Hypervisor作用&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;识别、捕获和响应虚拟机所发出的CPU特权指令或保护指令&lt;/li&gt;
&lt;li&gt;负责处理虚拟机队列和调度，并将物理硬件的处理结果返回给相应的虚拟机。&lt;/li&gt;
&lt;li&gt;VMM承担管理资源的重任，其还需向上提供拟机VM用于运行Guest OS，因此VMM还负责虚拟环境的创建和管理。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;CPU虚拟化&#34;&gt;&lt;a href=&#34;#CPU虚拟化&#34; class=&#34;headerlink&#34; title=&#34;CPU虚拟化&#34;&gt;&lt;/a&gt;CPU虚拟化&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/19/7swvgU.png&#34; alt=&#34;cpuvir&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ring0的权限可以直接操作硬件，一般只有操作系统和驱动会允许拥有此权限；Ring3的权限最低，所有的程序都可以拥有此权限，一些危险指令只能通过OS调用执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;指令类别：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;特权指令：操作与管理关键系统资源指令，在Ring0级别上运行&lt;/li&gt;
&lt;li&gt;普通指令：CPU普通权限级别即可运行，即Ring3&lt;/li&gt;
&lt;li&gt;敏感指令：修改虚拟机运行模式或宿主机状态的指令，即将Guest OS在Ring0运行的指令夺权，交由VMM执行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;可以说，Ring0就是我们常说的内核态，Ring3就是我们常说的用户态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;计算虚拟化原理&#34;&gt;&lt;a href=&#34;#计算虚拟化原理&#34; class=&#34;headerlink&#34; title=&#34;计算虚拟化原理&#34;&gt;&lt;/a&gt;计算虚拟化原理&lt;/h2&gt;&lt;h3 id=&#34;CPU虚拟化原理&#34;&gt;&lt;a href=&#34;#CPU虚拟化原理&#34; class=&#34;headerlink&#34; title=&#34;CPU虚拟化原理&#34;&gt;&lt;/a&gt;CPU虚拟化原理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对于原生操作系统与CPU的管理关系：&lt;ul&gt;
&lt;li&gt;CPU资源永远就绪&lt;/li&gt;
&lt;li&gt;OS对CPU具有最高权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;但引入虚拟化后，出现：&lt;br&gt;多个虚拟机之间共享CPU资源&lt;br&gt;部分指令只能通过hypervisor的权限使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;内存虚拟化原理&#34;&gt;&lt;a href=&#34;#内存虚拟化原理&#34; class=&#34;headerlink&#34; title=&#34;内存虚拟化原理&#34;&gt;&lt;/a&gt;内存虚拟化原理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对于原生操作系统与CPU的管理关系：&lt;ul&gt;
&lt;li&gt;内存都从物理地址0开始&lt;/li&gt;
&lt;li&gt;内存都连续&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;但引入虚拟化后，出现：&lt;br&gt;物理地址0只有一个，无法同时满足所有客户机从0开始的需求&lt;br&gt;分配连续物理地址会使内存使用率降低，灵活性降低&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/19/7swxvF.png&#34; alt=&#34;castvir&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过Hypervisor把操作系统的内存分为虚拟机侧和物理机侧，从虚拟机侧看，每个独立的虚拟机的内存物理地址都是从0开始的，但从物理机侧看，所有虚拟机的物理内存地址整合在一起却只有一个0物理地址，只是Hypervisor在其中把每个虚拟机所要的物理地址0虚拟化了，让各个虚拟机的内存物理地址逻辑上是从0开始的，但物理上却并非如此&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;I-O虚拟化原理&#34;&gt;&lt;a href=&#34;#I-O虚拟化原理&#34; class=&#34;headerlink&#34; title=&#34;I/O虚拟化原理&#34;&gt;&lt;/a&gt;I/O虚拟化原理&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;现实中的外设资源是有限的，为满足客户机操作系统的需求，VMM必须通过I/O虚拟化的方式来复用有限的外设资源&lt;/li&gt;
&lt;li&gt;解决方法：全虚拟化、半虚拟化、硬件虚拟化&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;XEN-与-KVM&#34;&gt;&lt;a href=&#34;#XEN-与-KVM&#34; class=&#34;headerlink&#34; title=&#34;XEN 与 KVM&#34;&gt;&lt;/a&gt;XEN 与 KVM&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;XEN架构：本身去充当VMM，只能够区实现CPU虚拟化、内存的虚拟化&lt;/li&gt;
&lt;li&gt;Domain0：基于XEN架构下最先启动的一台特权虚拟机，能够直接去管理和使用底层硬件的IO设备，并且去划分虚拟IO硬件设备给虚拟机来去使用，同时能够去管理普通的虚拟机，配合前后端驱动模型去实现IO半虚拟化&lt;/li&gt;
&lt;li&gt;DomainU：普通的虚拟机&lt;/li&gt;
&lt;li&gt;KVM：利用宿主机操作系统的内核去充当Hypervisor，能够实现CPU和内存虚拟化，需要配合QEMU模块实现IO虚拟化；在KVM中称之为QEMU-KVM，提高使用IOCTL（操作系统的函数调用），在/dev/kvm接口配置VM的IP，实现IO虚拟化&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;table-container&#34;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;XEN&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;KVM&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;虚拟化类型&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;I型虚拟化&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;II型虚拟化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;实现方式&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;提高Domain0实现IO虚拟化&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;借助QEMU实现IO虚拟化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;逻辑架构区别&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;包括XEN VMM,&amp;lt;/br&amp;gt;Domain0&amp;lt;/br&amp;gt;DomainU&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;包括KVM内核模块&amp;lt;/br&amp;gt;QEMU&amp;lt;/br&amp;gt;Libvrit,API管理工具&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Libvirt是用于管理虚拟化平台的开源的API，后台程序和管理工具。它可以用于管理KVM、Xen、VMware ESX，QEMU和其他虚拟化技术。这些API在云计算的解决方案中广泛使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/19/7s09b9.png&#34; alt=&#34;xenkvm&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;什么是KVM&#34;&gt;&lt;a href=&#34;#什么是KVM&#34; class=&#34;headerlink&#34; title=&#34;什么是KVM&#34;&gt;&lt;/a&gt;什么是KVM&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;基于内核的虚拟机 Kernel-based Virtual Machine（KVM）是一种内建于 Linux® 中的开源虚拟化技术。具体而言，KVM 可帮助您将 Linux 转变为虚拟机监控程序，使主机计算机能够运行多个隔离的虚拟环境，即虚拟客户机或虚拟机（VM）。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/19/7s0PER.png&#34; alt=&#34;kvmtixi&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;KVM运行模式&#34;&gt;&lt;a href=&#34;#KVM运行模式&#34; class=&#34;headerlink&#34; title=&#34;KVM运行模式&#34;&gt;&lt;/a&gt;KVM运行模式&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Guest Mode&lt;/strong&gt; ：指虚拟机，包括CPU、内存磁盘等虚拟设备，置于一种受限的CPU模式下运行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User Mode&lt;/strong&gt; ：指用户空间。主要是QEMU，用来为虚拟机模拟执行I/O类的操作请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kernel Mode&lt;/strong&gt; ：指内核空间，可以真正的操作硬件&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;KVM-I-O默认状态&#34;&gt;&lt;a href=&#34;#KVM-I-O默认状态&#34; class=&#34;headerlink&#34; title=&#34;KVM I/O默认状态&#34;&gt;&lt;/a&gt;KVM I/O默认状态&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;默认状态下技术全虚拟化&lt;br&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/19/7s0F4x.png&#34; alt=&#34;kvmio&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1、虚拟机中的磁盘设备发起一次I/O操作请求，&lt;br&gt;2、KVM模块中的I/O Trap Code（I/O捕获程序）将这个I/O操作请求捕获至刂进行相应的处理，然后将处理后的请求放到I/O共享页中；&lt;br&gt;3、KVM模块会涌知QEMU,告诉它有新的I/O操作请求放到了共享页中；&lt;br&gt;4、QEMU收到通知后，到共享页中获取该I/O操作请求的具体信息；&lt;br&gt;5、QEMU对该清求进行模拟，同时根据I/O操作请求的信息调用运行在内核态的设备驱动，去进行真正的I/O操作；&lt;br&gt;6、通过设备驱动去对硬件 ==执行真正的I/O操作== ；&lt;br&gt;7、QEMU将执行后的一返回到共享页中，同时通知KVM模块已完成了此次的I/O操作；&lt;br&gt;8、I/O捕获程序从共享页中将返回的结果读取出来；&lt;br&gt;9、I/O捕获程序将操作结果返回给虚拟机；&lt;br&gt;10、虚拟机的将结果返回给发起操作的应用程序。&lt;/p&gt;
&lt;h3 id=&#34;KVM-I-O操作——Virtio&#34;&gt;&lt;a href=&#34;#KVM-I-O操作——Virtio&#34; class=&#34;headerlink&#34; title=&#34;KVM I/O操作——Virtio&#34;&gt;&lt;/a&gt;KVM I/O操作——Virtio&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;引入Virtio，整个I/O操作流程就变成半虚拟化了&lt;br&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/19/7s0E8K.png&#34; alt=&#34;virtio&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1、第一步也是由虚拟机发起I/O操作请求；&lt;br&gt;2、第二步的时候和使用默认模型不一样，这个I/O操作请求不会经过I/O捕获程序，而是直接以前后端的形式放到环形缓冲区，同时KVM模块涌知后端驱动；&lt;br&gt;3、QEMU到环形缓冲区获取到操作请求的具体信息；&lt;br&gt;4、后端驱动直接调用真实的物理设备驱动进行具体的I/O操作;&lt;br&gt;5、由真实的设备驱动完成此次操作;&lt;br&gt;6、QEMU将完成结果返回到环形缓冲区，并且由KVM模块通知前端驱动；&lt;br&gt;7、前端驱动从环形缓冲区获取到此次I/O操作的结果；&lt;br&gt;8、前端驱动将结果返回给具体发起该操作的应用程序。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Virtio也存在着一些缺点，有些比较老的或者不常用的设备，无法使用，只能使用QEMU方式进行模拟。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;整个Virtio包括前端驱动、vring和后端驱动组成。&lt;/li&gt;
&lt;li&gt;引入Virtio，可以跳过KVM Module中介，直接把IO指令请求交由QEMU处理，并且通过vring获取到已处理的I/O指令，传回到操作系统中。&lt;/li&gt;
&lt;li&gt;提升I/O访问的效率，降低I/O延迟。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;功能特性&#34;&gt;&lt;a href=&#34;#功能特性&#34; class=&#34;headerlink&#34; title=&#34;功能特性&#34;&gt;&lt;/a&gt;功能特性&lt;/h2&gt;&lt;h3 id=&#34;兼容行业特殊操作系统&#34;&gt;&lt;a href=&#34;#兼容行业特殊操作系统&#34; class=&#34;headerlink&#34; title=&#34;兼容行业特殊操作系统&#34;&gt;&lt;/a&gt;兼容行业特殊操作系统&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Fusion Compute 兼容主流Windows和Linux操作系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;管理架构灵活&#34;&gt;&lt;a href=&#34;#管理架构灵活&#34; class=&#34;headerlink&#34; title=&#34;管理架构灵活&#34;&gt;&lt;/a&gt;管理架构灵活&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;各个逻辑集群支持128个物理机，最大支持3000个虚拟机，采用VRM主备结构，保证系统的可用性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;支持GPU虚拟化、GPU直通&#34;&gt;&lt;a href=&#34;#支持GPU虚拟化、GPU直通&#34; class=&#34;headerlink&#34; title=&#34;支持GPU虚拟化、GPU直通&#34;&gt;&lt;/a&gt;支持GPU虚拟化、GPU直通&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;物理GPU在硬件支持虚拟机通过绑定GPU直接访问物理GPU的部分硬件资源&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;在线调整CPU和内存&#34;&gt;&lt;a href=&#34;#在线调整CPU和内存&#34; class=&#34;headerlink&#34; title=&#34;在线调整CPU和内存&#34;&gt;&lt;/a&gt;在线调整CPU和内存&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;vRAM ，vCPU 不仅支持离线添加/删除，支持在线添加&lt;br&gt;平台支持在虚拟机运行情况下调整CPU和内存规格，虚拟机不需要重启即可生效&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;主机内存超分配&#34;&gt;&lt;a href=&#34;#主机内存超分配&#34; class=&#34;headerlink&#34; title=&#34;主机内存超分配&#34;&gt;&lt;/a&gt;主机内存超分配&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;主机内存空间与VM内存空间不对应，可以超额把内存分给VM（内存复用技术）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;内存复用&#34;&gt;&lt;a href=&#34;#内存复用&#34; class=&#34;headerlink&#34; title=&#34;内存复用&#34;&gt;&lt;/a&gt;内存复用&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/25/7bywcR.png&#34; alt=&#34;neicunfy&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;虚拟机HA（High-Availability）&#34;&gt;&lt;a href=&#34;#虚拟机HA（High-Availability）&#34; class=&#34;headerlink&#34; title=&#34;虚拟机HA（High Availability）&#34;&gt;&lt;/a&gt;虚拟机HA（High Availability）&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;虚拟机HA：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当物理主机或者源VM故障时，会根据集群HA策略将宕掉的VM在正常工作的主机上开启，范围是集群内，HA有集群策略管控，HA是在VM宕机的时候进行VM恢复，要求使用共享存储，当VRM故障时，集群内所有CAN节点可以自治。（系统高可用性）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;虚拟机HA原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VM故障或者物理节点故障&lt;/li&gt;
&lt;li&gt;VRM查询VM状态，发现VM故障&lt;/li&gt;
&lt;li&gt;VRM节点判断VM有HA特性，则根据保存的VM信息（规格，卷等信息）选择可用的CNA主机启动VM&lt;/li&gt;
&lt;li&gt;CAN节点收到HA请求，根据VM规格，卷信息创建新的VM，启动过程中，将VM之前的卷重新挂载，包括用户卷&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HA自制：集群下主机通过选举一个主节点，来监控每个主机的状态并维护虚拟机列表；当主机发生故障时，主节点负责将故障节点上的虚拟机在其他主机上启动。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;虚拟机热迁移&#34;&gt;&lt;a href=&#34;#虚拟机热迁移&#34; class=&#34;headerlink&#34; title=&#34;虚拟机热迁移&#34;&gt;&lt;/a&gt;虚拟机热迁移&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;基于内存压缩传输技术，虚拟机热迁移效率提升1倍。&lt;br&gt;虚拟机磁盘数据位置不变，只更改映射关系&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;动态资源调度&#34;&gt;&lt;a href=&#34;#动态资源调度&#34; class=&#34;headerlink&#34; title=&#34;动态资源调度&#34;&gt;&lt;/a&gt;动态资源调度&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;同一集群内，VM由系统根据策略自动负载均衡。&lt;br&gt;负载均衡算法优化，避免VM无效迁移。&lt;br&gt;DRS: Dynamic Resource Schedule，又称为计算资源调度自动化。FusionCompute的计算集群，配合基于VIMS文件系统的共享存储；DRS算法实时监控集群中每个计算节点的资源使用情况，引用VMOTION功能，智能迁移负荷高节点上虚拟机到资源充足的节点上；均衡各节点资源使用并保障业务有充足资源可用。因此，DRS是实现自动负载均衡的基础&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;DPM分布式电源管理&#34;&gt;&lt;a href=&#34;#DPM分布式电源管理&#34; class=&#34;headerlink&#34; title=&#34;DPM分布式电源管理&#34;&gt;&lt;/a&gt;DPM分布式电源管理&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;系统自动选择合适的物理机上下电，减小迁移VM数量。&lt;br&gt;保证小部分物理机处理休眠态，以快速满足新增业务所需资源。&lt;br&gt;电源管理自动化功能会周期性地检查集群中服务器的资源使用情况，如果集群中资源利用率不足，则会将多余的主机下电节能，下电前会将虚拟机迁移至其他主机；如果集群资源过度利用，则会将离线的主机上电，以增加集群资源，减轻主机的负荷。&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/Fusion%20Compute%E7%AE%80%E4%BB%8B/</guid>
            <title>Fusion Compute简介</title>
            <link>https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/Fusion%20Compute%E7%AE%80%E4%BB%8B/</link>
            <category>云计算</category>
            <pubDate>Sun, 16 Jan 2022 13:42:42 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;什么是Fusion-Compute？&#34;&gt;&lt;a href=&#34;#什么是Fusion-Compute？&#34; class=&#34;headerlink&#34; title=&#34;什么是Fusion Compute？&#34;&gt;&lt;/a&gt;什么是Fusion Compute？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Fusion Compute是云操作系统软件，主要负责硬件资源的虚拟化，以及对虚拟资源、业务资源、用户资源的集中管理。它 ==采用虚拟计算、虚拟存储、虚拟网络等技术== ，完成计算资源、存储资源、网络资源的虚拟化。同时通过统一的接口， ==对这些虚拟资源进行集中调度和管理，从而降低业务的运行成本== ，保证系统的安全性和可靠性，协助运营商和企业构筑安全、绿色、节能的云数据中心能力。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;组件之CNA与VRM&#34;&gt;&lt;a href=&#34;#组件之CNA与VRM&#34; class=&#34;headerlink&#34; title=&#34;组件之CNA与VRM&#34;&gt;&lt;/a&gt;组件之CNA与VRM&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CNA：计算节点代理，能够实现硬件设备资源的池化。包括UVP和VNA&lt;ul&gt;
&lt;li&gt;UVP：统一的虚拟化平台，实现硬件资源的池化。&lt;/li&gt;
&lt;li&gt;VNA：虚拟节点代理，能够实现CNA与VRM进行通信。（相当于一个中转站）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;VRM：虚拟集群管理模块。能够提供给管理员一个Web Portal界面，以及实现对整个系统资源管理、配置、日志、告警等等维护管理的功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/22/7f40ZF.png&#34; alt=&#34;fcjiagou&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/22/7f4Ba4.png&#34; alt=&#34;fczuoyong&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CNA可以看做是一个主机（或是虚拟机），他负责调配本节点上的所有硬件资源，而VRM是一个统一管理所有主机的一个中间组件，当VRM宕机时，CNA不会受到影响，因为VRM起到的仅是管理主机的功能（VRM类似于一个虚拟化中心）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;练习&#34;&gt;&lt;a href=&#34;#练习&#34; class=&#34;headerlink&#34; title=&#34;练习&#34;&gt;&lt;/a&gt;练习&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在计算虚拟化中，为虚拟机分配CPU和内存的是[]{.gap} 。 {.quiz}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Guest OS  {.options}&lt;/li&gt;
&lt;li&gt;VMM {.correct}&lt;/li&gt;
&lt;li&gt;Hypervisor {.correct}&lt;/li&gt;
&lt;li&gt;Host OS  {.options}&lt;br&gt;{.options}&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;VMM和HYpervisor其实是同一种组件的不同说法&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开源的虚拟化技术都为I型虚拟化，闭源的虚拟化技术都为II型虚拟化[]{.gap} 。 {.quiz}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TRUE  {.options}&lt;/li&gt;
&lt;li&gt;FALSE {.correct}&lt;br&gt;{.options}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%AE%80%E4%BB%8B/</guid>
            <title>云计算简介</title>
            <link>https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%AE%80%E4%BB%8B/</link>
            <category>云计算</category>
            <pubDate>Sat, 15 Jan 2022 22:25:37 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;云计算能做什么？&#34;&gt;&lt;a href=&#34;#云计算能做什么？&#34; class=&#34;headerlink&#34; title=&#34;云计算能做什么？&#34;&gt;&lt;/a&gt;云计算能做什么？&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;产生：通过云资源池，云服务器集群上获取云端资源&lt;/li&gt;
&lt;li&gt;传输：通过网络链接，如DRS、ECS服务等&lt;/li&gt;
&lt;li&gt;使用：网络前端页面、app控制&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;常见生活中的云计算：&lt;ul&gt;
&lt;li&gt;百度网盘&lt;/li&gt;
&lt;li&gt;网易云音乐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;云计算优势&#34;&gt;&lt;a href=&#34;#云计算优势&#34; class=&#34;headerlink&#34; title=&#34;云计算优势&#34;&gt;&lt;/a&gt;云计算优势&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;按需自助服务&lt;/li&gt;
&lt;li&gt;广泛网络接入&lt;/li&gt;
&lt;li&gt;资源池化 （将同类的资源转化为资源池的形式，把所有资源分解到最小单位）&lt;/li&gt;
&lt;li&gt;快速弹性伸缩 （快速指带宽网速；弹性指计算弹性，即CPU、内存资源的弹性分配；伸缩指初期服务与后期服务的伸缩，前期计算量少，后期逐步增大）&lt;/li&gt;
&lt;li&gt;可计量服务（例如网盘内存扩容，除基础服务以外的服务额外收费）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;云计算定义&#34;&gt;&lt;a href=&#34;#云计算定义&#34; class=&#34;headerlink&#34; title=&#34;云计算定义&#34;&gt;&lt;/a&gt;云计算定义&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;云计算是一种模型，它可以随时随地灵活地从可配置计算资源共享池中获取所需得到资源，资源能快速供应并释放，是管理资源的工作量与服务提供商的交互降低到最低限度&lt;br&gt;通俗来说，云计算是通过互联网可以使用足够强大的计算机为用户提供服务，这种服务的使用率可以使用统一的单位来描述&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;云计算的发展&#34;&gt;&lt;a href=&#34;#云计算的发展&#34; class=&#34;headerlink&#34; title=&#34;云计算的发展&#34;&gt;&lt;/a&gt;云计算的发展&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;step1:&lt;strong&gt;计算虚拟化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hyper-v&lt;/li&gt;
&lt;li&gt;XEN 、   KVM&lt;/li&gt;
&lt;li&gt;VMware ESX&lt;blockquote&gt;
&lt;p&gt;虚拟化、更好的资源利用率&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;step2：&lt;strong&gt;软件定义与整合&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenStack&lt;/li&gt;
&lt;li&gt;VMware     AWS&lt;blockquote&gt;
&lt;p&gt;基础设施云化，资源服务标准化、自动化&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;step3：&lt;strong&gt;云原生与重构业务&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;CoreOS&lt;/li&gt;
&lt;li&gt;Cloud Foundry&lt;blockquote&gt;
&lt;p&gt;应用云化，敏捷应用开发与生命周期管理&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;云计算部署模式&#34;&gt;&lt;a href=&#34;#云计算部署模式&#34; class=&#34;headerlink&#34; title=&#34;云计算部署模式&#34;&gt;&lt;/a&gt;云计算部署模式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;大方向是 ==以企业防火墙为界限== ，在企业内部的称私有云，在企业外部的称公有云，两者兼具的称混合云&lt;/li&gt;
&lt;li&gt;主要有建设者C和使用者U两个角色&lt;ul&gt;
&lt;li&gt;私有云：C等于U&lt;/li&gt;
&lt;li&gt;公有云：C不等于U&lt;/li&gt;
&lt;li&gt;行业云：C不完全等于U&lt;/li&gt;
&lt;li&gt;混合云：私有+私有；私有+公有；公有+公有&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/15/7YafJ0.png&#34; alt=&#34;deploymode&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;云计算的服务模式&#34;&gt;&lt;a href=&#34;#云计算的服务模式&#34; class=&#34;headerlink&#34; title=&#34;云计算的服务模式&#34;&gt;&lt;/a&gt;云计算的服务模式&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://s4.ax1x.com/2022/01/15/7YaXJx.png&#34; alt=&#34;servicemode&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IaaS：基础设施即服务，直接出租基础设施给用户来去使用，如ECS、EVS、OBS&lt;/li&gt;
&lt;li&gt;PaaS：平台即服务，将IaaS打包出租给用户来去使用，比如数据库、中间件&lt;/li&gt;
&lt;li&gt;SaaS：软件即服务，直接呈现给用户所去使用的一个应用程序，如OA办公系统&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
