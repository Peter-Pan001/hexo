{
    "version": "https://jsonfeed.org/version/1",
    "title": "理 想 净 土 • All posts by \"云计算\" category",
    "description": "不必匆忙，不必火花四溅，不必成为别人，只需成为自己",
    "home_page_url": "https://peter-pan001.github.io/my-blog",
    "items": [
        {
            "id": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E7%BD%91%E7%BB%9C%E8%99%9A%E6%8B%9F%E5%8C%96",
            "url": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E7%BD%91%E7%BB%9C%E8%99%9A%E6%8B%9F%E5%8C%96",
            "title": "网络虚拟化",
            "date_published": "2022-01-26T04:28:00.000Z",
            "content_html": "<h2 id=\"linux-bridge\"><a class=\"markdownIt-Anchor\" href=\"#linux-bridge\">#</a> Linux Bridge</h2>\n<ul>\n<li>Linux Bridge（网桥）是工作于二层的虚拟网络设备，功能类似于物理的交换机。</li>\n<li>Bridge 可以绑定其他 Linux 网络设备作为从设备，并将这些设备虚拟化为端口，当一个从设备被绑定到 Bridge 上时，就相当于真实网络中的交换机端口插入了一个连接有终端的网线，br0 会根据 MAC 地址与端口的映射关系进行转发。</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qTS0g.png\" alt=\"lbridge\"></p>\n<h2 id=\"ovs-开源虚拟以太网交换机\"><a class=\"markdownIt-Anchor\" href=\"#ovs-开源虚拟以太网交换机\">#</a> OVS 开源虚拟以太网交换机</h2>\n<blockquote>\n<p>OVS 能够支持多种标准的管理接口和协议，还可以支持跨多个物理服务器的分布式环境。OVS 提供了对 OpenFlow 协议的支持，并且能够与众多开源的虚拟化平台相整合。主要有两个作用：传递虚拟机 VM 之间的流量，以及实现 VM 和外界网络的通信。</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qTenU.png\" alt=\"ovs\"></p>\n<ul>\n<li>OVS 提供了对 OpenFlow 协议的支持，并且能够与众多开源的虚拟化平台相整合。</li>\n<li>OpenFlow 交换机将原来完全由交换机 / 路由器控制的报文转发过程转化为由 OpenFlow 交换机（OpenFlow Switch）和控制服务器（Controller）来共同完成，从而实现了数据转发和路由控制的分离。控制器可以通过事先规定好的接口操作来控制 OpenFlow 交换机中的流表，从而达到控制数据转发的目的。</li>\n<li>OpenFlow 网络由 OpenFlow 交换机、FlowVisor 和 Controller 三部分组成。OpenFlow 交换机进行数据层的转发；FlowVisor 对网络进行虚拟化；Controller 对网络进行集中控制，实现控制层的功能。<br>\nOpenFlow 交换机由流表、安全通道和 OpenFlow 协议三部分组成。</li>\n</ul>\n<h2 id=\"dvs-分布式虚拟交换机\"><a class=\"markdownIt-Anchor\" href=\"#dvs-分布式虚拟交换机\">#</a> DVS 分布式虚拟交换机</h2>\n<blockquote>\n<p>每台主机都连接到分布式交换机中。分布式交换机的一端是与虚拟机相连的虚拟端口，另一端是与虚拟机所在主机上的物理以太网适配器相连的上行链路。通过它可以连接主机和虚拟机，实现系统网络互通。另外，分布式交换机在所有关联主机之间作为单个虚拟交换机使用。此功能可使虚拟机在跨主机进行迁移时确保其网络配置保持一致。</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qTKAJ.png\" alt=\"DVS\"></p>\n<h2 id=\"evs-弹性虚拟交换\"><a class=\"markdownIt-Anchor\" href=\"#evs-弹性虚拟交换\">#</a> EVS 弹性虚拟交换</h2>\n<ul>\n<li>Elastic Virtual Switch（EVS）是基于 OVS 转发技术，提升了其 IO 性能的一种弹性化虚拟交换。仍然符合 openflow 协议标准。</li>\n<li>其中 IO 性能提升使用了 Intel DPDK 技术，通过用户态进程接管网卡数据收发，采用 “IO 独占核” 技术，即每个端口分配一个核专门用于数据收发，这种轮询式的处理方式比中断式的处理更高效，因而 IO 性能方面有显著提升。</li>\n<li>EVS 关键技术：\n<ul>\n<li>物理网卡访问：DPDK 高速数据通道</li>\n<li>报文处理：使用大页内存</li>\n</ul>\n</li>\n<li>交换业务处理\n<ul>\n<li>轮询转发，减少调度开销</li>\n<li>多核（线程）并行处理</li>\n<li>Openflow 流表转发优化</li>\n</ul>\n</li>\n<li>前后端：vhost-user 技术</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qTMN9.png\" alt=\"EVS\"></p>\n<ul>\n<li>在 Host 上运行用户态 EVS，借助于 DPDK 的网卡管理 API 和大页内存，来提升物理网卡收发包性能和处理能力。</li>\n<li>基于 vhost-user 技术，vhost 在用户态直接和 EVS 交互，通过地址偏移获取 DPDK 大页地址，性能提升 30%-40%。</li>\n<li>利用批处理和轮询机制提升报文处理能力。</li>\n</ul>\n<h2 id=\"华为分布式交换方案\"><a class=\"markdownIt-Anchor\" href=\"#华为分布式交换方案\">#</a> 华为分布式交换方案</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qT31x.png\" alt=\"fbsjhfa\"></p>\n<ul>\n<li>集中管理：统一 Portal 和集中的管理，简化用户的管理和配置；</li>\n<li>开源 Open vSwitch：集成开源 Open vSwitch，充分利用和集成了开源社区虚拟交换的能力；</li>\n<li>提供丰富虚拟交换的二层特性，包括交换、QoS、安全隔离等。</li>\n</ul>\n<h3 id=\"fusioncompute分布式交换机\"><a class=\"markdownIt-Anchor\" href=\"#fusioncompute分布式交换机\">#</a> FusionCompute 分布式交换机</h3>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qTNHe.png\" alt=\"fbjhj\"></p>\n<ul>\n<li>分布式交换机模型基本特征：\n<ul>\n<li>虚拟化管理员可以配置多个分布式交换机， <mark>每个分布式交换机可以覆盖集群中的多个 CNA 节点</mark></li>\n<li>每个分布式交换机具有多个分布式的虚拟端口 VSP，每个 VSP 具有各自的属性 (速率)，为了管理方便采用 Port Group 组管理相同属性的一组端口，相同端口组的 VLAN 相同；</li>\n<li>虚拟化管理员或业务系统（例如 VDI/IDC）, 可选择管理 / 存储 / 业务使用的不同物理接口；每个分布式交换机可以配置一个 UpLink 端口或者一个 Uplink 端口聚合组，用于 VM 对外的通信。 <mark>Uplink 端口聚合组可以包含多个物理端口，端口聚合组可以配置负载均衡策略</mark></li>\n<li>每个 VM 可以具有多个 vNIC 接口，vNIC 可以和交换机的 VSP 一一对接；</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"虚拟交换模型\"><a class=\"markdownIt-Anchor\" href=\"#虚拟交换模型\">#</a> 虚拟交换模型</h3>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qTdNd.png\" alt=\"xnjhmx\"></p>\n<ul>\n<li>虚拟化管理员可通过定义端口组 属性（安全 / QoS）简化对虚拟机端口属性的设置；设置端口组属性，不影响虚拟机正常工作；</li>\n<li>端口组：端口组是网络属性相同的一组端口的属性集合。管理员可以通过配置端口组属性（带宽 QOS、2 层安全属性、VLAN 等）简化对虚拟机端口属性的设置。设置端口组属性，不影响虚拟机正常工作；</li>\n<li>上行链路：分布式交换机关联的服务器物理网口；管理员可以查询上行链路的名称、速率、模式、状态等信息；</li>\n<li>上行链路聚合：分布式交换机关联的服务器绑定网口，绑定网口可以包含多个物理网口，这些物理网口可以配置主备或负载均衡策略。</li>\n</ul>\n<h2 id=\"华为虚拟交换模式\"><a class=\"markdownIt-Anchor\" href=\"#华为虚拟交换模式\">#</a> 华为虚拟交换模式</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qTD3t.png\" alt=\"xnjhms\"></p>\n<ul>\n<li>普通交换：普通模式下，虚拟机有前后端两个虚拟网卡设备，其中，前端网卡连接在虚拟交换机的虚端口上。虚拟机网络数据包 <mark>通过环形缓冲区和事件通道在前后端网卡之间传输</mark> ，并最终通过后端网卡连接的虚拟交换机实现转发</li>\n<li>SR-IOV：简单说来，支持 SR-IOV 的物理网卡可以虚拟出多个网卡以供虚拟机使用，<mark>对于虚拟机来说就像是有一块单独的物理网卡一样</mark> ，相比软件虚拟化提升了网络 I/O 的性能，相对于硬件直通 (PCI Passthrough) 又减少了硬件网卡数量上的需求</li>\n<li>用户态交换：通过使用 DPDK（Data Plane Development Kit，数据平面开发套件，DPDK 是一系列库和驱动的集合）技术，用来在 x86 平台进行快速的数据包处理。它通过环境抽象层旁路内核协议栈、轮询模式的报文无中断收发、优化内存 / 缓冲区 / 队列管理、基于网卡多队列和流识别的负载均衡等多项技术， <mark>实现了在 x86 处理器架构下的高性能报文转发能力，提高虚拟机网络性能</mark></li>\n</ul>\n<h2 id=\"网络安全策略\"><a class=\"markdownIt-Anchor\" href=\"#网络安全策略\">#</a> 网络安全策略</h2>\n<h3 id=\"二层网络安全策略\"><a class=\"markdownIt-Anchor\" href=\"#二层网络安全策略\">#</a> 二层网络安全策略</h3>\n<blockquote>\n<p>防止 IP 地址和 MAC 仿冒（IP 和 MAC 绑定）：防止虚拟机用户通过修改虚拟网卡的 IP、MAC 地址发起 IP、MAC 仿冒攻击，增强用户虚拟机的网络安全。通过生成 IP-MAC 的绑定关系，基于 IP 源侧防护 (IP Source Guard) 与动态 ARP 检测（DAI）对非绑定关系的报文进行过滤。<br>\n防止 DHCP Server 仿冒 (DHCP Server 隔离)：禁止用户虚拟机启动 DHCP Server 服务，防止用户无意识或恶意启动 DHCP Server 服务，影响正常的虚拟机 IP 地址分配过程。</p>\n</blockquote>\n<h3 id=\"广播报文抑制\"><a class=\"markdownIt-Anchor\" href=\"#广播报文抑制\">#</a> 广播报文抑制</h3>\n<blockquote>\n<p>虚拟交换机提供虚拟机虚端口发送方向的广播报文抑制开关，以及抑制阈值设置功能。可以通过开启虚拟机网卡所在端口组的广播包抑制开关设置阈值，减少过量广播报文对二层网络带宽的消耗。</p>\n</blockquote>\n<h3 id=\"安全组\"><a class=\"markdownIt-Anchor\" href=\"#安全组\">#</a> 安全组</h3>\n<blockquote>\n<p>用户根据虚拟机安全需求创建安全组，每个安全组可以设定一组访问规则。当虚拟机加入安全组后，即受到该访问规则组的保护。用户通过在创建虚拟机时选定要加入的安全组来对自身的虚拟机进行安全隔离和访问控制。</p>\n</blockquote>\n<h2 id=\"trunk口\"><a class=\"markdownIt-Anchor\" href=\"#trunk口\">#</a> Trunk 口</h2>\n<blockquote>\n<p>虚拟机网卡通过虚端口接入虚拟交换机进行网络数据包的收发。<br>\n虚拟交换机虚端口支持配置为 Trunk 类型，并允许设置 Trunk 的 VLAN ID 范围，之后虚端口便具备了同时收发携带不同 VLAN 标签的网络数据包的功能，从而满足了虚拟网卡支持 Trunk 类型端口的需求。</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qTsjf.png\" alt=\"trunkk\"></p>\n<ul>\n<li>普通类型的虚端口只能属于一个 VLAN，中继类型的虚端口可以允许多个 VLAN 接收和发送报文。普通虚拟机选择普通类型的端口，虚拟机的网卡启用 VLAN 设备的情况下选择中继类型的端口，否则虚拟机的网络可能不通。</li>\n<li>端口组配置为中继的方式后，可以在 linux 虚拟机内创建多个 VLAN 设备，这些 VLAN 设备通过 1 个虚拟网卡即可以收发携带不同 VLAN 标签的网络数据包。使虚拟机不用创建多个虚拟网卡，即可收发携带不同 VLAN 标签的网络数据包。</li>\n</ul>\n<h2 id=\"网口绑定\"><a class=\"markdownIt-Anchor\" href=\"#网口绑定\">#</a> 网口绑定</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/26/7qT6u8.png\" alt=\"wkbd\"></p>\n<ul>\n<li>对于普通网卡，绑定模式可以选择以下几种：\n<ul>\n<li>主备</li>\n<li>轮询</li>\n<li>基于源目的 IP 和端口负荷分担</li>\n<li>基于源目的 MAC 的负荷分担</li>\n<li>基于源目的 MAC 的 LACP</li>\n<li>基于源目的 IP 的 LACP</li>\n</ul>\n</li>\n<li>对于支持 DPDK 驱动的物理网卡，绑定模式可以选择以下几种：\n<ul>\n<li>DPDK 驱动的主备模式</li>\n<li>DPDK 驱动的基于源目的 MAC 的 LACP 模式</li>\n<li>DPDK 驱动的基于源目的 IP 和端口的 LACP 模式</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"question\"><a class=\"markdownIt-Anchor\" href=\"#question\">#</a> Question</h2>\n<ol>\n<li class=\"quiz\">\n<p>在 FusionCompute 分布式交换机里，虚拟机与外部网络通信依靠的是什么端口？<span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li class=\"options\">Mgnt</li>\n<li class=\"options\">存储接口</li>\n<li class=\"correct\">上行链路</li>\n<li class=\"options\">端口组</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>FusionCompute 分布式交换机支持哪几种类型？（多选）<span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li class=\"correct\">普通模式</li>\n<li class=\"correct\">SR-IOV 直通模式</li>\n<li class=\"correct\">用户态交换模式</li>\n<li class=\"options\">标准模式</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "云计算"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E5%AD%98%E5%82%A8%E8%99%9A%E6%8B%9F%E5%8C%96",
            "url": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E5%AD%98%E5%82%A8%E8%99%9A%E6%8B%9F%E5%8C%96",
            "title": "存储虚拟化",
            "date_published": "2022-01-25T15:13:39.000Z",
            "content_html": "<h2 id=\"存储虚拟化架构\"><a class=\"markdownIt-Anchor\" href=\"#存储虚拟化架构\">#</a> 存储虚拟化架构</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7byHUS.png\" alt=\"cunchujiagou\"></p>\n<blockquote>\n<p>SAN : 存储区域网络（Storage Area Network，简称 SAN）采用网状通道（Fibre Channel ，简称 FC，区别与 Fiber Channel 光纤通道）技术，通过 FC 交换机连接存储阵列和服务器主机，建立专用于数据存储的区域网络。适用对网络性能没有太大要求、但安全要求高的场景<br>\n NAS：NAS（Network Attached Storage：网络附属存储）按字面简单说就是连接在网络上，具备资料存储功能的装置，因此也称为 “网络存储器”。它是一种专用数据存储服务器。它以数据为中心，将存储设备与服务器彻底分离，集中管理数据，从而释放带宽、提高性能、降低总拥有成本、保护投资。主打高性能，但数据安全较为欠缺</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b6FC4.png\" alt=\"cunchujiagou02\"></p>\n<ul>\n<li>FusionSphere 存储虚拟化平台主要由文件系统、磁盘驱动和磁盘工具组成。SAN 设备和本地磁盘等块设备连接到服务器上后，经过设备驱动层和通用块层后，对主机呈现一个磁盘设备。</li>\n<li>文件系统建立在主机能够访问的存储设备上，创建文件系统的过程就是主机对存储设备执行格式化，在存储设备上写入文件系统的元数据和 inode 信息，建立文件到裸设备块的映射，并负责裸设备块的管理，包括空间分配和释放。 <mark>对于虚拟化来说，文件系统屏蔽了块层的操作，提供了文件级的抽象操作。虚拟机磁盘就是放在文件系统中的文件。</mark></li>\n<li>虚拟机磁盘在使用时，需要由磁盘驱动挂载给虚拟机，并通过 QEMU 管理起来，用户虚拟机的所有读写 IO 都会由前端驱动截获，转发给 QEMU 进程，并转换为用户态驱动的读写操作，最终写入磁盘文件中。</li>\n<li>虚拟机磁盘中包含了属性信息和数据区域，磁盘工具提供了一系列对虚拟机磁盘的操作，可以解析磁盘文件的文件头，读取或修改磁盘的属性信息，创建磁盘的数据区等操作。</li>\n</ul>\n<h2 id=\"vims虚拟集群存储文件系统\"><a class=\"markdownIt-Anchor\" href=\"#vims虚拟集群存储文件系统\">#</a> VIMS 虚拟集群存储文件系统</h2>\n<blockquote>\n<p>VIMS 是一种高性能的集群文件系统，使虚拟化技术的应用超出了单个存储系统的限制，可让多个虚拟机共同访问一个整合的集群式存储池，从而显著提高了资源利用率。VIMS 是跨越多个存储服务器实现虚拟化的基础，它可启用存储热迁移、DRS（Storage Dynamic Resource Scheduler） 和 High Availability 等各种服务。</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b6EvR.png\" alt=\"vircoutfile\"></p>\n<h3 id=\"vims分布式锁\"><a class=\"markdownIt-Anchor\" href=\"#vims分布式锁\">#</a> VIMS 分布式锁</h3>\n<ul>\n<li>一个 VIMS 卷同时被多个 CNA 节点挂载，因此每个 CNA 节点都可以访问 VIMS 卷上的文件。为保证多节点读写同一文件的数据一致性，VIMS 需要实现分布式文件锁。VIMS 的 DLM（Distribute lock manager）模块负责实现分布式文件锁，它提供集群概念上的锁服务，调用者通过 DLM 保证集群间的同步要求。</li>\n</ul>\n<h3 id=\"vims心跳\"><a class=\"markdownIt-Anchor\" href=\"#vims心跳\">#</a> VIMS 心跳</h3>\n<ul>\n<li>VIMS 存在两种心跳，磁盘心跳用于检测主机是否可以正常读写共享存储，网络心跳用于检测主机间网络通信是否正常。作为集群文件系统，挂载了 VIMS 卷的 CNA 节点从来都不是单独的个体，作为集群节点成员之一，通过网络心跳确保与其它节点进行正常的网络通信。</li>\n</ul>\n<h2 id=\"fc磁盘技术\"><a class=\"markdownIt-Anchor\" href=\"#fc磁盘技术\">#</a> FC 磁盘技术</h2>\n<h3 id=\"普通磁盘\"><a class=\"markdownIt-Anchor\" href=\"#普通磁盘\">#</a> 普通磁盘</h3>\n<blockquote>\n<p>普通磁盘创建时大小与虚拟磁盘大小相同，并将文件所有位置填 0，占用空间较大，置备时间较长<br>\n该磁盘创建所需时间会比创建其他类型的磁盘长，能够提供最好的性能体验和数据安全性</p>\n</blockquote>\n<ul>\n<li>即写多少，分配多少</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b6ZK1.png\" alt=\"ptcp\"></p>\n<h3 id=\"普通延时置零磁盘\"><a class=\"markdownIt-Anchor\" href=\"#普通延时置零磁盘\">#</a> 普通延时置零磁盘</h3>\n<blockquote>\n<p>普通延迟置零卷创建时大小与虚拟磁盘大小相同，但不会进行填 0 操作，占用空间较大，置备时间较普通卷短<br>\n普通延迟置零磁盘创建很快，创建时进行全空间分配，但未进行全置零动作，性能较普通磁盘有所下降。适用于对发放速度要求高的场景</p>\n</blockquote>\n<ul>\n<li>比普通磁盘多了置零动作</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b6uVK.png\" alt=\"ptyszlcp\"></p>\n<h3 id=\"精简磁盘\"><a class=\"markdownIt-Anchor\" href=\"#精简磁盘\">#</a> 精简磁盘</h3>\n<blockquote>\n<p>精简磁盘创建时大小为 0，精简磁盘创建时含少量元数据信息，大小一般为几十 K，创建时间均非常短。随着用户写入数据，精简磁盘的大小与实际占用空间将逐步增加<br>\n该磁盘用于 FusionSphere 系统中的精简磁盘，可以提高存储设备的利用率。精简磁盘使用动态磁盘技术，可以节省存储空间。该磁盘在创建时不进行空间分配，而是在用户 IO 写入磁盘文件时才进行空间动态分配，性能较普通磁盘有所下降。适用于用户对存储需求不明确，或是规划的容量比实际使用的容量多的场景</p>\n</blockquote>\n<ul>\n<li>按需分配，要多少拿多少</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b6M5D.png\" alt=\"jjcp\"></p>\n<h3 id=\"差分磁盘\"><a class=\"markdownIt-Anchor\" href=\"#差分磁盘\">#</a> 差分磁盘</h3>\n<blockquote>\n<p>差分磁盘必须基于一个已有的父磁盘来创建，它只记录相对于父磁盘的差异数据，包括数据的增改，差分磁盘不能脱离父磁盘而存在，如果父磁盘进行了修改，则差分磁盘的数据将不再可用。<br>\n对差分磁盘进行读操作，会首先读取差分磁盘中的数据区域，如果不存在，则表示该数据区域未被修改，则通过文件头的索引找到父磁盘，在对该区域进行读取。对差分磁盘进行写操作时，则直接写在差分磁盘上。<br>\n差分磁盘的结构和动态磁盘完全一致，文件头中会记录父磁盘的路径，数据区只记录和父磁盘差异数据，大小也会随着数据的写入而自动增长。</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b632d.png\" alt=\"cfcp\"></p>\n<h2 id=\"快照\"><a class=\"markdownIt-Anchor\" href=\"#快照\">#</a> 快照</h2>\n<blockquote>\n<p>虚拟机可以将当前状态保存在快照文件中，包括磁盘内容、内存和寄存器数据。用户可以通过恢复快照多次回到这一状态，虚拟机用户在执行一些重大、高危操作前，例如系统补丁，升级，破坏性测试前执行快照，可以用于故障时的快速还原。<br>\nFusionCompute 支持普通快照、一致性快照以及内存快照。</p>\n</blockquote>\n<h3 id=\"创建快照\"><a class=\"markdownIt-Anchor\" href=\"#创建快照\">#</a> 创建快照</h3>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b68xA.png\" alt=\"cjkz\"></p>\n<h3 id=\"回滚快照\"><a class=\"markdownIt-Anchor\" href=\"#回滚快照\">#</a> 回滚快照</h3>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b6JKI.png\" alt=\"hgkz\"></p>\n<h3 id=\"删除快照\"><a class=\"markdownIt-Anchor\" href=\"#删除快照\">#</a> 删除快照</h3>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b6UVf.png\" alt=\"sckz\"></p>\n<h2 id=\"链接克隆\"><a class=\"markdownIt-Anchor\" href=\"#链接克隆\">#</a> 链接克隆</h2>\n<blockquote>\n<p>链接克隆虚拟机可以基于同一个虚拟机模板，快速发放多个类似的虚拟机。通过对虚拟机模板的系统卷创建多个差分磁盘，将每个差分磁盘挂载给独立的虚拟机。应用于需要大量发放拥有相同或类似数据的虚拟机，且对性能要求不高。<br>\n在链接克隆场景下，将若干链接克隆虚拟机的共同模板中的热点数据放在主机内存中，达到快速读取的目的，能够极大提升虚拟机的启动和运行速度。</p>\n</blockquote>\n<h3 id=\"实现原理\"><a class=\"markdownIt-Anchor\" href=\"#实现原理\">#</a> 实现原理</h3>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b60Pg.png\" alt=\"sxyl\"></p>\n<h2 id=\"存储热迁移\"><a class=\"markdownIt-Anchor\" href=\"#存储热迁移\">#</a> 存储热迁移</h2>\n<blockquote>\n<p>FusionSphere 提供了虚拟机磁盘的冷迁移和热迁移，冷迁移是在虚拟机关机时候，将其磁盘文件从一个存储移动到另一个存储，热迁移可以在不中断业务的前提下，将虚拟机磁盘从一个存储迁移至另一个存储。</p>\n</blockquote>\n<ul>\n<li>热迁移首先使用写时重定向，将虚拟机数据写入目的存储的一个差异磁盘，这样，原磁盘文件就变成只读的。</li>\n<li>将源卷的所有的数据块依次读取出来并合并到目标端的差异磁盘中，等数据合并完成后，目的端的差分磁盘就拥有虚拟磁盘的所有最新数据。</li>\n<li>去除目的端快照对源卷的依赖，将差分磁盘修改为动态磁盘，这样，目的端磁盘文件可以独立运行。</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b6rxs.png\" alt=\"ccrqy\"></p>\n<h2 id=\"存储资源裸设备映射-rdm\"><a class=\"markdownIt-Anchor\" href=\"#存储资源裸设备映射-rdm\">#</a> 存储资源裸设备映射 (RDM)</h2>\n<blockquote>\n<p>Raw Device Mapping 绕过 hvpervisor，物理裸设备映射 (RDM) 能够将虚拟机下发的 SCSI 命令直接透传，使得虚拟机中的业务能够直接操作物理 SCSI 设备，避免由于虚拟化层的模拟导致功能丢失。<br>\n不支持链接克隆、存储瘦分配、磁盘在线 / 离线扩容 、存储增量快照 、iCache 、存储热迁移、存储 QoS、磁盘备份、虚拟机转为模板等</p>\n</blockquote>\n<ul>\n<li>技术特点\n<ul>\n<li>虚拟机直接通过 SCSI 命令操作裸存储设备</li>\n<li>兼容 FC 光纤存储和 IP SAN 存储</li>\n<li>适用于需要高性能存储的应用，比如 Oracle RAC</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"存储扩容原理\"><a class=\"markdownIt-Anchor\" href=\"#存储扩容原理\">#</a> 存储扩容原理</h2>\n<blockquote>\n<p>当需要扩容时，先在主节点上将新增的存储空间以线性映射的方式追加至虚拟块设备末尾，完成虚拟块设备的扩容后，再将新增的存储空间分成数段逐渐增加至文件系统 (更新文件系统中的元数据)，主节点完成数据存储的扩容。由于虚拟块设备的信息都是保存在节点内存中，则当其它节点发现数据存储空间有变化时，则需要更新虚拟块设备信息，完成扩容虚拟块设备。</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7b66rq.png\" alt=\"cckr\"></p>\n",
            "tags": [
                "云计算"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/FusionSphere%E6%9E%B6%E6%9E%84",
            "url": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/FusionSphere%E6%9E%B6%E6%9E%84",
            "title": "FusionSphere架构",
            "date_published": "2022-01-25T15:08:15.000Z",
            "content_html": "<h2 id=\"fusionsphere虚拟化套件\"><a class=\"markdownIt-Anchor\" href=\"#fusionsphere虚拟化套件\">#</a> FusionSphere 虚拟化套件</h2>\n<blockquote>\n<p>前面讲到，虚拟化是云计算的基础，但虚拟化不等于云计算，所有的云软件都要借助虚拟化才能实现</p>\n</blockquote>\n<ul>\n<li>关于 FusionSphere：\n<ul>\n<li>华为 FusionSphere 虚拟化套件是业界领先的虚拟化解决方案，能够帮助客户带来如下的价值，从而大幅提升数据中心基础设施的效率。</li>\n<li>定位特点：简化管理，优质性能</li>\n<li>管理方面，支持多站点统一管理；支持跨地域容灾，保障业务连续性；支持物理机、第三方平台迁移</li>\n<li>性能方面，包含大规格虚拟机；采用 KVM 引擎；支持多款显卡直通和虚拟化（GPU 增强）；支持 OVS+DPDK 网络调优</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"fusionsphere虚拟化组件构成\"><a class=\"markdownIt-Anchor\" href=\"#fusionsphere虚拟化组件构成\">#</a> FusionSphere 虚拟化组件构成</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7bs2yq.png\" alt=\"fspherecombat\"></p>\n<h2 id=\"fusionsphere服务器虚拟化架构\"><a class=\"markdownIt-Anchor\" href=\"#fusionsphere服务器虚拟化架构\">#</a> FusionSphere 服务器虚拟化架构</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7bsoY4.png\" alt=\"fsphereserve\"></p>\n<blockquote>\n<p>服务器虚拟化产品（FusionCompute）、虚拟化管理软件（FusionManager）、备份软件（eBackup ）和容灾软件（UltraVR）组成。主要实现硬件资源的虚拟化，以及对虚拟资源集中管理，提供基础备份、容灾，轻量级运营，云基础服务，性能管理等能力。</p>\n</blockquote>\n<ul>\n<li>\n<p>FusionCompute：提供对 x86 物理服务器，SAN 设备的虚拟化能力，并提供软件定义网络基础能力。</p>\n</li>\n<li>\n<p>FusionManager：使用 FusionCompute 能力，并集成防火墙，负载均衡器等的自动化管理能力，提供企业级和运营级的虚拟数据中心管理方案。</p>\n</li>\n<li>\n<p>UltraVR： 提供跨站点容灾能力。</p>\n</li>\n<li>\n<p>eBackup： 提供虚拟机的备份能力。</p>\n</li>\n<li>\n<p><strong>组件说明：</strong></p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">组件</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">Fusion Compute</td>\n<td style=\"text-align:center\">必选组件 </br> Fusion Compute 是 <mark>云操作系统软件</mark> ，主要负责硬件资源的虚拟化，以及对虚拟资源、业务资源、用户资源的集中管理。通过统一的接囗，对这些虚拟资源进行集中调度和管理，从而降低业务的运行成本，保证系统的安全性和可靠性，协助运营商和企业构筑安全、绿色、节能的云数据中心能力。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Fusion Manager</td>\n<td style=\"text-align:center\">可选组件 </br> Fusion Manager 主要 <mark>对云计算的软件和硬件进行全面的监控和管理</mark> ，实现同构，异构 VMware 虚拟化多资源池管理，软硬件统一告警监控，并向内部运维管理人员提供管理门户</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">eBackup</td>\n<td style=\"text-align:center\">可选组件 </br> eBackup 是虚拟化备份软件，配合 Fusion Compute 快照功能和 CBT (Changed Block Tracking) 备份功能实现 Fusion Sphere 的虚拟机数据备份方案。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">UltraVR</td>\n<td style=\"text-align:center\">可选组件 </br> UltraVR 是容灾业务管理软件，利用底层 SAN 存储系统提供的异步远程复制特性，提供虚拟机关腱数据的数据保护和容灾恢复。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"fusionsphere应用场景\"><a class=\"markdownIt-Anchor\" href=\"#fusionsphere应用场景\">#</a> FusionSphere 应用场景</h2>\n<ul>\n<li>单虚拟化场景\n<ul>\n<li>只采用 FusionCompute 作为统一的操作维护管理平台对整个系统进行操作与维护的应用场景</li>\n</ul>\n</li>\n<li>多虚拟化场景\n<ul>\n<li>多套虚拟化环境需要进行统一管理\n<ul>\n<li>统一管理和维护：支持同时接入 FusionCompute 和 VMware 虚拟化环境，对多虚拟化环境的资源和业务进行统一的管理和维护。</li>\n<li>统一监控告警：支持对多个虚拟化环境、多种物理设备的告警进行统一接入、监控和管理。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>私有云场景\n<ul>\n<li>多租户共享 VPC 场景</li>\n<li>多租户私有 VPC 场景</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"fusionsphere在整个华为云计算体系的定位\"><a class=\"markdownIt-Anchor\" href=\"#fusionsphere在整个华为云计算体系的定位\">#</a> FusionSphere 在整个华为云计算体系的定位</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7byM1s.png\" alt=\"fspherestand\"></p>\n<h2 id=\"fusioncompute架构\"><a class=\"markdownIt-Anchor\" href=\"#fusioncompute架构\">#</a> FusionCompute 架构</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7by8BV.png\" alt=\"fcomputeking\"></p>\n",
            "tags": [
                "云计算"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/Fusion%20Compute%E5%AE%89%E8%A3%85",
            "url": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/Fusion%20Compute%E5%AE%89%E8%A3%85",
            "title": "Fusion Compute安装",
            "date_published": "2022-01-20T10:42:15.000Z",
            "content_html": "<h2 id=\"前期准备\"><a class=\"markdownIt-Anchor\" href=\"#前期准备\">#</a> 前期准备</h2>\n<ul>\n<li>\n<p>PC 机</p>\n<ol>\n<li>关闭防火墙</li>\n<li>特定版本的浏览器。</li>\n<li>Java7 的届件安装，需要调整 Java 安全级别为最低。</li>\n<li>实现 PC 与物理服务器的通信</li>\n</ol>\n</li>\n<li>\n<p>服务器</p>\n<ol>\n<li>获取管理网卡 IP 地址。</li>\n<li>配置 RAlD，建议前面两张网卡去配置 RAID1，剩余的磁盘建议针对每个磁盘做 RAID0。</li>\n</ol>\n</li>\n<li>\n<p>网络规划：</p>\n<ol>\n<li>CNA：192.168.22.130</li>\n<li>VRM：192.168.1.107</li>\n</ol>\n</li>\n</ul>\n",
            "tags": [
                "云计算"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E8%AE%A1%E7%AE%97%E8%99%9A%E6%8B%9F%E5%8C%96",
            "url": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E8%AE%A1%E7%AE%97%E8%99%9A%E6%8B%9F%E5%8C%96",
            "title": "计算虚拟化简介",
            "date_published": "2022-01-19T11:55:37.000Z",
            "content_html": "<h2 id=\"何为虚拟化\"><a class=\"markdownIt-Anchor\" href=\"#何为虚拟化\">#</a> 何为虚拟化？</h2>\n<blockquote>\n<ul>\n<li>虚拟化技术不等于云计算，云计算的实现不一定需要虚拟化，但虚拟化在 IaaS 中起着非常重要的作用（裸金属服务器）</li>\n<li>裸金属服务器，又不仅限于物理服务器，它是物理服务器和云服务的结合。</li>\n<li>“裸金属”，意味它不包括相应的操作系统和软件，这个是客户后期自选配置的。大部分云服务提供商的裸金属服务器产品，不提供本地硬盘（可以支持），主要提供 CPU 和内存。</li>\n</ul>\n</blockquote>\n<ul>\n<li>虚拟化是云计算基础，针对云计算能够提供不仅仅是 IaaS 服务 PaaS 和 SaaS 的大部分服务都是基于 IaaS 服务建立的</li>\n</ul>\n<h2 id=\"虚拟机如何创建\"><a class=\"markdownIt-Anchor\" href=\"#虚拟机如何创建\">#</a> 虚拟机如何创建？</h2>\n<ul>\n<li>虚拟机通过物理 CPU 的虚拟化技术，分配给虚拟机以资源，通过操作系统控制，形成虚拟机</li>\n<li>或者通过虚拟化软件在实机的基础上建立</li>\n</ul>\n<h2 id=\"为什么要使用虚拟化\"><a class=\"markdownIt-Anchor\" href=\"#为什么要使用虚拟化\">#</a> 为什么要使用虚拟化</h2>\n<ul>\n<li>使用虚拟化技术可以提高资源的利用率，实现软硬件的解耦</li>\n<li>虚拟化的本质是将原来的的物理设备逻辑化</li>\n<li>未使用虚拟化的软硬件是高耦合的，同一时刻只能运行一个 OS，且硬件与 OS 比例 1:1，并且硬件资源是独立的</li>\n<li>使用虚拟化，可以实现软硬件解耦，同一时刻可以运行多个 OS，且硬件与 OS 比例 1:n，并且硬件资源是共享的</li>\n</ul>\n<h2 id=\"常见的虚拟化\"><a class=\"markdownIt-Anchor\" href=\"#常见的虚拟化\">#</a> 常见的虚拟化</h2>\n<ul>\n<li>\n<p>开源：</p>\n<ul>\n<li>KVM、XEN</li>\n</ul>\n</li>\n<li>\n<p>闭源：</p>\n<ul>\n<li>Hyper-V、VMware、Fusion Sphere</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"相关概念\"><a class=\"markdownIt-Anchor\" href=\"#相关概念\">#</a> 相关概念</h2>\n<ul>\n<li>Guest OS ：虚拟机 OS</li>\n<li>Guest Machine ：虚拟处理的虚拟机</li>\n<li>Hypervisor ：虚拟化监控机</li>\n<li>Host OS ：运行在物理机上的 OS</li>\n<li>Host Machine ： 物理机</li>\n</ul>\n<h2 id=\"虚拟化架构\"><a class=\"markdownIt-Anchor\" href=\"#虚拟化架构\">#</a> 虚拟化架构</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">寄居虚拟化</th>\n<th style=\"text-align:center\">裸金属虚拟化</th>\n<th style=\"text-align:center\">操作系统虚拟化</th>\n<th style=\"text-align:center\">混合虚拟化</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">优点</td>\n<td style=\"text-align:center\">简单、易于实现</td>\n<td style=\"text-align:center\">虚拟机不依赖操作系统</br>支持多种操作系统，多种应用</td>\n<td style=\"text-align:center\">简单、易于实现</br>管理开销非常低</td>\n<td style=\"text-align:center\">相对于寄居虚拟化价格，没有冗余，性能高</br>可支持多种操作系统</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">缺点</td>\n<td style=\"text-align:center\">安装和运行应用程序依赖于主机操作系统对设备的支持</br>管理开销较大，性能损耗大</td>\n<td style=\"text-align:center\">虚拟层内核开发难度大</td>\n<td style=\"text-align:center\">隔离性差，多容器共享同一操作系统</td>\n<td style=\"text-align:center\">需底层硬件支持虚拟化扩展功能</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">厂家</td>\n<td style=\"text-align:center\">VMware Work</td>\n<td style=\"text-align:center\">VMware ESXServer</br>Citrix XenServer</br>Fusion Sphere</td>\n<td style=\"text-align:center\">Virtuozzo</td>\n<td style=\"text-align:center\">Redhat KVM</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/19/7swXCV.png\" alt=\"virtual frame\"></p>\n<h3 id=\"根据hypervisor的位置不同\"><a class=\"markdownIt-Anchor\" href=\"#根据hypervisor的位置不同\">#</a> 根据 hypervisor 的位置不同</h3>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/19/7swj3T.png\" alt=\"classicforvir\"></p>\n<ul>\n<li><strong>1 型虚拟化</strong> 。Hypervisor 直接安装在物理机上，多个虚拟机在 Hypervisor 运行。Hypervisor 实现方式一般是一个特殊定制的 Linux 系统。Xen 和 VMWare 的 ESXi 都属于这个类型。</li>\n<li><strong>2 型虚拟化</strong> 。物理机上首先安装常规的操作系统，比如 Redhat、Ubuntu 和 Windows.Hypervisor 作为 OS 上的一个程序模块运行，并对管理虚拟机进行管理。KVM、VirtualBox 和 VMWareWorkstation 都属于这个类型。</li>\n</ul>\n<blockquote>\n<p>理论上讲：</p>\n<ul>\n<li>1 型虚拟化一般对硬件虚拟化功能进行了特别优化，性能上比 2 型要高。<br>\nKVM 注重性能，XEN 注重安全性，针对应用的访问路径开销，KVM 比 XEN 要短</li>\n<li>2 型虚拟化因为基于普通的操作系统，会比较灵活，比如支持虚拟机嵌套。嵌套意味着可以在 KVM 虚拟机中再运行 KVM</li>\n</ul>\n</blockquote>\n<h3 id=\"hypervisor作用\"><a class=\"markdownIt-Anchor\" href=\"#hypervisor作用\">#</a> Hypervisor 作用</h3>\n<ol>\n<li>识别、捕获和响应虚拟机所发出的 CPU 特权指令或保护指令</li>\n<li>负责处理虚拟机队列和调度，并将物理硬件的处理结果返回给相应的虚拟机。</li>\n<li>VMM 承担管理资源的重任，其还需向上提供拟机 VM 用于运行 Guest OS，因此 VMM 还负责虚拟环境的创建和管理。</li>\n</ol>\n<h2 id=\"cpu虚拟化\"><a class=\"markdownIt-Anchor\" href=\"#cpu虚拟化\">#</a> CPU 虚拟化</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/19/7swvgU.png\" alt=\"cpuvir\"></p>\n<blockquote>\n<p>Ring0 的权限可以直接操作硬件，一般只有操作系统和驱动会允许拥有此权限；Ring3 的权限最低，所有的程序都可以拥有此权限，一些危险指令只能通过 OS 调用执行</p>\n</blockquote>\n<ul>\n<li><strong>指令类别：</strong>\n<ul>\n<li>特权指令：操作与管理关键系统资源指令，在 Ring0 级别上运行</li>\n<li>普通指令：CPU 普通权限级别即可运行，即 Ring3</li>\n<li>敏感指令：修改虚拟机运行模式或宿主机状态的指令，即将 Guest OS 在 Ring0 运行的指令夺权，交由 VMM 执行</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>可以说，Ring0 就是我们常说的内核态，Ring3 就是我们常说的用户态</p>\n</blockquote>\n<h2 id=\"计算虚拟化原理\"><a class=\"markdownIt-Anchor\" href=\"#计算虚拟化原理\">#</a> 计算虚拟化原理</h2>\n<h3 id=\"cpu虚拟化原理\"><a class=\"markdownIt-Anchor\" href=\"#cpu虚拟化原理\">#</a> CPU 虚拟化原理</h3>\n<ul>\n<li>对于原生操作系统与 CPU 的管理关系：\n<ul>\n<li>CPU 资源永远就绪</li>\n<li>OS 对 CPU 具有最高权限</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>但引入虚拟化后，出现：<br>\n多个虚拟机之间共享 CPU 资源<br>\n部分指令只能通过 hypervisor 的权限使用</p>\n</blockquote>\n<h3 id=\"内存虚拟化原理\"><a class=\"markdownIt-Anchor\" href=\"#内存虚拟化原理\">#</a> 内存虚拟化原理</h3>\n<ul>\n<li>对于原生操作系统与 CPU 的管理关系：\n<ul>\n<li>内存都从物理地址 0 开始</li>\n<li>内存都连续</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>但引入虚拟化后，出现：<br>\n物理地址 0 只有一个，无法同时满足所有客户机从 0 开始的需求<br>\n分配连续物理地址会使内存使用率降低，灵活性降低</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/19/7swxvF.png\" alt=\"castvir\"></p>\n<ul>\n<li>通过 Hypervisor 把操作系统的内存分为虚拟机侧和物理机侧，从虚拟机侧看，每个独立的虚拟机的内存物理地址都是从 0 开始的，但从物理机侧看，所有虚拟机的物理内存地址整合在一起却只有一个 0 物理地址，只是 Hypervisor 在其中把每个虚拟机所要的物理地址 0 虚拟化了，让各个虚拟机的内存物理地址逻辑上是从 0 开始的，但物理上却并非如此</li>\n</ul>\n<h3 id=\"io虚拟化原理\"><a class=\"markdownIt-Anchor\" href=\"#io虚拟化原理\">#</a> I/O 虚拟化原理</h3>\n<blockquote>\n<ul>\n<li>现实中的外设资源是有限的，为满足客户机操作系统的需求，VMM 必须通过 I/O 虚拟化的方式来复用有限的外设资源</li>\n<li>解决方法：全虚拟化、半虚拟化、硬件虚拟化</li>\n</ul>\n</blockquote>\n<h2 id=\"xen-与-kvm\"><a class=\"markdownIt-Anchor\" href=\"#xen-与-kvm\">#</a> XEN 与 KVM</h2>\n<ul>\n<li>XEN 架构：本身去充当 VMM，只能够区实现 CPU 虚拟化、内存的虚拟化</li>\n<li>Domain0：基于 XEN 架构下最先启动的一台特权虚拟机，能够直接去管理和使用底层硬件的 IO 设备，并且去划分虚拟 IO 硬件设备给虚拟机来去使用，同时能够去管理普通的虚拟机，配合前后端驱动模型去实现 IO 半虚拟化</li>\n<li>DomainU：普通的虚拟机</li>\n<li>KVM：利用宿主机操作系统的内核去充当 Hypervisor，能够实现 CPU 和内存虚拟化，需要配合 QEMU 模块实现 IO 虚拟化；在 KVM 中称之为 QEMU-KVM，提高使用 IOCTL（操作系统的函数调用），在 /dev/kvm 接口配置 VM 的 IP，实现 IO 虚拟化</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">XEN</th>\n<th style=\"text-align:center\">KVM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">虚拟化类型</td>\n<td style=\"text-align:center\">I 型虚拟化</td>\n<td style=\"text-align:center\">II 型虚拟化</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">实现方式</td>\n<td style=\"text-align:center\">提高 Domain0 实现 IO 虚拟化</td>\n<td style=\"text-align:center\">借助 QEMU 实现 IO 虚拟化</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">逻辑架构区别</td>\n<td style=\"text-align:center\">包括 XEN VMM,</br>Domain0</br>DomainU</td>\n<td style=\"text-align:center\">包括 KVM 内核模块</br>QEMU</br>Libvrit,API 管理工具</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>Libvirt 是用于管理虚拟化平台的开源的 API，后台程序和管理工具。它可以用于管理 KVM、Xen、VMware ESX，QEMU 和其他虚拟化技术。这些 API 在云计算的解决方案中广泛使用。</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/19/7s09b9.png\" alt=\"xenkvm\"></p>\n<h2 id=\"什么是kvm\"><a class=\"markdownIt-Anchor\" href=\"#什么是kvm\">#</a> 什么是 KVM</h2>\n<ul>\n<li>基于内核的虚拟机 Kernel-based Virtual Machine（KVM）是一种内建于 Linux® 中的开源虚拟化技术。具体而言，KVM 可帮助您将 Linux 转变为虚拟机监控程序，使主机计算机能够运行多个隔离的虚拟环境，即虚拟客户机或虚拟机（VM）。</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/19/7s0PER.png\" alt=\"kvmtixi\"></p>\n<h3 id=\"kvm运行模式\"><a class=\"markdownIt-Anchor\" href=\"#kvm运行模式\">#</a> KVM 运行模式</h3>\n<ol>\n<li><strong>Guest Mode</strong> ：指虚拟机，包括 CPU、内存磁盘等虚拟设备，置于一种受限的 CPU 模式下运行</li>\n<li><strong>User Mode</strong> ：指用户空间。主要是 QEMU，用来为虚拟机模拟执行 I/O 类的操作请求</li>\n<li><strong>Kernel Mode</strong> ：指内核空间，可以真正的操作硬件</li>\n</ol>\n<h3 id=\"kvm-io默认状态\"><a class=\"markdownIt-Anchor\" href=\"#kvm-io默认状态\">#</a> KVM I/O 默认状态</h3>\n<blockquote>\n<p>默认状态下技术全虚拟化<br>\n<img data-src=\"https://s4.ax1x.com/2022/01/19/7s0F4x.png\" alt=\"kvmio\"></p>\n</blockquote>\n<p>1、虚拟机中的磁盘设备发起一次 I/O 操作请求，<br>\n2、KVM 模块中的 I/O Trap Code（I/O 捕获程序）将这个 I/O 操作请求捕获至刂进行相应的处理，然后将处理后的请求放到 I/O 共享页中；<br>\n3、KVM 模块会涌知 QEMU, 告诉它有新的 I/O 操作请求放到了共享页中；<br>\n4、QEMU 收到通知后，到共享页中获取该 I/O 操作请求的具体信息；<br>\n5、QEMU 对该清求进行模拟，同时根据 I/O 操作请求的信息调用运行在内核态的设备驱动，去进行真正的 I/O 操作；<br>\n6、通过设备驱动去对硬件 <mark>执行真正的 I/O 操作</mark> ；<br>\n7、QEMU 将执行后的一返回到共享页中，同时通知 KVM 模块已完成了此次的 I/O 操作；<br>\n8、I/O 捕获程序从共享页中将返回的结果读取出来；<br>\n9、I/O 捕获程序将操作结果返回给虚拟机；<br>\n10、虚拟机的将结果返回给发起操作的应用程序。</p>\n<h3 id=\"kvm-io操作virtio\"><a class=\"markdownIt-Anchor\" href=\"#kvm-io操作virtio\">#</a> KVM I/O 操作 ——Virtio</h3>\n<blockquote>\n<p>引入 Virtio，整个 I/O 操作流程就变成半虚拟化了<br>\n<img data-src=\"https://s4.ax1x.com/2022/01/19/7s0E8K.png\" alt=\"virtio\"></p>\n</blockquote>\n<p>1、第一步也是由虚拟机发起 I/O 操作请求；<br>\n2、第二步的时候和使用默认模型不一样，这个 I/O 操作请求不会经过 I/O 捕获程序，而是直接以前后端的形式放到环形缓冲区，同时 KVM 模块涌知后端驱动；<br>\n3、QEMU 到环形缓冲区获取到操作请求的具体信息；<br>\n4、后端驱动直接调用真实的物理设备驱动进行具体的 I/O 操作；<br>\n5、由真实的设备驱动完成此次操作；<br>\n6、QEMU 将完成结果返回到环形缓冲区，并且由 KVM 模块通知前端驱动；<br>\n7、前端驱动从环形缓冲区获取到此次 I/O 操作的结果；<br>\n8、前端驱动将结果返回给具体发起该操作的应用程序。</p>\n<blockquote>\n<p>Virtio 也存在着一些缺点，有些比较老的或者不常用的设备，无法使用，只能使用 QEMU 方式进行模拟。</p>\n</blockquote>\n<ul>\n<li>整个 Virtio 包括前端驱动、vring 和后端驱动组成。</li>\n<li>引入 Virtio，可以跳过 KVM Module 中介，直接把 IO 指令请求交由 QEMU 处理，并且通过 vring 获取到已处理的 I/O 指令，传回到操作系统中。</li>\n<li>提升 I/O 访问的效率，降低 I/O 延迟。</li>\n</ul>\n<h2 id=\"功能特性\"><a class=\"markdownIt-Anchor\" href=\"#功能特性\">#</a> 功能特性</h2>\n<h3 id=\"兼容行业特殊操作系统\"><a class=\"markdownIt-Anchor\" href=\"#兼容行业特殊操作系统\">#</a> 兼容行业特殊操作系统</h3>\n<blockquote>\n<p>Fusion Compute 兼容主流 Windows 和 Linux 操作系统</p>\n</blockquote>\n<h3 id=\"管理架构灵活\"><a class=\"markdownIt-Anchor\" href=\"#管理架构灵活\">#</a> 管理架构灵活</h3>\n<blockquote>\n<p>各个逻辑集群支持 128 个物理机，最大支持 3000 个虚拟机，采用 VRM 主备结构，保证系统的可用性</p>\n</blockquote>\n<h3 id=\"支持gpu虚拟化-gpu直通\"><a class=\"markdownIt-Anchor\" href=\"#支持gpu虚拟化-gpu直通\">#</a> 支持 GPU 虚拟化、GPU 直通</h3>\n<blockquote>\n<p>物理 GPU 在硬件支持虚拟机通过绑定 GPU 直接访问物理 GPU 的部分硬件资源</p>\n</blockquote>\n<h3 id=\"在线调整cpu和内存\"><a class=\"markdownIt-Anchor\" href=\"#在线调整cpu和内存\">#</a> 在线调整 CPU 和内存</h3>\n<blockquote>\n<p>vRAM ，vCPU 不仅支持离线添加 / 删除，支持在线添加<br>\n平台支持在虚拟机运行情况下调整 CPU 和内存规格，虚拟机不需要重启即可生效</p>\n</blockquote>\n<h3 id=\"主机内存超分配\"><a class=\"markdownIt-Anchor\" href=\"#主机内存超分配\">#</a> 主机内存超分配</h3>\n<blockquote>\n<p>主机内存空间与 VM 内存空间不对应，可以超额把内存分给 VM（内存复用技术）</p>\n</blockquote>\n<h3 id=\"内存复用\"><a class=\"markdownIt-Anchor\" href=\"#内存复用\">#</a> 内存复用</h3>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/25/7bywcR.png\" alt=\"neicunfy\"></p>\n<h3 id=\"虚拟机hahigh-availability\"><a class=\"markdownIt-Anchor\" href=\"#虚拟机hahigh-availability\">#</a> 虚拟机 HA（High Availability）</h3>\n<ul>\n<li>\n<p>虚拟机 HA：</p>\n<ul>\n<li>当物理主机或者源 VM 故障时，会根据集群 HA 策略将宕掉的 VM 在正常工作的主机上开启，范围是集群内，HA 有集群策略管控，HA 是在 VM 宕机的时候进行 VM 恢复，要求使用共享存储，当 VRM 故障时，集群内所有 CAN 节点可以自治。（系统高可用性）</li>\n</ul>\n</li>\n<li>\n<p>虚拟机 HA 原理：</p>\n<ul>\n<li>VM 故障或者物理节点故障</li>\n<li>VRM 查询 VM 状态，发现 VM 故障</li>\n<li>VRM 节点判断 VM 有 HA 特性，则根据保存的 VM 信息（规格，卷等信息）选择可用的 CNA 主机启动 VM</li>\n<li>CAN 节点收到 HA 请求，根据 VM 规格，卷信息创建新的 VM，启动过程中，将 VM 之前的卷重新挂载，包括用户卷</li>\n</ul>\n</li>\n<li>\n<p>HA 自制：集群下主机通过选举一个主节点，来监控每个主机的状态并维护虚拟机列表；当主机发生故障时，主节点负责将故障节点上的虚拟机在其他主机上启动。</p>\n</li>\n</ul>\n<h3 id=\"虚拟机热迁移\"><a class=\"markdownIt-Anchor\" href=\"#虚拟机热迁移\">#</a> 虚拟机热迁移</h3>\n<blockquote>\n<p>基于内存压缩传输技术，虚拟机热迁移效率提升 1 倍。<br>\n虚拟机磁盘数据位置不变，只更改映射关系</p>\n</blockquote>\n<h3 id=\"动态资源调度\"><a class=\"markdownIt-Anchor\" href=\"#动态资源调度\">#</a> 动态资源调度</h3>\n<blockquote>\n<p>同一集群内，VM 由系统根据策略自动负载均衡。<br>\n负载均衡算法优化，避免 VM 无效迁移。<br>\nDRS: Dynamic Resource Schedule，又称为计算资源调度自动化。FusionCompute 的计算集群，配合基于 VIMS 文件系统的共享存储；DRS 算法实时监控集群中每个计算节点的资源使用情况，引用 VMOTION 功能，智能迁移负荷高节点上虚拟机到资源充足的节点上；均衡各节点资源使用并保障业务有充足资源可用。因此，DRS 是实现自动负载均衡的基础</p>\n</blockquote>\n<h3 id=\"dpm分布式电源管理\"><a class=\"markdownIt-Anchor\" href=\"#dpm分布式电源管理\">#</a> DPM 分布式电源管理</h3>\n<blockquote>\n<p>系统自动选择合适的物理机上下电，减小迁移 VM 数量。<br>\n保证小部分物理机处理休眠态，以快速满足新增业务所需资源。<br>\n电源管理自动化功能会周期性地检查集群中服务器的资源使用情况，如果集群中资源利用率不足，则会将多余的主机下电节能，下电前会将虚拟机迁移至其他主机；如果集群资源过度利用，则会将离线的主机上电，以增加集群资源，减轻主机的负荷。</p>\n</blockquote>\n",
            "tags": [
                "云计算"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/Fusion%20Compute%E7%AE%80%E4%BB%8B",
            "url": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/Fusion%20Compute%E7%AE%80%E4%BB%8B",
            "title": "Fusion Compute简介",
            "date_published": "2022-01-16T05:42:42.000Z",
            "content_html": "<h2 id=\"什么是fusion-compute\"><a class=\"markdownIt-Anchor\" href=\"#什么是fusion-compute\">#</a> 什么是 Fusion Compute？</h2>\n<ul>\n<li>Fusion Compute 是云操作系统软件，主要负责硬件资源的虚拟化，以及对虚拟资源、业务资源、用户资源的集中管理。它 <mark>采用虚拟计算、虚拟存储、虚拟网络等技术</mark> ，完成计算资源、存储资源、网络资源的虚拟化。同时通过统一的接口， <mark>对这些虚拟资源进行集中调度和管理，从而降低业务的运行成本</mark> ，保证系统的安全性和可靠性，协助运营商和企业构筑安全、绿色、节能的云数据中心能力。</li>\n</ul>\n<h2 id=\"组件之cna与vrm\"><a class=\"markdownIt-Anchor\" href=\"#组件之cna与vrm\">#</a> 组件之 CNA 与 VRM</h2>\n<ul>\n<li>CNA：计算节点代理，能够实现硬件设备资源的池化。包括 UVP 和 VNA\n<ul>\n<li>UVP：统一的虚拟化平台，实现硬件资源的池化。</li>\n<li>VNA：虚拟节点代理，能够实现 CNA 与 VRM 进行通信。（相当于一个中转站）</li>\n</ul>\n</li>\n<li>VRM：虚拟集群管理模块。能够提供给管理员一个 Web Portal 界面，以及实现对整个系统资源管理、配置、日志、告警等等维护管理的功能。</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/22/7f40ZF.png\" alt=\"fcjiagou\"></p>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/22/7f4Ba4.png\" alt=\"fczuoyong\"></p>\n<blockquote>\n<p>CNA 可以看做是一个主机（或是虚拟机），他负责调配本节点上的所有硬件资源，而 VRM 是一个统一管理所有主机的一个中间组件，当 VRM 宕机时，CNA 不会受到影响，因为 VRM 起到的仅是管理主机的功能（VRM 类似于一个虚拟化中心）</p>\n</blockquote>\n<h2 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\">#</a> 练习</h2>\n<ol>\n<li class=\"quiz\">\n<p>在计算虚拟化中，为虚拟机分配 CPU 和内存的是<span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li class=\"options\">Guest OS </li>\n<li class=\"correct\">VMM</li>\n<li class=\"correct\">Hypervisor</li>\n<li class=\"options\">Host OS </li>\n</ul>\n<blockquote>\n<ul>\n<li>VMM 和 HYpervisor 其实是同一种组件的不同说法</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>开源的虚拟化技术都为 I 型虚拟化，闭源的虚拟化技术都为 II 型虚拟化<span class=\"gap\"></span> 。</p>\n<ul class=\"options\">\n<li class=\"options\">TRUE </li>\n<li class=\"correct\">FALSE</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "云计算"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%AE%80%E4%BB%8B",
            "url": "https://peter-pan001.github.io/my-blog/%E4%BA%91%E8%AE%A1%E7%AE%97/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%AE%80%E4%BB%8B",
            "title": "云计算简介",
            "date_published": "2022-01-15T14:25:37.000Z",
            "content_html": "<h2 id=\"云计算能做什么\"><a class=\"markdownIt-Anchor\" href=\"#云计算能做什么\">#</a> 云计算能做什么？</h2>\n<ol>\n<li>产生：通过云资源池，云服务器集群上获取云端资源</li>\n<li>传输：通过网络链接，如 DRS、ECS 服务等</li>\n<li>使用：网络前端页面、app 控制</li>\n</ol>\n<ul>\n<li>常见生活中的云计算：\n<ul>\n<li>百度网盘</li>\n<li>网易云音乐</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"云计算优势\"><a class=\"markdownIt-Anchor\" href=\"#云计算优势\">#</a> 云计算优势</h2>\n<ol>\n<li>按需自助服务</li>\n<li>广泛网络接入</li>\n<li>资源池化 （将同类的资源转化为资源池的形式，把所有资源分解到最小单位）</li>\n<li>快速弹性伸缩 （快速指带宽网速；弹性指计算弹性，即 CPU、内存资源的弹性分配；伸缩指初期服务与后期服务的伸缩，前期计算量少，后期逐步增大）</li>\n<li>可计量服务（例如网盘内存扩容，除基础服务以外的服务额外收费）</li>\n</ol>\n<h2 id=\"云计算定义\"><a class=\"markdownIt-Anchor\" href=\"#云计算定义\">#</a> 云计算定义</h2>\n<blockquote>\n<p>云计算是一种模型，它可以随时随地灵活地从可配置计算资源共享池中获取所需得到资源，资源能快速供应并释放，是管理资源的工作量与服务提供商的交互降低到最低限度<br>\n通俗来说，云计算是通过互联网可以使用足够强大的计算机为用户提供服务，这种服务的使用率可以使用统一的单位来描述</p>\n</blockquote>\n<h2 id=\"云计算的发展\"><a class=\"markdownIt-Anchor\" href=\"#云计算的发展\">#</a> 云计算的发展</h2>\n<ul>\n<li>step1:<strong> 计算虚拟化</strong>\n<ul>\n<li>Hyper-v</li>\n<li>XEN 、   KVM</li>\n<li>VMware ESX</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>虚拟化、更好的资源利用率</p>\n</blockquote>\n<ul>\n<li>step2：<strong>软件定义与整合</strong>\n<ul>\n<li>OpenStack</li>\n<li>VMware     AWS</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>基础设施云化，资源服务标准化、自动化</p>\n</blockquote>\n<ul>\n<li>step3：<strong>云原生与重构业务</strong>\n<ul>\n<li>Docker</li>\n<li>CoreOS</li>\n<li>Cloud Foundry</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>应用云化，敏捷应用开发与生命周期管理</p>\n</blockquote>\n<h2 id=\"云计算部署模式\"><a class=\"markdownIt-Anchor\" href=\"#云计算部署模式\">#</a> 云计算部署模式</h2>\n<ul>\n<li>大方向是 <mark>以企业防火墙为界限</mark> ，在企业内部的称私有云，在企业外部的称公有云，两者兼具的称混合云</li>\n<li>主要有建设者 C 和使用者 U 两个角色\n<ul>\n<li>私有云：C 等于 U</li>\n<li>公有云：C 不等于 U</li>\n<li>行业云：C 不完全等于 U</li>\n<li>混合云：私有 + 私有；私有 + 公有；公有 + 公有</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/15/7YafJ0.png\" alt=\"deploymode\"></p>\n<h2 id=\"云计算的服务模式\"><a class=\"markdownIt-Anchor\" href=\"#云计算的服务模式\">#</a> 云计算的服务模式</h2>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/15/7YaXJx.png\" alt=\"servicemode\"></p>\n<ul>\n<li>IaaS：基础设施即服务，直接出租基础设施给用户来去使用，如 ECS、EVS、OBS</li>\n<li>PaaS：平台即服务，将 IaaS 打包出租给用户来去使用，比如数据库、中间件</li>\n<li>SaaS：软件即服务，直接呈现给用户所去使用的一个应用程序，如 OA 办公系统</li>\n</ul>\n",
            "tags": [
                "云计算"
            ]
        }
    ]
}