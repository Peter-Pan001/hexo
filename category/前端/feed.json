{
    "version": "https://jsonfeed.org/version/1",
    "title": "理 想 净 土 • All posts by \"前端\" category",
    "description": "不必匆忙，不必火花四溅，不必成为别人，只需成为自己",
    "home_page_url": "https://peter-pan001.github.io/my-blog",
    "items": [
        {
            "id": "https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/%E6%8E%A5%E7%BB%AD%E5%89%8D%E7%AB%AFH5+CSS3/",
            "url": "https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/%E6%8E%A5%E7%BB%AD%E5%89%8D%E7%AB%AFH5+CSS3/",
            "title": "接续前端H5+CSS3",
            "date_published": "2021-03-25T02:42:56.000Z",
            "content_html": "<h2 id=\"CSS定位（position）\"><a href=\"#CSS定位（position）\" class=\"headerlink\" title=\"CSS定位（position）\"></a>CSS定位（position）</h2><h3 id=\"定位概述\"><a href=\"#定位概述\" class=\"headerlink\" title=\"定位概述\"></a>定位概述</h3><ul>\n<li><font color=purple>定位(position)是一种更加高级的布局手段</li>\n<li>通过定位可以将元素摆放到页面的<strong>任意位置</strong></li>\n<li>使用position属性来设置定位<ul>\n<li><strong>可选值</strong><ul>\n<li><strong>static</strong>&nbsp;默认值，元素是静止的则没有开启定位</li>\n<li><strong>relative</strong>&nbsp;开启元素的相对定位</li>\n<li><strong>absolute</strong>&nbsp;开启元素的绝对定位</li>\n<li><strong>fixed</strong>&nbsp;开启元素的固定定位</li>\n<li><strong>sticky</strong>&nbsp;开启元素的粘滞定位&lt;/font&gt;</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相对定位-relative-position\"><a href=\"#相对定位-relative-position\" class=\"headerlink\" title=\"相对定位(relative position)\"></a>相对定位(relative position)</h3><ul>\n<li><font color=brown>当元素的position属性设置值为relative则开启相对定位</li>\n<li><strong>相对定位的特点:</strong><ol>\n<li>元素开启相对定位以后，如果不设置<strong>偏移量元素</strong>，则不会发生任何变化</li>\n<li>相对定位是参照于元素在文档流中的位置进行定位的</li>\n<li>相对定位<strong>会提升元素的层级</strong></li>\n<li>相对定位<strong>不会使元素脱离文档流（即不会改变元素性质）</strong></li>\n</ol>\n</li>\n<li><strong>偏移量(offset)</strong><ul>\n<li>当元素开启了定位以后，可以通过偏移量来设置元素的位置</li>\n<li><strong>可选值：</strong><ul>\n<li><strong>top</strong><ul>\n<li>定位元素和定位位置上边的距离</li>\n<li><strong>top值越大，定位元素越向下移动</strong></li>\n</ul>\n</li>\n<li><strong>bottom</strong><ul>\n<li>定位元素和定位位置下边的距离</li>\n<li>定位元素垂直方向的位置由top和bottom两个属性来控制<ul>\n<li>通常情况下我们只会使用其一</li>\n</ul>\n</li>\n<li><strong>bottom值越大，定位元素越向上移动</strong></li>\n</ul>\n</li>\n<li><strong>left</strong><ul>\n<li>定位元素和定位位置的左侧距离</li>\n<li><strong>left值越大，定位元素越向右移动</strong></li>\n</ul>\n</li>\n<li><strong>right</strong><ul>\n<li>定位元素和定位位置的右侧距离</li>\n<li><strong>right值越大，定位元素越向左移动</strong></li>\n<li>定位元素水平方向的位置由left和right两个属性来控制<ul>\n<li>通常情况下我们只会选择其一</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"绝对定位-absolute-position\"><a href=\"#绝对定位-absolute-position\" class=\"headerlink\" title=\"绝对定位(absolute position)\"></a>绝对定位(absolute position)</h3><ul>\n<li>当元素的position属性的值设置为absolute时，则开启了元素的绝对定位</li>\n<li><strong>绝对定位的特点</strong><ol>\n<li>开启绝对定位后，如果不设置偏移量，元素不会发生任何变化</li>\n<li>开启绝对定位后，元素<strong>会从文档流中脱离</strong></li>\n<li><strong>绝对定位会改变元素的性质</strong>，行内变成块，块的宽度被内容撑开</li>\n<li>绝对定位会<strong>使元素提升一个层级</strong></li>\n<li>绝对定位元素是相当于其包含块进行定位的</li>\n</ol>\n</li>\n<li><strong>包含块(containing block)</strong><ul>\n<li>正常情况下：<ul>\n<li>包含块就是高于当前元素最近的祖先块元素</li>\n</ul>\n</li>\n<li>绝对定位的包含块：<ul>\n<li>包含块就是离它最近的开启了定位的祖先元素<ul>\n<li>如果所有祖先元素都没有开启定位则根元素就是它的包含块（根元素—html，也称初始包含块）  </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"固定定位\"><a href=\"#固定定位\" class=\"headerlink\" title=\"固定定位\"></a>固定定位</h3><ul>\n<li>当元素的position属性设置为fixed时，则开启了元素的固定定位</li>\n<li>固定定位<strong>也是一种特殊的绝对定位</strong>，因此固定定位的大部分特点和绝对定位一样<ul>\n<li>唯一不同的是固定定位<strong>永远参照于浏览器的视口进行定位</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"粘滞定位\"><a href=\"#粘滞定位\" class=\"headerlink\" title=\"粘滞定位\"></a>粘滞定位</h3><ul>\n<li>当元素的position属性设置为sticky是，则开启了元素的粘滞定位</li>\n<li>粘滞定位与相对定位类似&lt;/font&gt;</li>\n</ul>\n<h2 id=\"元素的层级\"><a href=\"#元素的层级\" class=\"headerlink\" title=\"元素的层级\"></a>元素的层级</h2><ul>\n<li><p>对于开启了定位元素，可以通过position属性来指定元素的层级</p>\n<ul>\n<li>Z-index需要一个整数作为参数，值越大元素层级越高</li>\n<li>元素的层级越高越优先显示</li>\n</ul>\n</li>\n<li><p>如果元素的层级一样，则优先显示靠下的元素</p>\n</li>\n<li>祖先的元素的层级再高也不会盖住后代元素</li>\n</ul>\n<h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><ul>\n<li><p><strong>字体样式</strong></p>\n<ul>\n<li><strong>color</strong>&nbsp;用来设置字体颜色</li>\n<li><strong>font-size</strong>&nbsp;字体的大小<ul>\n<li>em&nbsp;相当于当前元素的一个font-size</li>\n<li>rem&nbsp;相当于根元素的一个font-size</li>\n</ul>\n</li>\n<li><strong>font-family</strong>字体格式<ul>\n<li>可选值：<ul>\n<li><strong>serif</strong> 衬线字体</li>\n<li><strong>sans-serif</strong> 非衬线字体</li>\n<li><strong>monospace</strong> 等宽字体</li>\n</ul>\n</li>\n<li>定义：<code>font-family</code>可以同时指定多个字体，多个字体键使用<code>,</code>隔开</li>\n<li>字体生效时优先使用第一个，第一个无法使用则使用第二个 以此类推<pre><code class=\"lang-html\">&lt;style&gt;\n  p{\n      color: red;\n      font-size: medium;\n      font-family: &#39;Courier New&#39;, Courier, monospace;\n  }\n&lt;/style&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>当客户的电脑上没有指定的字体时，我们选择的字体无法在客户机上使用，此时可以通过<code>@font-face</code>让客户在服务器上把字体下载下来</p>\n<ul>\n<li>关于<code>@font-face</code>的使用<ul>\n<li><strong>代码示例</strong><pre><code class=\"lang-html\">&lt;style&gt;\n            @font-face {\n      /* 自定义字体名称 */\n      font-family: &#39;my-font-face&#39;;\n      /* 资源的网站 */\n      src: url(&#39;my-font-face&#39;);\n  }\n&lt;/style&gt;\n</code></pre>\n</li>\n<li><font color=red>注意：使用```@font-face```可能会出现的版权的问题，或者服务器资源堵塞的问题，导致字体无法使用，因此该方法请谨慎使用</font>\n\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2 id=\"图标字体\"><a href=\"#图标字体\" class=\"headerlink\" title=\"图标字体\"></a>图标字体</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><ul>\n<li><p><strong>我们在制作网页的时候，可能会用到大量的图片，他们可能很小，例如：</strong><br><img data-src=\"image/iconface.png\" alt=\"face1\"></p>\n<p><img data-src=\"image/fontfaces1.png\" alt=\"face2\"></p>\n</li>\n<li><strong>此时我们可以使用图标字体来把图片做成字体，</strong></li>\n<li><strong>只需要导入字体即可使用这些小的图片</strong> </li>\n<li><strong>然后通过font-face来对字体进行引用</strong><ul>\n<li><font color=purple>推荐一个字体网站：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mb250YXdlc29tZS5jb20uY24v\">http://www.fontawesome.com.cn/</span></li>\n<li>使用该网站下载的字体文件需要进行解压，然后把文件移入项目中</li>\n<li><strong>注意：该文件必须和css文件放在同一个文件夹中，否则会出现路径问题，无法引入</strong></li>\n</ul>\n</li>\n<li><strong>最后在引入<code>all.css</code></strong><pre><code class=\"lang-html\">&lt;link rel=&quot;stylesheet&quot; href=&quot;./fa/css/all.css&quot;&gt;\n</code></pre>\n<ul>\n<li>此时引用成功<h3 id=\"使用图标字体\"><a href=\"#使用图标字体\" class=\"headerlink\" title=\"使用图标字体\"></a>使用图标字体</h3></li>\n<li><strong>方法一：</strong></li>\n</ul>\n</li>\n<li>直接通过类名使用图标字体<pre><code class=\"lang-html\">&lt;i class=&quot;fa fa-car&quot;&gt;&lt;/i&gt;\n&lt;i class=&quot;fa fa-car&quot; style=&quot;font-size:48px;&quot;&gt;&lt;/i&gt;\n&lt;i class=&quot;fa fa-car&quot; style=&quot;font-size:60px;color:red;&quot;&gt;&lt;/i&gt;\n</code></pre>\n</li>\n<li><strong>详细的font awesome教程尽在</strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9mb250LWF3ZXNvbWUvZm9udGF3ZXNvbWUtdHV0b3JpYWwuaHRtbA==\">https://www.runoob.com/font-awesome/fontawesome-tutorial.html</span></li>\n</ul>\n<ul>\n<li><p><strong>方法二：</strong></p>\n<ul>\n<li>可以通过伪元素对图标字体进行插入<ul>\n<li>首先使用<code>before</code>或<code>after</code>伪元素标签来选中需要的图标字体</li>\n<li>然后在<code>content</code>中输入对应图标字体的编码</li>\n<li>设置字体样式<code>font-family</code>和<code>font-weight</code>即可</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>方法三：</strong></p>\n<ul>\n<li>通过实体来使用图标字体<ul>\n<li>在实体中加入<code>&amp;#</code>+图标字体编码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>关于图标字体库——-iconfont</strong></p>\n<ul>\n<li>可以使用阿里的字体库：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24v\">https://www.iconfont.cn/</span><ul>\n<li>不过可能存在版权问题，商用的项目不建议使用</li>\n<li>在使用该网站的图标字体时<ul>\n<li>如果使用彩色的图标字体，就直接使用图片的格式进行下载</li>\n<li>如果是黑白的图标字体，则直接添加到项目中打包下载</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>也可以使用font awesome ：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mb250YXdlc29tZS5jb20uY24v\">http://www.fontawesome.com.cn/</span><ul>\n<li>不过该网站有的需要付费使用，免费的太过拉胯</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>具体使用的代码展示</strong></p>\n<pre><code class=\"lang-html\">   &lt;style&gt;\n      i.iconfont {\n          font-size: 100px;\n      }\n\n      p::before {\n          content: &#39;\\e686&#39;;\n          font-family: &quot;iconfont&quot;;\n          font-size: 150px;\n      }\n  &lt;/style&gt; \n  &lt;body&gt;\n  &lt;p&gt;\n      住在山里真不错\n  &lt;/p&gt;\n  &lt;i class=&quot;fa fa-car&quot;&gt;&lt;/i&gt;\n  &lt;i class=&quot;fa fa-car&quot; style=&quot;font-size:48px;&quot;&gt;&lt;/i&gt;\n  &lt;i class=&quot;fa fa-car&quot; style=&quot;font-size:60px;color:red;&quot;&gt;&lt;/i&gt;\n\n  &lt;!-- 使用阿里图标字体库方法一：通过实体使用编码 --&gt;\n  &lt;i class=&quot;iconfont&quot;&gt;&amp;#xe7d0;&lt;/i&gt;\n  &lt;i class=&quot;iconfont&quot;&gt;&amp;#xe61d;&lt;/i&gt;\n  &lt;i class=&quot;iconfont&quot;&gt;&amp;#xe655;&lt;/i&gt;\n  &lt;i class=&quot;iconfont&quot;&gt;&amp;#xe662;&lt;/i&gt;\n  &lt;i class=&quot;iconfont&quot;&gt;&amp;#xe61b;&lt;/i&gt;\n\n  &lt;!-- 也可以使用类名来使用 --&gt;\n  &lt;i class=&quot;iconfont icon-biaozhi1&quot;&gt;&lt;/i&gt;\n  &lt;!-- 也可以使用伪元素对图标字体进行插入 --&gt;\n  &lt;p&gt;\n      传奇永不谢幕\n  &lt;/p&gt;\n\n  &lt;/body&gt;\n</code></pre>\n</li>\n</ul>\n<h2 id=\"行高（line-height）\"><a href=\"#行高（line-height）\" class=\"headerlink\" title=\"行高（line height）\"></a>行高（line height）</h2><ul>\n<li>定义：<ul>\n<li>行高指文字占用页面的实际高度</li>\n</ul>\n</li>\n<li>属性值：<code>line-height</code><ul>\n<li>可以直接设置一个大小（单位为px或em）</li>\n<li>也可以设置一个整数（1===100px，即单倍行高，与word中的行距相类似）</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"字体距\"><a href=\"#字体距\" class=\"headerlink\" title=\"字体距\"></a>字体距</h2><ul>\n<li><p><strong>字体框就是字体存在的格子，可以设置大小和边框的宽度</strong></p>\n<ul>\n<li><p>通过<code>font-size</code>设置大小<br>```html<br><style></p>\n<pre><code>div{\n    font-size: 50px;\n\n    line-height: 200px;\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<pre><code>         /* 边框设置 */\n        border: 1px red solid;\n    }\n&lt;/style&gt;\n```\n</code></pre><hr>\n<h2 id=\"字体的简写属性\"><a href=\"#字体的简写属性\" class=\"headerlink\" title=\"字体的简写属性\"></a>字体的简写属性</h2><pre><code class=\"lang-html\">  &lt;style&gt;\n        div {\n            line-height: 2;\n            /* \n                font 可以设置字体相关的所有属性（字体的简写属性）\n                    标准语法：\n                        font:  字体大小 /行高  字体族\n                        该简写中的行高可以省略不写，但不代表没有设置\n                        而是会以默认值使用（并且覆盖上面设置的行高line-height）\n            */\n\n            border: 1px red solid;\n            /* font-family: Verdana, Geneva, Tahoma, sans-serif; */\n            font: 50px/3 Verdana, Geneva, Tahoma, sans-serif;\n        }\n    &lt;/style&gt;\n    &lt;body&gt;\n    &lt;div&gt;\n        三年前在南京我亻主的地方有一道后门，每晚我打开后门，便看见一个静寂的夜。下面是一片菜\n        园，上面是星群密布的蓝天。星光在我们的肉眼里虽然微小，然而它亻吏我们觉得光明无处不在。那\n        时候我正在读一些关于天文学的书，也认得一些星星，好像它们是我的朋友，它们常常在和我谈话\n    &lt;/div&gt;\n    &lt;/body&gt;\n</code></pre>\n<hr>\n<h2 id=\"字体的水平对齐和垂直对齐\"><a href=\"#字体的水平对齐和垂直对齐\" class=\"headerlink\" title=\"字体的水平对齐和垂直对齐\"></a>字体的水平对齐和垂直对齐</h2><ul>\n<li><code>Text-align</code> 文本的水平对齐<ul>\n<li>可选值：<ul>\n<li>left:左端对齐</li>\n<li>right：右端对齐</li>\n<li>center：居中对齐</li>\n<li>justify：两端对齐</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><code>vertical-align</code> 文本的垂直对齐</p>\n<ul>\n<li>可选值：<ul>\n<li>baseline 默认值 基线对齐</li>\n<li>top 顶部对齐</li>\n<li>bottom 底部对齐</li>\n<li>middle 居中对齐</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>代码演示：<br>```html<br><style></p>\n<pre><code>  div{\n      border: 1px red solid;\n\n      width: 800px;\n      line-height: 5;\n      text-align: center;\n  }\n  span{\n      border: 1px red solid;\n      font-size: 20px;\n      vertical-align: baseline;\n</code></pre></li>\n</ul>\n<pre><code>    }\n&lt;/style&gt;\n&lt;body&gt;\n&lt;div&gt;\n    三年前在南京我亻主的地方有一道后门，每晚我打开后门，便看见一个静寂的夜。下面是一片菜\n    园，上面是星群密布的蓝天。星光在我们的肉眼里虽然微小，然而它亻吏我们觉得光明无处不在。那\n    时候我正在读一些关于天文学的书，也认得一些星星，好像它们是我的朋友，它们常常在和我谈话\n\n&lt;/div&gt;\n&lt;span&gt;住在山里真不错&lt;/span&gt;\n&lt;/body&gt; \n```\n- 效果：\n![duiqi](./H5文件/字体对齐.png)\n</code></pre><h2 id=\"其他的文本样式\"><a href=\"#其他的文本样式\" class=\"headerlink\" title=\"其他的文本样式\"></a>其他的文本样式</h2><h3 id=\"文本修饰\"><a href=\"#文本修饰\" class=\"headerlink\" title=\"文本修饰\"></a>文本修饰</h3><ul>\n<li><p><code>text-decoration</code> 设置文本修饰</p>\n<ul>\n<li>可选值：<ul>\n<li>none 什么都没有</li>\n<li>underline 下划线</li>\n<li>line- through 删除线</li>\n<li>overline 上划线<br>```html<br><style><br>  .box{<pre><code>  font-size: 50px;\n  font-family: 微软雅黑;\n  text-decoration: underline red;\n</code></pre>  }<br>&lt;/style&gt;<br><body><div class=\"box\">\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit. Autem quam soluta maiores sit? \n      Ipsum cum beatae impedit repellat at! Magnam consequuntur maiores dolor obcaecati nemo \n      ab vero qui quidem vel.\n</div>\n\n</li>\n</ul>\n</li>\n</ul>\n<p>&lt;/body&gt;<br>```</p>\n</li>\n<li>效果展示：<br><img data-src=\"./H5文件/其他文本样式.png\" alt=\"文本其他样式\"> </li>\n</ul>\n<hr>\n<h3 id=\"处理留白\"><a href=\"#处理留白\" class=\"headerlink\" title=\"处理留白\"></a>处理留白</h3><ul>\n<li><code>white-space</code> 设置网页如何处理空白<ul>\n<li>可选值：<ul>\n<li>normal 正常</li>\n<li>nowrap 不换行</li>\n<li>pre 保留空白</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>代码展示：</strong><pre><code class=\"lang-html\">&lt;style&gt;\n        .box2{\n            border: 2px orange solid;\n            white-space: pre;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n&lt;/style&gt;\n&lt;body&gt;\n    &lt;div class=&quot;box2&quot;&gt;\n        三年前在南京我主的地方有一道后门，每晚我打开后门，便看见一个静寂的夜。下面是一片菜\n        园，上面是星群密布的蓝天。星光在我们的肉眼里虽然微小，然而它亻吏我们觉得光明无处不在。那\n        时候我正在读一些关于天文学的书，也认得一些星星，好像它们是我的朋友，它们常常在和我谈话\n    &lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n</li>\n<li>效果：<br><img data-src=\"./H5文件/处理空白.png\" alt=\"留白\"></li>\n</ul>\n<hr>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><blockquote>\n<p><strong>在CSS中，我们可以通过设置属性来对页面的背景进行设置</strong></p>\n</blockquote>\n<ul>\n<li><strong>background-color:</strong><ul>\n<li><strong>定义：</strong>该属性用来设置背景图片的颜色 </li>\n<li><strong>一些特性：</strong><ul>\n<li>可以<font color=red>同时设置</font>背景图片和背景颜色，这样背景颜色将会成为图片的背景色</li>\n<li>大小问题：<ul>\n<li>如果背景的图片小于元素，则背景图片会自动在元素中填满</li>\n<li>如果背景的图片大于元素，一部分的图片背景将无法显示在该元素中</li>\n<li>如果背景的图片等于元素，则会正常显示</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p><strong>background-image:</strong></p>\n<ul>\n<li><strong>定义：</strong>该属性用来引入背景图片（通过图片的路径实现）</li>\n</ul>\n</li>\n<li><p><strong>background-repeat:</strong></p>\n<ul>\n<li><strong>定义：</strong>该属性用于设置背景的重复方式（也可以说是图片的重复）</li>\n<li><strong>可选属性值</strong><ul>\n<li><code>repeat</code>默认值，背景会同时向x轴、y轴方向重复</li>\n<li><code>repeat-x</code>此时只沿x轴方向重复</li>\n<li><code>repeat-y</code> 此时只沿y轴方向重复</li>\n<li><code>no-repeat</code>背景不会重复</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><p><strong>background-position：</strong></p>\n<ul>\n<li><strong>定义：</strong>该属性用户设置图片的位置</li>\n<li><strong>使用方位属性值的设置方式：</strong><ul>\n<li>使用<code>top</code>、<code>left</code>、<code>right</code>、<code>bottom</code>、<code>center</code>表示要设置图片背景的位置</li>\n<li>**设置方位是必须要同时设定两个值，如果只写一个第二个值会默认为<code>center</code></li>\n</ul>\n</li>\n<li><p><strong>使用像素值代表偏移量的设置方式：</strong></p>\n<pre><code class=\"lang-html\">&lt;style&gt;\n    .box1{\n        width: 512px;\n        height: 512px;\n\n        background-color: orchid;\n\n        background-image: url(&quot;./img/timg.gif&quot;);\n\n        background-position: -52px 25px;\n    }\n&lt;/style&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p><strong>background-clip:</strong></p>\n<ul>\n<li><strong>定义：</strong>设置背景的范围</li>\n<li><strong>可选值：</strong><ul>\n<li><code>border-box</code>默认值 ，背景会出现在边框的下边<br><img data-src=\"./H5文件/img/背景设置01.png\" alt=\"bj01\"> </li>\n<li><code>padding-box</code> 背景不会出现在边框，<strong>只出现在内容区和内边距</strong><br><img data-src=\"./H5文件/img/背景设置03.png\" alt=\"bj02\"> </li>\n<li><code>content-box</code> 背景<strong>只会出现在内容区</strong><br><img data-src=\"./H5文件/img/背景设置02.png\" alt=\"bj03\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><strong>background-origin:</strong>（图片需要正常显示则使用该属性）<ul>\n<li><strong>定义：</strong>背景图片的偏移量计算的原点</li>\n<li><strong>可选值：</strong><ul>\n<li><code>padding-box</code>默认值，background-position从内边距处开始计算</li>\n<li><code>content-box</code>背景图片的偏移量从内容区处开始计算 </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><strong>background-size:</strong><ul>\n<li><strong>定义：</strong>设置背景图片的大小<pre><code class=\"lang-html\">&lt;style&gt;\n  .box{\n    background-size:属性值1 属性值2;\n  }\n&lt;/style&gt;\n</code></pre>\n<ul>\n<li><strong>属性值1表示图片的宽度，属性值2表示图片的高度</strong><ul>\n<li>只写一个，另一个则为auto</li>\n</ul>\n</li>\n<li><strong>其他可选值</strong><ul>\n<li><code>cover</code>图片比例不变，将元素铺满</li>\n<li><code>contain</code>图片比例不变，将图片在元素中完整显示</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><strong>background-attachment：</strong><ul>\n<li>设置背景图片是否跟随元素移动</li>\n<li><strong>属性值：</strong><ul>\n<li><code>scoll</code>默认值，背景图片会随元素移动</li>\n<li><code>fixed</code>背景会固定在页面</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n",
            "tags": [
                "css"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AFHTML5+CSS3/",
            "url": "https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AFHTML5+CSS3/",
            "title": "前端HTML5+CSS3",
            "date_published": "2021-03-25T02:42:18.000Z",
            "content_html": "<h2 id=\"网页简史\"><a href=\"#网页简史\" class=\"headerlink\" title=\"网页简史\"></a>网页简史</h2><h3 id=\"诞生\"><a href=\"#诞生\" class=\"headerlink\" title=\"诞生\"></a>诞生</h3><ul>\n<li>万维网发明人——蒂姆.伯纳斯-李</li>\n<li>1991.08.06，世界上第一个服务器和第一个网站在欧洲核子研究中心上线</li>\n</ul>\n<h3 id=\"W3C标准的建立\"><a href=\"#W3C标准的建立\" class=\"headerlink\" title=\"W3C标准的建立\"></a>W3C标准的建立</h3><ul>\n<li>伯纳斯李于<font color=red>1994年建立万维网联盟（W3C）</font>，W3C为了制订网页开发的标准，以使用不同的浏览器达到相同的效果</li>\n</ul>\n<h3 id=\"网页的组成\"><a href=\"#网页的组成\" class=\"headerlink\" title=\"网页的组成\"></a>网页的组成</h3><ul>\n<li><strong>结构</strong><ul>\n<li>HTML用于描述网页的结构</li>\n</ul>\n</li>\n<li><strong>表现</strong><ul>\n<li>CSS用于控制页面中元素的样式</li>\n</ul>\n</li>\n<li><strong>行为</strong><ul>\n<li>JavaScript用于响应用户的操作</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><ul>\n<li><strong>HTML (HYpertext Markup Language)<font color=red>超文本标记语言</font></strong></li>\n<li>主要负责网页的结构</li>\n<li>通过使用标签的方式标识网页的不同组成部分</li>\n<li><p>超文本即超链接，即一个网页跳转到另一个网页的连接</p>\n</li>\n<li><p>简单的HTML代码</p>\n</li>\n</ul>\n<pre><code class=\"lang-html\">&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;网页文本标题&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;一级标题&lt;/h1&gt;\n        &lt;h2&gt;二级标题&lt;/h2&gt;\n        &lt;p&gt;段落&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h3 id=\"自结束标签与注释\"><a href=\"#自结束标签与注释\" class=\"headerlink\" title=\"自结束标签与注释\"></a>自结束标签与注释</h3><ul>\n<li><p>类似于</p>\n<pre><code class=\"lang-html\">&lt;img &gt;\n&lt;img /&gt;\n&lt;img &gt;\n&lt;input /&gt;\n</code></pre>\n<p>就叫做<strong>自结束标签</strong></p>\n</li>\n<li><p><strong>注释</strong></p>\n<ul>\n<li>格式：<pre><code class=\"lang-html\">&lt;!-- 你要注释的内容 --&gt;\n</code></pre>\n</li>\n<li>HTML的注释中的内容会被浏览器给忽略掉，不会在网页中直接显示</li>\n<li>但可以在HTML编辑器中查看源码获取到注释的内容，或者网页中点击右键显示网页源代码也可以</li>\n<li><strong>注释</strong>的作用主要是在多人协同开发的场景中，对其他成员阐述和解释自己的代码，<font color=red>开发过程中要养成写注释的习惯，可以使代码更加简单明了！</font></li>\n<li><strong><font color=red>注释不能嵌套</font></strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"标签中的属性\"><a href=\"#标签中的属性\" class=\"headerlink\" title=\"标签中的属性\"></a>标签中的属性</h3><ul>\n<li><strong>属性</strong>用来设置标签的内容如何显示，在开始标签或自结束标签中设置</li>\n<li>属性是一个<font color=blue>名值对（X=Y）</font></li>\n<li>有些属性有属性值，有些没有，如果有属性值，需要用双引号引出</li>\n<li>多个属性需要空格隔开</li>\n<li>例如：<pre><code class=\"lang-html\">&lt;h1&gt;&lt;font color=&quot;red&quot; size=&quot;3&quot;&gt;这是一个大标题&lt;/font&gt;&lt;/h1&gt;\n</code></pre>\n</li>\n</ul>\n<h3 id=\"文档声明\"><a href=\"#文档声明\" class=\"headerlink\" title=\"文档声明\"></a>文档声明</h3><ul>\n<li><strong>网页版本的演变</strong><ul>\n<li>HTML4</li>\n<li>XHTML2.0</li>\n<li>HTML5（现在使用的版本）</li>\n</ul>\n</li>\n<li><strong>文档声明（doctype）</strong><ul>\n<li><strong>文档声明</strong>是用来告诉浏览器当前网页的版本的</li>\n<li>必须写在HTML文件的第一行</li>\n<li>格式：<pre><code class=\"lang-html\">&lt;!doctype html&gt;\n&lt;!Doctype HTML&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"字符编码\"><a href=\"#字符编码\" class=\"headerlink\" title=\"字符编码\"></a>字符编码</h3><ul>\n<li>所有的数据在计算机中存储是都是以<font color=red>二进制形式</font>存储，包括文字</li>\n<li><strong>编码</strong><ul>\n<li>将字符转换为二进制码的过程称为编码</li>\n</ul>\n</li>\n<li><strong>解码</strong><ul>\n<li>将二进制码转换为字符的过程称为解码</li>\n</ul>\n</li>\n<li><strong>乱码问题</strong><ul>\n<li>如果编码和解码所采用的的字符集不同就会出现乱码问题</li>\n</ul>\n</li>\n<li><strong>常见的字符集</strong><ul>\n<li>ASCII（美国编码）</li>\n<li>ISO088591（欧洲编码）</li>\n<li>GB2313（中国）</li>\n<li>GBK（中国，在GB2313基础下扩充）</li>\n<li>UTF-8（万国码，编辑器的默认编码格式，微软记事本除外）</li>\n</ul>\n</li>\n<li><strong>在HTML5里面设置网页字符集的格式</strong><ul>\n<li>格式：<pre><code class=\"lang-html\">&lt;meta charset=&quot;utf-8&quot;&gt;\n</code></pre>\n<h3 id=\"文档的使用\"><a href=\"#文档的使用\" class=\"headerlink\" title=\"文档的使用\"></a>文档的使用</h3></li>\n</ul>\n</li>\n<li><p>一个标准的HTML文档的代码</p>\n<pre><code class=\"lang-html\">&lt;!doctype html&gt;\n\n&lt;html&gt;\n      &lt;!-- head是网页的头部，head的内容不会在网页中直接出现，而是帮助浏览器或搜索引擎解析网页 --&gt;\n      &lt;head&gt;\n      &lt;!-- meta标签用来设置网页的元数据 --&gt;\n      &lt;meta charset=&quot;utf-8&quot;&gt;\n      &lt;!--titlw中的内容会显示在浏览器的标题栏中，搜索引擎会根据title中的内容来判断网页的主要内容 --&gt;\n      &lt;title&gt;\n          网页解析标题\n      &lt;/title&gt;\n      &lt;/head&gt;\n      &lt;!--网页的内容主体 --&gt;\n      &lt;body&gt;\n\n      &lt;h1&gt;一级标题&lt;/h1&gt;\n\n      &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h3 id=\"vscode编写HTML文档的一些常用快捷键\"><a href=\"#vscode编写HTML文档的一些常用快捷键\" class=\"headerlink\" title=\"vscode编写HTML文档的一些常用快捷键\"></a>vscode编写HTML文档的一些常用快捷键</h3></li>\n<li>打开一个文档的基本结构： ！ +  TAB键</li>\n<li>段落： p + TAB键</li>\n<li>光标下移： Ctrl  + 回车</li>\n</ul>\n<h3 id=\"HTML实体\"><a href=\"#HTML实体\" class=\"headerlink\" title=\"HTML实体\"></a>HTML实体</h3><ul>\n<li>在网页中编写多个空格时，默认情况下会被浏览器自动解析为一个空格</li>\n<li>当我们需要写一下<strong>特殊符号</strong>如大于号小于号等就需要用到HTML的实体</li>\n<li>实体的语法：<ul>\n<li>&amp;实体名;(全英文下)<pre><code class=\"lang-html\">&amp;nbsp;  空格 &quot; &quot;\n&amp;gt;  大于号  &quot; &lt; &quot;\n&amp;lt;  小于号  &quot; &gt; &quot;\n&amp;copy;   版权符号\n&amp;amp;   和号   &quot; &amp; &quot;\n&amp;quot;  引号   &quot; &quot; &quot;\n</code></pre>\n(更多的实体语法参照W3school的HTML教程)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"meta标签\"><a href=\"#meta标签\" class=\"headerlink\" title=\"meta标签\"></a>meta标签</h3><ul>\n<li><strong>关于meta</strong><ul>\n<li>通常所说的META标签，是在HTML网页源代码中一个重要的html标签。META标签<strong>用来描述一个HTML网页文档的属性</strong>，例如作者、日期和时间、网页描述、关键词、页面刷新等。</li>\n<li>META标签是HTML标记HEAD区的一个关键标签，它位于HTML文档的&lt; head &gt;和&lt; title &gt;之间<font color=brown>（有些也不是在&lt; head &gt;和&lt; title &gt;之间）。</font>它提供的信息虽然用户不可见，但却是文档的最基本的元信息。</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>META标签的组成</strong></p>\n<ul>\n<li><strong>两大部分</strong><ul>\n<li>HTTP-EQUIV和NAME变量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>属性</strong><br>|属性|值|描述|<br>|:——-:|:——-:|:—:|<br>|charset|character_set| 定义文档的字符编码|<br>|content|text|定义与http-equiv或name属性相关的元数据|<br>|http-equiv|content-typedefault-style&nbsp;&nbsp;refresh|把 content 属性关联到 HTTP 头部|<br>|name| application-name &nbsp;&nbsp;author&nbsp;&nbsp;   description&nbsp;&nbsp; generator &nbsp;&nbsp;keywords| 把content属性关联到一个名称|<br>(摘自百度百科)</p>\n</li>\n<li><strong>各个功能</strong><ul>\n<li><strong>charset</strong>  指定网页的字符集</li>\n<li><strong>name</strong> 指定数据的名称</li>\n<li><strong>content</strong>  指定数据的内容</li>\n<li><strong>keywords</strong>  表示网站的关键字，可以同时设置多个关键字，使用逗号隔开</li>\n<li><strong>description</strong>   用于指定网站的描述（即搜索引擎的超链接）</li>\n<li><strong>title标签的内容会作为搜索结果的超链接上的文本表示</strong><pre><code class=\"lang-html\">&lt;meta charset=&quot;utf-8&quot; /&gt;\n&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot; /&gt;\n&lt;title&gt;淘宝网 - 淘！我喜欢&lt;/title&gt;\n&lt;meta name=&quot;spm-id&quot; content=&quot;a21bo&quot; /&gt;\n&lt;meta name=&quot;description&quot; content=&quot;淘宝网 - 亚洲较大的网上交易平台，提供各类服饰、美容、家居、数码、话费/&quot; /&gt;\n&lt;meta name=&quot;keyword&quot; content=&quot;淘宝,掏宝,网上购物,C2C,在线交易,交易市场,网上交易,交易市场,网上买,网上卖&quot; /&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"语义化标签01\"><a href=\"#语义化标签01\" class=\"headerlink\" title=\"语义化标签01\"></a>语义化标签01</h3><h4 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h4><ul>\n<li><strong>语义化标签</strong>指具有其含义的标签，使开发者更直观、优雅的编写代码<h4 id=\"标题标签-块元素\"><a href=\"#标题标签-块元素\" class=\"headerlink\" title=\"标题标签(块元素)\"></a>标题标签(块元素)</h4></li>\n<li>一共有六级标题，从h1到h6</li>\n<li>六级标题的重要性从h1到h6<font color=red>逐级递减</font></li>\n<li>h1的标签在网页中的重要性<strong>仅次于title标签</strong>，在一般情况下一个网页<font color=red>只有一个h1标签</font></li>\n<li>在网页中独占一行的元素称为<strong>块元素（block element）</strong></li>\n</ul>\n<h4 id=\"hgroup标签\"><a href=\"#hgroup标签\" class=\"headerlink\" title=\"hgroup标签\"></a>hgroup标签</h4><ul>\n<li>hgroup标签<strong>用来给标题分组，多个标题可以放进一个hgroup标签里</strong><pre><code class=\"lang-html\">&lt;hgroup&gt;\n&lt;h1&gt;你好，服务器&lt;/h1&gt;\n&lt;h2&gt;章节01&lt;/h2&gt;\n&lt;/hgroup&gt;\n</code></pre>\n</li>\n</ul>\n<h4 id=\"p标签（段落标签，块元素）\"><a href=\"#p标签（段落标签，块元素）\" class=\"headerlink\" title=\"p标签（段落标签，块元素）\"></a>p标签（段落标签，块元素）</h4><ul>\n<li><strong>p标签</strong>在网页中表示一个段落<h4 id=\"em标签\"><a href=\"#em标签\" class=\"headerlink\" title=\"em标签\"></a>em标签</h4></li>\n<li><strong>em标签</strong>用于加重语句语调</li>\n<li><font color=red>在网页中不会独占一行的元素称为</font><strong>行内元素（Inline element）</strong><pre><code class=\"lang-html\">&lt;p&gt;今天天气&lt;em&gt;真&lt;/em&gt;不错&lt;/p&gt;\n&lt;p&gt;&lt;em&gt;真牛掰&lt;/em&gt;&lt;/p&gt;\n</code></pre>\n  <font size=2><p>今天天气<em>真</em>不错</p><br>  <p><em>真牛掰</em></p></font><h4 id=\"strong标签\"><a href=\"#strong标签\" class=\"headerlink\" title=\"strong标签\"></a>strong标签</h4></li>\n<li>表示强调重要的内容<pre><code class=\"lang-html\">  &lt;p&gt;你今天&lt;strong&gt;必须完成任务&lt;/strong&gt;&lt;/p&gt;\n</code></pre>\n  <font size=2><p>你今天<strong>必须完成任务</strong></p></font><h4 id=\"blockquote长引用标签\"><a href=\"#blockquote长引用标签\" class=\"headerlink\" title=\"blockquote长引用标签\"></a>blockquote长引用标签</h4></li>\n<li>表示长引用<pre><code class=\"lang-html\">顾炎武说：\n&lt;blockquote&gt;\n  天下兴亡，匹夫有责\n&lt;/blockquote&gt;\n</code></pre>\n  <font size=2>顾炎武说：<br>  <blockquote>\n  天下兴亡，匹夫有责\n</blockquote>\n  </font><h4 id=\"q标签\"><a href=\"#q标签\" class=\"headerlink\" title=\"q标签\"></a>q标签</h4></li>\n<li><strong>表示一个短引用</strong><pre><code class=\"lang-html\">  子曰：&lt;q&gt;温故而知新，可以为师矣&lt;/q&gt;\n</code></pre>\n<font size=2>\n&nbsp;&nbsp;&nbsp;&nbsp;子曰：<q>温故而知新，可以为师矣</q>\n</font>\n\n\n</li>\n</ul>\n<h4 id=\"块和行内\"><a href=\"#块和行内\" class=\"headerlink\" title=\"块和行内\"></a>块和行内</h4><h5 id=\"块元素（block-element）\"><a href=\"#块元素（block-element）\" class=\"headerlink\" title=\"块元素（block element）\"></a>块元素（block element）</h5><ul>\n<li>在网页中一般通过元素对页面进行布局<h5 id=\"行内元素（inline-element）\"><a href=\"#行内元素（inline-element）\" class=\"headerlink\" title=\"行内元素（inline element）\"></a>行内元素（inline element）</h5></li>\n<li>行内元素主要用来包裹文字<ul>\n<li>例如标题标签h1、段落标签p</li>\n</ul>\n</li>\n<li>一般情况下会在块元素中放入行内元素，但不会在行内元素中放入块元素</li>\n<li><strong><font color=red>p段落标签里不能放入任何块元素</font></strong></li>\n<li>在浏览器解析网页时，会<font color=blue>自动对网页中不符合规范的内容进行修改</font></li>\n</ul>\n<h3 id=\"语义化标签02\"><a href=\"#语义化标签02\" class=\"headerlink\" title=\"语义化标签02\"></a>语义化标签02</h3><h4 id=\"布局标签（HTML5新增！）\"><a href=\"#布局标签（HTML5新增！）\" class=\"headerlink\" title=\"布局标签（HTML5新增！）\"></a>布局标签（HTML5新增！）</h4><ul>\n<li><strong>header</strong> 表示网页的头部</li>\n<li><strong>main</strong> 表示网页的主体部分，一个网页只有一个main</li>\n<li><strong>footer</strong> 表示网页的底部</li>\n<li><strong>nav</strong> 表示网页中的导航</li>\n<li><strong>aside</strong> 表示网页侧边栏(对主体部分的某个内容进行详细的解释，或作其他功能使用)</li>\n<li><strong>article</strong> 表示一个独立的文章</li>\n<li><strong>section</strong> 表示一个独立的区块，上面所有标签不能表示时使用</li>\n<li><strong><font color=red>div</font></strong> 可以代替以上所有布局标签，<strong>无任何语义</strong></li>\n<li><strong><font color=blue>span</font></strong> 行内元素，<strong>无语义</strong><pre><code class=\"lang-html\">&lt;header&gt;&lt;/header&gt;\n&lt;main&gt;&lt;/main&gt;\n&lt;footer&gt;&lt;/footer&gt;\n&lt;nav&gt;&lt;/nav&gt;\n&lt;aside&gt;&lt;/aside&gt;\n&lt;article&gt;&lt;/article&gt;\n&lt;section&gt;&lt;/section&gt;\n&lt;div&gt;&lt;/div&gt;\n&lt;span&gt;&lt;/span&gt;\n</code></pre>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3></li>\n<li><font color=brown>列表分类\n- **有序列表**\n  - 使用&nbsp;**ol**&nbsp;来创建有序列表\n  - 使用&nbsp;**li**&nbsp;作为列表项\n    ```html\n    <ol>\n      <li>文字</li>\n      <li>图片</li>\n      <li>动画</li>\n    </ol>\n    ```\n    <ol>\n      <li>文字</li>\n      <li>图片</li>\n      <li>动画</li>\n    </ol>\n- **无序列表**（主要用于导航的使用）\n  - 使用&nbsp;**ul**&nbsp;来创建无序列表\n  - 使用&nbsp;**li**&nbsp;作为列表项\n    ```html\n    <ul>\n      <li>首页</li>\n      <li>产品</li>\n      <li>售后支持</li>\n    </ul>\n    ```\n      <ul>\n      <li>首页</li>\n      <li>产品</li>\n      <li>售后支持</li>\n    </ul>\n- **定义列表**\n  - 使用&nbsp;**dl**&nbsp;来创建一个定义列表\n  - 使用&nbsp;**dt**&nbsp;来表示定义的内容\n  - 使用&nbsp;**dd**&nbsp;来对内容进行解释\n  ```html\n  <dl>\n    <dt>结构</dt>\n    <dd>结构表示网页的结构，用来规范网页中哪里是标题，哪里是段落</dd>\n  </dl>\n  ```\n   <dl>\n    <dt>结构</dt>\n    <dd>结构表示网页的结构，用来规范网页中哪里是标题，哪里是段落</dd>\n  </dl></font></li>\n<li><strong><font color=red>列表之间可以互相嵌套</font></strong></li>\n</ul>\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><ul>\n<li><strong>超链接</strong>可以让我们从一个网页跳转到其他页面</li>\n<li>使用<strong>a标签</strong>定义超链接<ul>\n<li>它跳转的可以是外部的一个网址（绝对路径）</li>\n<li>也可以是该网页同一目录下的文档（相对路径）</li>\n</ul>\n</li>\n<li>超链接也是一个<strong>行内元素</strong>，在<strong>a标签</strong>里可以嵌套除它本身以外的任何元素（Ctrl+shift+向下  == 向下复制）<pre><code class=\"lang-html\">&lt;a href=&quot;https://baidu.com&quot;&gt;百度&lt;/a&gt;\n&lt;a href=&quot;./同一目录的文档名&quot;&gt;跳转到统一目录下的文档&lt;/a&gt;\n</code></pre>\n</li>\n<li><strong>target</strong>属性  用来指定超链接打开的位置<ul>\n<li>可选值：<ul>\n<li><strong>_self</strong> 表示默认值，在当前页面打开超链接</li>\n<li><strong>_blank</strong> 在新的窗口/标签栏中打开超链接<pre><code class=\"lang-html\">&lt;a href=&quot;index.html&quot; target =&quot;_blank&quot;&gt;页面01&lt;/a&gt; \n&lt;a href=&quot;index.html&quot; target =&quot;_self&quot;&gt;页面02&lt;/a&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>#</strong>&nbsp;在href后面设置#号超链接，点击此超链接<strong>回到页面顶部</strong>(页面不会发生跳转)</li>\n<li><strong>id</strong>&nbsp;属性；是元素的唯一标识，同一页面不可有重复的id属性<font color=blue>（可以作为网页位置的别名）</font></li>\n<li><strong>通过<font color=purple>用#号加id名</font>可以形成一个超链接到达使用这个id名的标题/段落中</strong></li>\n<li>可以使用<code>Javascript:;</code>,来作为href的属性，此时点击这个超链接<strong>没有任何作用</strong><pre><code class=\"lang-html\">&lt;a href=&quot;javascript:;&quot;&gt;这是一个无效果的超链接&lt;/a&gt;\n&lt;a id=&quot;bottom&quot; href=&quot;#&quot;&gt;回到顶部&lt;/a&gt;\n&lt;p  id =p1&gt;这是第一个段落&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;a href=&quot;p1&quot;&gt;去第一个段落&lt;/a&gt;\n</code></pre>\n</li>\n</ul>\n<h3 id=\"相对路径\"><a href=\"#相对路径\" class=\"headerlink\" title=\"相对路径\"></a>相对路径</h3><ul>\n<li>当我们需要跳转到一个服务器内部的页面时，要用到<strong>相对路径</strong>，用.或..开头</li>\n<li>&nbsp;<strong><font color=blue>./</font></strong>&nbsp;表示当前文件所在的目录</li>\n<li>&nbsp;<strong><font color=blue>../</font></strong>&nbsp;表示当前文件所在目录的上一级目录</li>\n</ul>\n<h3 id=\"图片标签\"><a href=\"#图片标签\" class=\"headerlink\" title=\"图片标签\"></a>图片标签</h3><ul>\n<li>图片标签用于在当前页面中引入一个外部照片</li>\n<li>图片标签img是一个<strong>自结束标签</strong>，属于替换元素（介乎于块和行内元素）</li>\n<li>属性：<ul>\n<li><strong>src</strong>&nbsp;属性指定的是外部图片的路径描述</li>\n<li><strong>alt</strong>&nbsp;属性指图片的描述，这个描述<strong>默认情况下不会显示</strong>，<strong><font color=purple>只有当图片无法被浏览器加载出来时，才会显示alt中的内容，如果不写alt则不会被搜索引擎所收录（有点类似于meta的description）</font></strong></li>\n<li><strong>width</strong>&nbsp;表示设置图片的宽度</li>\n<li><strong>height</strong>&nbsp;表示设置图片的高度<ul>\n<li>一般情况下，只更改width和height中的一个，这样图片就会被等比例的缩放</li>\n<li>在pc端不建议更改图片大小，会导致内存增大或图片失真的情况</li>\n<li>但在移动端就要经常使用到缩放</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"图片格式\"><a href=\"#图片格式\" class=\"headerlink\" title=\"图片格式\"></a>图片格式</h3><ul>\n<li>格式分类<ul>\n<li><strong>JPEG(jpg)</strong><ul>\n<li>支持的颜色比较丰富，不支持透明效果，不支持动图，一般用于显示照片</li>\n</ul>\n</li>\n<li><strong>GIF</strong><ul>\n<li>支持的颜色比较少，支持简单透明，支持动图，一般用于动图</li>\n</ul>\n</li>\n<li><strong>PNG</strong><ul>\n<li>支持的颜色丰富，支持复杂透明，不支持动图，网页专用格式</li>\n</ul>\n</li>\n<li>webp<ul>\n<li>谷歌专属格式，具备其他格式所有优点，但兼容性不好</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>base64编码</strong><ul>\n<li>将图片使用base64编码，这样可以让图片变成字符，通过字符的形式引入图片</li>\n<li><strong>可以使图片更快的加载出网页中</strong></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"音视频播放\"><a href=\"#音视频播放\" class=\"headerlink\" title=\"音视频播放\"></a>音视频播放</h3><ul>\n<li><strong>audio</strong>标签用来向页面导入一个外部的音频文件，当音频文件引入时，默认情况下不允许用户控制<pre><code class=\"lang-html\">&lt;audio src=&quot;音频文件路径&quot;&gt;&lt;/audio&gt;\n</code></pre>\n</li>\n<li><p>属性：</p>\n<ul>\n<li><strong>controls</strong> 设置允许用户对音频进行控制（播放/暂停）</li>\n<li><strong>autoplay</strong> 设置音频自动播放<ul>\n<li>大部分浏览器不会自动对音频播放</li>\n</ul>\n</li>\n<li><strong>loop</strong> 设置音频循环播放<pre><code class=\"lang-html\">&lt;audio src=&quot;音频文件路径&quot; controls loop&gt;&lt;/audio&gt;\n</code></pre>\n<ul>\n<li>不是所有浏览器都支持audio标签</li>\n<li>可以使用如下写法：<pre><code class=\"lang-html\">&lt;audio controls&gt;\n对不起，您的浏览器不支持播放此音频\n&lt;source src=&quot;音频文件路径&gt;\n&lt;/audio&gt;\n</code></pre>\n</li>\n<li><font color=red>这样写的好处是如果浏览器不支持audio标签，就会显示文字，反之则会显示音频，不会显示文字</font>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>video</strong>标签用来向网页引入一个视频文件</p>\n<pre><code class=\"lang-html\">&lt;video controls&gt;\n&lt;source src=&quot;音频文件路径&quot;&gt;\n&lt;/video&gt;\n</code></pre>\n</li>\n<li><strong>对于网页引入音频视频，一般不会再本地播放，会通过代理进行音视频托管，减轻服务器内存，对带宽的要求也相应降低，成本也就减少</strong></li>\n</ul>\n<hr>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><ul>\n<li>CSS<ul>\n<li><strong>层叠样式表</strong>(英文全称：Cascading Style Sheets)是<font color=brown>一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言</font>。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。[摘自百度百科]</li>\n<li>CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。</li>\n</ul>\n</li>\n</ul>\n<hr>\n<ul>\n<li><strong><font size=5 color=orange>三种方式修改元素样式</font></strong><ul>\n<li><font size=4 color=brown>第一种:(内联样式/行内样式)\n- 在标签内部通过style属性来设置元素样式\n- 但该样式只对当前标签内部有效，对在实际的开发应用过程中非常不友好，对后期的维护相当麻烦，需要一个个的去修改\n```html\n<p style=\"color:red; font-size=60px\">牵一发而动全身</p>\n```\n- **注意：千万不能在开发中使用，非常低效，不推荐，仅供学习使用** </font></li>\n<li><font size=4 color= brown>第二种：(内部样式表)<ul>\n<li>把style写在head标签中</li>\n<li>然后通过CSS的选择器选择元素并为其设置样式</li>\n<li>该方法的好处是：可以<strong>同时为多个标签设置样式，只需要修改一次即可对所有标签进行样式修改，方便样式进行复用</strong>&lt;/font&gt;<pre><code class=\"lang-html\">&lt;head&gt;\n&lt;style&gt;\n  p{\n    color=red \n    font-size=50px\n    }\n&lt;/style&gt;\n&lt;/head&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li><font size=4 color= brown>第三种：(外部样式表)<ul>\n<li>可以将CSS样式编写到一个外部的CSS文件中，然后通过<strong>link标签</strong>来引入外部的CSS文件</li>\n<li>外部样式表需要通过<strong>link标签</strong>进行引入<ul>\n<li>只要网页对其进行引用就可以使用这些样式</li>\n<li><strong>可以使样式在不同的页面中进行复用(推荐使用，尤其开发中必备)</strong>&lt;/font&gt;<pre><code class=\"lang-html\">&lt;link rel=&quot;stylesheet&quot; href=&quot;需要引用的CSS文件路径&quot;&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"CSS语法\"><a href=\"#CSS语法\" class=\"headerlink\" title=\"CSS语法\"></a>CSS语法</h3><ul>\n<li><font size=4><strong>注释</strong>：注释里得到东西会自动被浏览器忽略<ul>\n<li>格式(快捷键Ctrl+/)<pre><code class=\"lang-css\">/*  注释内容 */\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>基本语法：</strong><ul>\n<li><strong>选择器（selector）</strong><ul>\n<li>通过选择器可以选中页面的指定元素，例如p的作用就是选中页面所有的p标签元素</li>\n</ul>\n</li>\n<li><strong>声明块</strong><ul>\n<li>通过声明块来指定要给元素设置的样式</li>\n<li>声明块由一个个声明组成，格式是<font color=purple>名值对</font>，以<code>;</code>结尾<pre><code class=\"lang-css\">p{\ncolor:red;\nfont-size:60px;\n}\nh1{\ncolor:blue;\nfont-size:80px;\n}\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"class属性\"><a href=\"#class属性\" class=\"headerlink\" title=\"class属性\"></a>class属性</h3><ul>\n<li><strong>class</strong>是一个标签的属性，它与id相似，但是<font color=purple>可以重复使用，对元素进行分组</font></li>\n<li>语法：<ul>\n<li><font color=red>.class{属性：属性值}</font><pre><code class=\"lang-html\">&lt;p class=&quot;red&quot;&gt;天苍苍，野茫茫&lt;/p&gt;\n&lt;p class=&quot;red&quot;&gt;风吹草低见牛羊&lt;/p&gt;\n</code></pre>\n<pre><code class=\"lang-css\">.red{\ncolor:red;\nfont-size:15px;\n}\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"常用选择器\"><a href=\"#常用选择器\" class=\"headerlink\" title=\"常用选择器\"></a>常用选择器</h3><ul>\n<li><strong>元素选择器</strong><ul>\n<li>作用：<font color=brown>根据标签名设置指定元素</font></li>\n<li>语法：<font color=red> 标签名{ }</font></li>\n<li>例如： p{ } &nbsp;  h1{ }</li>\n</ul>\n</li>\n<li><strong>id选择器</strong><ul>\n<li>作用：<font color=brown>根据元素的id属性值选择一个元素</font></li>\n<li>语法： <font color=red>#id属性值{ }</font></li>\n<li>例如： #green{ } #bottom{ }</li>\n</ul>\n</li>\n<li><strong>类选择器</strong><ul>\n<li>作用：<font color=brown>根据元素的class属性值选中一组元素</font></li>\n<li>语法: &nbsp;<font color=red>.class属性值</font><pre><code class=\"lang-html\">&lt;h1 class=&quot;good&quot;&gt;美好的一天&lt;/h1&gt;\n</code></pre>\n<pre><code class=\"lang-css\">.good{\ncolor:orange;\n}\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>通配选择器</strong><ul>\n<li>作用: &nbsp;<font color=brown>选中页面的所有元素</font></li>\n<li>语法：<font color=red>*</font><pre><code class=\"lang-css\">*{\ncolor:black;\n}\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"复合选择器\"><a href=\"#复合选择器\" class=\"headerlink\" title=\"复合选择器\"></a>复合选择器</h3><ul>\n<li><strong>交集选择器</strong><ul>\n<li>作用：选中同时复合多个条件的元素</li>\n<li>语法：<strong>选择器1选择器2选择器n{ }</strong></li>\n<li>交集选择器如果有元素选择器，<strong><font color=red>必须用元素选择器开头</font></strong><pre><code class=\"lang-html\">&lt;body&gt;\n&lt;div class=&quot;red&quot;&gt;我是div&lt;/div&gt;\n&lt;p class=&quot;red&quot;&gt;我是段落&lt;/p&gt;\n&lt;div class=&quot;red2 a b &quot;&gt;我是div2&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n<pre><code class=\"lang-css\">&lt;style&gt;\ndiv.red{\n  font-size:25px;\n}\n.a.b{\n  color:blue;\n}\n&lt;/style&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>并集选择器</strong>(选择器分组)<ul>\n<li>作用：同时选中多个选择器对应的元素</li>\n<li>语法：<strong>选择器1，选择器2，选择器n{ }</strong><pre><code class=\"lang-css\">h1,span{\ncolor:orange;\n}\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"关系选择器\"><a href=\"#关系选择器\" class=\"headerlink\" title=\"关系选择器\"></a>关系选择器</h3><ul>\n<li><p><strong><font size=5 color=orange>各种元素类别</font></strong></p>\n<ul>\n<li><strong>父元素</strong><ul>\n<li>直接包含子元素的元素</li>\n</ul>\n</li>\n<li><strong>子元素</strong><ul>\n<li>直接被父元素包含的元素</li>\n</ul>\n</li>\n<li><strong>祖先元素</strong><ul>\n<li><font color=red>直接或间接</font>包含后代元素的元素</li>\n<li>一个元素的父元素也是其祖先元素</li>\n</ul>\n</li>\n<li><strong>后代元素</strong><ul>\n<li>直接或间接被祖先元素包含的元素</li>\n<li>子元素也是后代元素</li>\n</ul>\n</li>\n<li><p><strong>兄弟元素</strong></p>\n<ul>\n<li>拥有相同父元素的元素<br>```html<br><div><br>我是一个div<br><p><br>我是div的p元素<br><span>我是p元素中的span</span></li>\n</ul>\n<p>&lt;/p&gt;<br><span>我是div的span元素</span></p>\n</li>\n</ul>\n<p>&lt;/div&gt;<br>```</p>\n</li>\n<li><strong>子元素选择器</strong><ul>\n<li>作用：选中指定父元素的指定子元素</li>\n<li>语法：<strong>父元素 &gt; 子元素</strong><pre><code class=\"lang-html\">&lt;style&gt;\n  div &gt; span{\n    color:yellow;\n  }\n&lt;/style&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>后代元素选择器</strong><ul>\n<li>作用：选中指定元素内的指定后代元素</li>\n<li>语法：<strong>祖先 后代</strong><pre><code class=\"lang-html\">&lt;style&gt;\ndiv span{\n  color:red;\n}\n&lt;/style&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>选择下一个兄弟元素</strong><ul>\n<li>语法： <strong>前一个 + 后一个</strong><pre><code class=\"lang-html\">&lt;style&gt;\np + span{\n  font-size:30px;\n}\n&lt;/style&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>选择所有的兄弟元素</strong><ul>\n<li>语法： <strong>兄 ~ 弟</strong></li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器\"></a>属性选择器</h3><ul>\n<li><strong>选择含有指定属性的元素</strong><ul>\n<li>[属性名]</li>\n</ul>\n</li>\n<li><strong>选择含有指定属性和属性值的元素</strong><ul>\n<li>[属性名 = 属性值]</li>\n</ul>\n</li>\n<li><strong>选择属性值一指定值开头的元素</strong><ul>\n<li>[属性名 ^= 属性值]</li>\n</ul>\n</li>\n<li><strong>选择属性值以指定值结尾的元素</strong><ul>\n<li>[属性名 $= 属性值]</li>\n</ul>\n</li>\n<li><strong>选择属性值中含有某值的元素的元素</strong><ul>\n<li>[属性名 *= 属性值]<pre><code class=\"lang-html\">&lt;head&gt;\n&lt;style&gt;\n  p[title=abc]{\n    color:orange;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p title=&quot;abc&quot;&gt;黄沙百战穿金甲&lt;/p&gt;\n&lt;p titie=&quot;abcdef&quot;&gt;不破楼兰终不还&lt;/p&gt;\n&lt;p titl=&quot;hello&quot;&gt;一曲新词酒一杯&lt;/p&gt;\n&lt;/body&gt;\n</code></pre>\n<h3 id=\"伪类选择器\"><a href=\"#伪类选择器\" class=\"headerlink\" title=\"伪类选择器\"></a>伪类选择器</h3></li>\n</ul>\n</li>\n<li><strong>伪类</strong>：不存在的类，特殊的类<ul>\n<li>伪类用来描述一个元素的特殊状态<ul>\n<li>比如：第一个子元素，被点击的元素，鼠标移入的元素等</li>\n</ul>\n</li>\n<li>伪类一般情况下都是&nbsp;:&nbsp;开头<ul>\n<li><code>:first-child</code> 第一个子元素</li>\n<li><code>:last-child</code> 最后一个子元素</li>\n<li><code>:nth-child</code>选中第n个子元素<ul>\n<li><font color=brown>特殊值：</font><ul>\n<li><strong>n</strong> 第n个 范围从0到正无穷</li>\n<li><strong>2n</strong> 或 even 表示选中偶数位子元素</li>\n<li><strong>2n+1</strong> 或 odd 表示选中奇数位的子元素  </li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>:first-of-type</code></li>\n<li><code>:last-of-type</code></li>\n<li><code>nth-of-type</code></li>\n<li><font color=purple>这些伪类和前面的基本一致，不同点在于它们是同类型元素排序</font></li>\n<li><code>:not()</code> 否定伪类<ul>\n<li><strong>将符合条件的元素从选择器中除去</strong> </li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"超链接的伪类\"><a href=\"#超链接的伪类\" class=\"headerlink\" title=\"超链接的伪类\"></a>超链接的伪类</h3><ul>\n<li><strong>:link</strong> &nbsp;用来表示没访问过的链接</li>\n<li><strong>:visited</strong>&nbsp;用来表示已经访问过的链接,由于隐私的原因，因此visited这个伪类<font color=blue>只能修改链接的颜色</font><ul>\n<li><strong>这两个表示的是超链接的状态，可在同一个超链接中进行引用</strong><pre><code class=\"lang-html\">&lt;style&gt;\na:link{\n  color:red;\n  font-size:60px;\n}\na:visited{\n  color:purple;\n}\na:hover{\n  color:orange;\n}\na:active{\n  color:green;\n}\n&lt;/style&gt;\n&lt;body&gt;\n&lt;a href=&quot;www.baidu.com&quot;&gt;百度&lt;/a&gt;\n&lt;a href=&quot;www.sina.com&quot;&gt;新浪&lt;/a&gt;  \n&lt;/body&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>:hover</strong>&nbsp;用来<font color=greed>表示鼠标移入的状态</font></li>\n<li><strong>:active</strong>&nbsp;用来<font color=greed>表示鼠标点击的动作</font></li>\n</ul>\n<h3 id=\"伪元素选择器\"><a href=\"#伪元素选择器\" class=\"headerlink\" title=\"伪元素选择器\"></a>伪元素选择器</h3><ul>\n<li><strong>伪元素</strong>表示页面中的一些特殊的并不真实存在的元素</li>\n<li><p>伪元素用&nbsp;<strong>::</strong>&nbsp;开头</p>\n<ul>\n<li><strong>::first-letter</strong>表示第一个字母</li>\n<li><strong>::first-line</strong>表示第一行</li>\n<li><strong>::selection</strong>表示选中的内容</li>\n<li><strong>::before</strong>元素的开始</li>\n<li><strong>::after</strong>元素的结束<ul>\n<li><strong>before和after必须配合content属性来使用</strong><br>```html<br><style><br>p::first-letter{<br>font-size:50px;<br>}<br>p::first-line{<br>background-color:yellow;<br>}<br>p::selection{<br>background-color:orange;<br>}<br>div::after{<br>content:’#’<br>}<br>div::before{<br>content:’#’<br>}</li>\n</ul>\n</li>\n</ul>\n<p>&lt;/style&gt;<br><body><br>  <div>what a beautiful world</div><br>  <p></p>\n<pre><code> I had traveled here to Henson&#39;s last home -- now a historic site that Carter formerly directed -- to learn more about a man who was， in many ways， an African-American Moses。 After winning his own freedom from slavery， Henson secretly helped hundreds of other slaves to escape north to Canada -- and liberty。\n</code></pre><p>  &lt;/p&gt;<br>&lt;/body&gt;<br>```</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><ul>\n<li><strong>继承</strong>，指的是<strong>样式的继承</strong>，我们为一个元素设置的样式也会相应的应用到他的后代元素中</li>\n<li><strong>继承</strong>是发生在<font color=red>祖先后后代</font>之间的</li>\n<li>继承的意义是为了方便我们开发，使用继承的方式可以将一些通用的样式统一设置到共同的祖先元素中</li>\n<li><strong>并不是所有的样式都可以被继承</strong><ul>\n<li>例如，背景相关的<br>```html<br><style><br>p{<br>color:red;<br>}<br>div{<br>background-color:yellow;<br>}</li>\n</ul>\n</li>\n</ul>\n<p>&lt;/style&gt;</p>\n<p><body><br>  <p>\n    这是一个段落\n    <span>我是p元素中的span</span>\n  </p><br>  <span>我是p元素外的span</span></p>\n  <div>\n    我是一个div\n    <span>我是div中的span</span>\n  </div>\n  <span>我是div外的span</span>\n</body> \n```\n---\n### 选择器的权重(优先级)\n- **样式的冲突**\n  - <table><tr><td bgcolor=#FFFF00>当我们通过不同的选择器，选中相同的样式设置不同的值时，此时就发生样式的冲突</td></tr></table>\n  - 例如：\n  ```html \n  <style>\n    div{\n      color:blue;\n    }\n    .red{\n      color:green;\n    }\n  </style>\n  <body>\n    <div id=\"box\" class=\"red\">这是一个div</div>\n  </body>\n  ```\n- **选择器的优先级**<font color=brown>(从高到低)</font>\n  - **内联样式**  1,0,0,0\n  - **id选择器**   0,1,0,0\n  - **类和伪类选择器**  0,0,1,0\n  - **元素选择器**   0,0,0,1\n  - **通配选择器** 0,0,0,0\n  - **继承的样式** 没有优先级\n- 比较优先级时，需要对所有的选择器的优先级进行**相加**计算，**最后的样式优先级越高，则使用越高的样式**\n- 选择器的累加不会超过其最大的数量级\n- 如果优先级计算后相同，此时则**优先使用靠下的样式(即最新的样式覆盖旧的样式)**\n- **可以通过在某一个样式后面加上&nbsp;&nbsp;!important&nbsp;&nbsp;，这样使样式达到<font color=blue>最高优先级</font>**<font color=brown>（但是在开发中慎用）</font>\n--- \n### 像素、百分比、HSL值\n- **<font color=orange>长度单位</font>**\n  - **像素：**\n    - <font color=brown>屏幕，实际上是由一个个的小像素点组成\n      - 例如，某屏幕参数1920*1080表示宽度有1920个像素，高度有1080个像素\n    - <font color=blue>不同屏幕的像素是不同的，像素越小其屏幕的清晰度越高</font>\n    - 同样的200px在不同的屏幕下的显示效果也不同\n  - **百分比：**\n    - 也可以将属性设置为相应的其子元素的百分比\n    - **设置百分比可以使子元素跟随父元素的改变而改变**\n  - **em**\n    - em是相当于元素的字体大小来计算\n    - ** 1em=100%font-size**\n  - **rem**\n    - rem相对于根元素的字体大小计算\n  - **HSL值**\n    - **H 色相**&nbsp; 一个彩虹环，范围0-360（即0-360度）\n    - **S 饱和度**&nbsp; 颜色的浓度,范围：0%-100%（必须加百分号） \n    - **L 亮度**&nbsp; 屏幕亮度，范围：0%-100%（必须加百分号）\n  ```html\n  <style>\n    .box1{\n      width:300px;\n      height:300px;\n      background-color:green;\n    }\n    .box2{\n      width:600px;\n      height:600px;\n      background-color:red;\n    }\n    .box3{\n      font-size:30px;\n      width:10em;\n      height:30em;\n      background-color:orange;\n    }\n  </style>\n  </body>\n    <div class=\"box1\">\n      <div class=\"box2\"></div>\n    </div>\n    <div class=\"box3\"></div>\n  </body>\n  ```\n- **<font color=orange>颜色单位</font>**\n  - 在css中可以直接使用颜色的英文来设置，但是非常不方便</font>\n  - **RGB值**（自然光）\n    - <font color=#FF00FF>RGB通过三种颜色的不同浓度来调配出不同的颜色\n    - R=Red G=Green B=Blue\n    - **每一种颜色的范围是0-255之间**\n    - 语法：**RGB(红，绿，蓝)**\n  - **RGBA**\n    - 在RGB基础上增加透明度设置\n    - 四个参数：R，G，B，透明度\n    - 1表示完全不透明，0表示完全透明,.5表示半透明\n  - **十六进制的RGB值**\n    - **语法：#红色绿色蓝色**\n    - 颜色浓度通00-ff\n    - 如果两位两位重复可以简写\n    - ##aabbcc——>#abc\n </font>\n  ```html\n  <style>\n    .box{\n      width:100px;\n      height:100px;\n      background-color:rgb(255,0,0);\n      background-color:rgb(0,255,0);\n      background-color:rgb(0,0,255);\n      background-color:rgb(0,0,0);\n      background-color:rgb(255,255,255);\n      background-color:rgba(255,153,210,.5);\n      background-color:#FFFF00;\n      background-color:#abc;\n      background-color:hsla(95,40%,50%);\n    }\n  </style>\n  <body>\n  <div class=\"box\"></div>\n  </body> \n  ```\n--- \n</font>\n## Layout布局\n### 01文档流\n- **文档流（normal flow）**\n  - <font color=purple>网页是一个多层的结构，层层叠着\n  - 通过css可以分别为每一层来设置样式</font>\n  - **<font color=brown>最底层就称为文档流，文档流是网页的基础</font>**\n  - <font color=purple>我们所创建的元素默认都是在文档流中进行排列的\n  - 元素的主要状态\n    - 在文档流\n    - 不在文档流\n  - 元素在文档流的特点\n    - **块元素**\n    - 在页面中独占一行\n      - 默认宽度是父元素的全部\n      - 默认高度是子元素高度\n    - **行内元素**\n      - 行内元素只占用自身大小\n      - 从左向右排列，如果一行无法完全显示，则会换行继续排列\n      - 行内元素的默认宽度和高度都是被内容撑开</font>\n      ```html\n      <style>\n      .box1{\n        background-color:#FFFF00;\n      }\n      .box2{\n        background-color:#FFEE00;\n      }\n      .span{\n        width:200px;\n        height:200px;\n      }\n      </style>\n      <body>\n        <div class=\"box1\">我是div1</div>\n        <div class=\"box2\">我是div2</div>\n\n<pre><code>    &lt;span&gt;我是span&lt;/span&gt;\n    &lt;span&gt;我是span&lt;/span&gt;\n    &lt;span&gt;我是span&lt;/span&gt;\n    &lt;span&gt;我是span&lt;/span&gt;\n    &lt;span&gt;我是span&lt;/span&gt;\n    &lt;span&gt;我是span&lt;/span&gt;\n    &lt;span&gt;我是span&lt;/span&gt;\n\n  &lt;/body&gt; \n  ```\n</code></pre><h3 id=\"02盒子模型（Box-Model）\"><a href=\"#02盒子模型（Box-Model）\" class=\"headerlink\" title=\"02盒子模型（Box Model）\"></a>02盒子模型（Box Model）</h3><ul>\n<li><font color=brown>CSS把页面中的所有元素都设置为一个矩形的盒子</li>\n<li>将元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子摆放到不同的位置</li>\n<li><strong>每个盒子都由几个部分组成</strong><ul>\n<li><strong>内容区（content）</strong><ul>\n<li>内容区的大小通过width和height两个属性确定</li>\n</ul>\n</li>\n<li><strong>内边距（padding）</strong></li>\n<li><strong>边框（border）</strong><ul>\n<li>边框属于盒子的边缘，边框里面属于盒子内部，出了边框都是盒子的外部，<strong>边框的大小会影响整个盒子的大小</strong></li>\n<li>要设置边框至少需要设置三个属性<ul>\n<li><strong>边框的宽度&nbsp;border-width</strong></li>\n<li><strong>边框的颜色&nbsp;border-color</strong></li>\n<li><strong>边框的样式&nbsp;border-style</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>外边距（margin）</strong><br><img data-src=\"./image/boxmodel.png\" alt=\"boxmodel\"><pre><code class=\"lang-html\">&lt;style&gt;\n.box{\n  /*内容区设置*/\n  width:200px;\n  height:200px;\n  background-color:#bfa;\n  /*边框的设置*/\n  border-width:10px;\n  border-color:orange;\n  border-style:solid;\n}\n&lt;/style&gt;\n&lt;body&gt;\n&lt;div class=&quot;box&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n<h3 id=\"盒子模型之边框\"><a href=\"#盒子模型之边框\" class=\"headerlink\" title=\"盒子模型之边框\"></a>盒子模型之边框</h3></li>\n</ul>\n</li>\n<li>边框包括：<ul>\n<li>边框宽度</li>\n<li>边框颜色</li>\n<li>边框样式</li>\n</ul>\n</li>\n<li><strong>对于border-width</strong><ul>\n<li>存在默认值3px，即不设置边框宽度也会有3像素的边框</li>\n<li>属性值的情况：<ul>\n<li>四个值： 上 右 下 左</li>\n<li>三个值： 上 左右 下</li>\n<li>两个值： 上下 左右</li>\n<li>一个值：上下左右</li>\n</ul>\n</li>\n<li>不仅可以对边框的四个方向进行设置，还可以单独设置各个方向的边框宽度（其格式为：border-xxx-width）<ul>\n<li><strong>单独设置上边宽</strong> border-top-width</li>\n<li><strong>单独设置右边宽</strong> border-right-width</li>\n<li><strong>单独设置下边宽</strong> border-bottom-width</li>\n<li><strong>单独设置左边宽</strong> border-left-width</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>对于border-color</strong><ul>\n<li>存在默认值black</li>\n<li>其设置规则和border-width相同</li>\n</ul>\n</li>\n<li><strong>对于border-style</strong><ul>\n<li>默认值为none无边框</li>\n<li>指定边框样式<ul>\n<li><strong>solid</strong> 表示实线</li>\n<li><strong>dotted</strong> 点状虚线</li>\n<li><strong>dashed</strong> 虚线</li>\n<li><strong>double</strong> 双线</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>border的简写： 同时设置边框的所有属性，各个属性用空格隔开</strong><pre><code class=\"lang-html\">&lt;style&gt;\n  .box{\n    border:10px red solid;\n    border-right:none;\n  }\n&lt;/style&gt;\n&lt;body&gt;\n&lt;div class=&quot;box&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n<h3 id=\"盒子模型之内边距\"><a href=\"#盒子模型之内边距\" class=\"headerlink\" title=\"盒子模型之内边距\"></a>盒子模型之内边距</h3></li>\n<li><p><strong>内边距</strong></p>\n<ul>\n<li>内容区和边框之间的距离<ul>\n<li>四个方向的内边距<ul>\n<li>padding-top</li>\n<li>padding-right</li>\n<li>padding-bottom</li>\n<li>padding-left</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>所以一个盒子的可见区包括内容区、边框、内边距</strong></p>\n<pre><code class=\"lang-html\">&lt;style&gt;\n.box{\n  width:200px;\n  height:200px;\n  background-color:#bfa;\n  border:10px orange solid;\n\n  padding:100px;\n}\n.inner{\n  width:100%;\n  height:100%;\n  background-color:yellow;\n}\n&lt;/style&gt;\n&lt;body&gt;\n&lt;div class=&quot;box&quot;&gt;\n&lt;div class=&quot;inner&quot;&gt;&lt;div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n<h3 id=\"盒子模型之外边距\"><a href=\"#盒子模型之外边距\" class=\"headerlink\" title=\"盒子模型之外边距\"></a>盒子模型之外边距</h3></li>\n<li>外边距（margin）<ul>\n<li>外边距不会影响盒子的可见区大小</li>\n<li>但是会影响盒子的位置</li>\n</ul>\n</li>\n<li>四个方向设置外边距<ul>\n<li>margin-top<ul>\n<li>上外边距，设置一个正值，元素会向下移动</li>\n</ul>\n</li>\n<li>margin-right</li>\n<li>margin-bottom<ul>\n<li>下外边距，设置一个正值，其他元素会向下移动（没有其他像素则不会有效果产生）</li>\n</ul>\n</li>\n<li>margin-left<ul>\n<li>左外边距，设置一个正值，元素会向右移动</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>元素在页面中是按自左向右顺序排列的</strong><ul>\n<li><strong>因此默认情况下如果我们设置外边距的上边和左边，自身会进行移动</strong></li>\n<li><strong>而设置外边距的右边和下边则会移动其他元素</strong></li>\n</ul>\n</li>\n<li><p>margin的简写—-和padding一样<br>```html<br><style><br>.box{<br>  width:200px;<br>  height:200px;<br>  background-color:#bfa;<br>  border:10px orange solid;</p>\n<p>  padding:100px;<br>  margin-top:100px;<br>  margin-left:100px;<br>  margin-right:150px;<br>  margin-bottom:150px;<br>}</p>\n<p>.box2{<br>  width:220px;<br>  height:220px;<br>  background-color:yellow;<br>}<br>&lt;/style&gt;<br><body></p>\n<div class=\"box\">\n\n</li>\n</ul>\n<p>&lt;/div&gt;<br><div class=\"box2\"></div><br>&lt;/body&gt;<br>```</p>\n<h3 id=\"盒子模型之水平方向布局\"><a href=\"#盒子模型之水平方向布局\" class=\"headerlink\" title=\"盒子模型之水平方向布局\"></a>盒子模型之水平方向布局</h3></li>\n<li>水平方向布局<ul>\n<li>元素在其父元素中水平方向的位置由以下几个属性<strong>共同决定</strong><ul>\n<li>margin-left</li>\n<li>border-left</li>\n<li>padding-left</li>\n<li>width</li>\n<li>padding-right</li>\n<li>border-right</li>\n<li>margin-right</li>\n</ul>\n</li>\n<li>一个元素在其父元素中，水平布局必须满足以下等式<ul>\n<li><strong>margin-left + border-left + padding-left + width + padding-right + border-right + margin-right = 其父元素内容区的width值（必须满足）</strong></li>\n<li>以上的情况<strong>必须满足</strong>，如果等式不成立，则称为过渡约束，等式自动进行调整<ul>\n<li>调整方式：<ul>\n<li>如果这七个值中没有<strong>auto</strong>的情况，则浏览器会自动调整<strong>margin-right</strong>的值以使等式成立</li>\n<li>可设置auto的值有：<ul>\n<li><strong>width</strong></li>\n<li><strong>margin-right</strong></li>\n<li><strong>margin-left</strong><ul>\n<li><strong>如果某个值为auto，则会自动调整设置auto的那个值以令等式成立</strong></li>\n<li><strong>如果将一个宽度和一个外边距设置为auto，则宽度会调整到最大，外边距会自动设置为0</strong></li>\n<li><strong>如果三个值都设置auto，则外边距两个都是0，宽度最大化</strong></li>\n<li><strong>如果两个外边距设置为auto，则宽度固定，两个外边距的值相同</strong>(使一个子元素在其父元素中水平居中的方法)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"盒子模型之垂直方向布局\"><a href=\"#盒子模型之垂直方向布局\" class=\"headerlink\" title=\"盒子模型之垂直方向布局\"></a>盒子模型之垂直方向布局</h3><ul>\n<li>默认情况下父元素的高度别内容撑开</li>\n<li><p>子元素是在父元素的内容区中排列的</p>\n<ul>\n<li>如果子元素的大小超过了父元素，则子元素会从父元素中溢出</li>\n<li>使用&nbsp;overflow&nbsp;属性来设置父元素如何处理溢出的子元素<ul>\n<li>取值：<ul>\n<li><strong>visible</strong> 默认值，子元素会从父元素中溢出，在父元素外部的位置显示</li>\n<li><strong>hidden</strong> 溢出内容将会被剪裁不会显示</li>\n<li><strong>scroll</strong> 生成两个滚动条，通过滚动条来查看完整的内容</li>\n<li><strong>auto</strong> 根据需求生成滚动条<br>```html<br><style><br>.outer{<br>background-color:#bfa;<br>height:600px;<br>}<br>.inner{<br>width:100px;<br>background-color:yellow;<br>height:100px;<br>margin-bottom:100px;</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>}<br>.box1{<br>  width:200px;<br>  height:200px;<br>  background-color:#bfa;</p>\n<p>  overflow:auto;</p>\n<p>}<br>.box2{<br>  width:100px;<br>  height:400px;<br>  background-color:orange;<br>}</p>\n</li>\n</ul>\n<p>&lt;/style&gt;</p>\n<p><body>\n  <div class=\"outer\">\n    <div class=\"inner1\"></div>\n    <div class=\"inner2\"></div>\n  </div>\n  <div class=\"box1\"></div>\n  <div class=\"box2\"></div>\n</body></p>\n<pre><code>\n### 垂直外边距的重叠\n  - 相邻的垂直方向的外边距会发生重叠现象\n  - **对于兄弟元素**\n    - 兄弟元素间的相邻垂直外边距会取**两者之间的较大值**（两者都是正值的前提下）\n    - 如果相邻外边距**一正一负**，则取**两者之和**\n    - 如果相邻外边距**都是负数**，则取**两者中绝对值较大的**\n  - **对于父子元素**\n    - 父子元素间相邻的**上外边距**，子元素的属性值会传递给父元素\n    - 父子元素会影响页面的布局\n  ```html\n  &lt;style&gt;\n    .box1{\n      width:200px;\n      height:200px;\n      background-color:#bfa;\n      margin-bottom:100px;\n    }\n    .box2{\n      width:100px;\n      height:100px;\n      background-color:red;\n      margin-top:100px;\n\n    }\n    .box3{\n      width:200px;\n      height:200px;\n      background-color:#bfa;\n    }\n    .box4{\n      width:100px;\n      height:100px;\n      background-color:red;\n\n    }\n  &lt;/style&gt;\n  &lt;body&gt;\n    &lt;div class=&quot;box1&quot;&gt;&lt;/div&gt;\n    &lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;\n    &lt;div class=&quot;box3&quot;&gt;\n      &lt;div class=&quot;box4&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n</code></pre><h3 id=\"行内元素的盒模型\"><a href=\"#行内元素的盒模型\" class=\"headerlink\" title=\"行内元素的盒模型\"></a>行内元素的盒模型</h3><ul>\n<li>行内元素的盒模型<ul>\n<li><strong>行内元素不支持设置宽度和高度</strong></li>\n<li>可以设置padding、border、margin，但这三个属性<strong>均对垂直方向的布局没有影响</strong></li>\n</ul>\n</li>\n<li><strong>display</strong> 设置元素显示的类型<ul>\n<li>可选值：<ul>\n<li><strong>inline</strong> 将元素设置为<strong>行内元素</strong></li>\n<li><strong>block</strong> 将元素设置为<strong>块元素</strong></li>\n<li><strong>inline-block</strong> 将元素设置为<strong>行内块元素</strong><ul>\n<li>行内块：既可以设置宽度和高度又不会独占一行（开发尽量避免使用）</li>\n</ul>\n</li>\n<li><strong>table</strong> 将元素设置成<strong>表格</strong></li>\n<li><strong>none</strong> 元素不会在页面显示</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><strong>visibility</strong> 用来设置元素的显示状态</p>\n<ul>\n<li><p>可选值：</p>\n<ul>\n<li><strong>visible</strong> 默认值，元素在页面中<strong>正常显示</strong></li>\n<li><strong>hidden</strong> 元素在页面中隐藏，但依然占用页面位置&lt;/font&gt;<br>```html<br><style><br>.s1{<br>background-color:yellow;<br>margin:100px;<br>}</li>\n</ul>\n<p>.box1{<br>  width:200px;<br>  height:200px;<br>  background-color:#bfa;<br>}</p>\n<p>a{<br>  display:none;<br>  visibility:visible;<br>  width:100px;<br>  height:100px;<br>  background-color:orange<br>}</p>\n</li>\n</ul>\n<p>&lt;/style&gt;<br><body><br><span class=\"exturl\" data-url=\"amF2YXNjcmlwdDo7\">超链接</span><br><span class=\"exturl\" data-url=\"amF2YXNjcmlwdDo7\">超链接</span></p>\n<p><span class=\"s1\">我是span&lt;/sapn&gt;<br><span class=\"s1\">我是span&lt;/sapn&gt;</p>\n<p><div class=\"box\"></div><br>&lt;/body&gt;<br>```</p>\n<h3 id=\"浏览器的默认样式\"><a href=\"#浏览器的默认样式\" class=\"headerlink\" title=\"浏览器的默认样式\"></a>浏览器的默认样式</h3><ul>\n<li><strong>默认样式</strong></li>\n</ul>\n</li>\n<li>默认样式的存在会影响页面的布局，通常情况下编写网页时必须要去除浏览器的默认样式</li>\n<li>方法1 ：<ul>\n<li>快速去除<pre><code class=\"lang-html\">&lt;style&gt;\n*{\nmargin:0;\npadding:0;\n}\n&lt;/style&gt;\n</code></pre>\n</li>\n<li>方法2、3：</li>\n<li><strong>重置样式表</strong></li>\n</ul>\n</li>\n<li>reset.css 直接去除了浏览器的默认样式</li>\n<li>normalize.css 对默认样式进行统一</li>\n</ul>\n<h3 id=\"盒子的尺寸\"><a href=\"#盒子的尺寸\" class=\"headerlink\" title=\"盒子的尺寸\"></a>盒子的尺寸</h3><ul>\n<li>默认情况下，盒子可见区的大小由内容区、内边距和边框共同决定</li>\n<li><strong>box-sizing</strong><ul>\n<li>用来设置盒子尺寸的计算方式（设置width和height的作用）<ul>\n<li>可选值：<ul>\n<li><strong>content-box</strong> 默认值，宽度和高度用来设置内容区的大小</li>\n<li><strong>border-box</strong> 宽度和高度整个盒子可见框的大小</li>\n<li>width=内容区宽度+内边距宽度+边框宽度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"轮廓与圆角\"><a href=\"#轮廓与圆角\" class=\"headerlink\" title=\"轮廓与圆角\"></a>轮廓与圆角</h3><h4 id=\"轮廓\"><a href=\"#轮廓\" class=\"headerlink\" title=\"轮廓\"></a>轮廓</h4><ul>\n<li><strong>outline</strong> 用来设置元素的轮廓线，用法与border相同<ul>\n<li>轮廓不会影响可见区的大小</li>\n</ul>\n</li>\n<li><strong>box-shadow</strong> 用来设置元素的阴影效果，阴影不会影响页面布局<ul>\n<li>box-shadow属性<ul>\n<li>第一个值：水平偏移量，设置阴影的水平位置，正值向右，负值向左</li>\n<li>第二个值：垂直偏移量，设置阴影的垂直位置，正值向下，负值向上</li>\n<li>第三个值：阴影的模糊半径（越大越模糊）</li>\n<li>第四个值：阴影颜色<pre><code class=\"lang-html\">&lt;style&gt;\n.div{\n  width:100px;\n  height:100px;\n  background-color:orange;\n  box-shadow:10px 10px 10px red;\n}\n&lt;/style&gt; \n&lt;body&gt;\n&lt;div class=&quot;box&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n<h4 id=\"圆角\"><a href=\"#圆角\" class=\"headerlink\" title=\"圆角\"></a>圆角</h4></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>border-radius</strong> 用来设置圆角<ul>\n<li><strong>四个方向</strong><ul>\n<li>border-top-left-radius 左上角</li>\n<li>border-top-right-radius 右上角</li>\n<li>border-bottom-left-radius 左下角</li>\n<li>border-bottom-right-radius  右下角</li>\n</ul>\n</li>\n<li><strong>属性值</strong><ul>\n<li>一个值的情况：水平垂直方向的半径均相同</li>\n<li>两个值的情况：第一个为水平半径，第二个为垂直半径</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"浮动概述\"><a href=\"#浮动概述\" class=\"headerlink\" title=\"浮动概述\"></a>浮动概述</h2><ul>\n<li>CSS的浮动（float），会使元素向左或向右移动，其周围的元素也会重新排列</li>\n<li>Float常用于图像，在布局中也一样有用</li>\n<li>通过浮动可以使一个元素向其父元素的左侧或右侧移动<ul>\n<li>使用float属性来设置元素的浮动<ul>\n<li><strong>可选值</strong>：<ul>\n<li><strong>none</strong> 默认值，元素不浮动</li>\n<li><strong>left</strong> 元素向左浮动</li>\n<li><strong>right</strong> 元素向右浮动</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>注意</strong>：<ul>\n<li>元素设置浮动后，水平布局的等式就<strong>不需要强制成立</strong>（即width=内容区宽度+内边距宽度+边框宽度不需要成立）</li>\n<li>元素下面的还在文档流的元素会自动向上移动</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"浮动的特点\"><a href=\"#浮动的特点\" class=\"headerlink\" title=\"浮动的特点\"></a>浮动的特点</h3><ol>\n<li>浮动元素会完全脱离文档流，不再占据文档流中的位置</li>\n<li>设置浮动以后元素会向父元素的左侧或右侧移动</li>\n<li>浮动元素默认不会从父元素中移出</li>\n<li>浮动元素向左或向右移动时，不会超过它前边的其他浮动元素</li>\n<li>如果浮动元素的上边是一个没有设置浮动的圆水泥，则浮动元素无法上移</li>\n<li>浮动元素不会超过它上边的浮动兄弟元素，最多就是和它一样的高度<ul>\n<li><strong><font color=red>总结</font></strong><ul>\n<li>通过浮动可以制作一些水平方向的布局</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"浮动元素的其他特点\"><a href=\"#浮动元素的其他特点\" class=\"headerlink\" title=\"浮动元素的其他特点\"></a>浮动元素的其他特点</h3><ul>\n<li>浮动不会盖住文字，文字会自动环绕在浮动元素的周围，所以我们可以利用浮动来<strong>设置文字环绕图片的效果</strong></li>\n<li>元素设置浮动之后，脱离文档流，并且其元素特性会发生变化<ul>\n<li><strong>脱离文档流的元素特点</strong><ul>\n<li>块元素<ol>\n<li>块元素不再独占页面的一行</li>\n<li>脱离文档流后，块元素的宽度和高度默认被内容撑开</li>\n</ol>\n</li>\n<li>行内元素<ul>\n<li>脱离文档流会变成块元素，特点与块元素一致</li>\n</ul>\n</li>\n<li><strong><font color=greed>因此，脱离文档流的元素不再区分块元素和行内元素，统一变成块元素</font></strong></li>\n</ul>\n</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"高度塌陷问题\"><a href=\"#高度塌陷问题\" class=\"headerlink\" title=\"高度塌陷问题\"></a>高度塌陷问题</h3><ul>\n<li><p>图片例子</p>\n<ul>\n<li>原本效果：<br><img data-src=\"image/高度塌陷01.png\" alt=\"高度塌陷01\"></li>\n<li>高度塌陷效果：<br><img data-src=\"./image/高度塌陷02.png\" alt=\"高度塌陷02\"> </li>\n</ul>\n</li>\n<li><font color=purple>高度塌陷的问题\n- 在浮动布局中，父元素的高度默认是被子元素撑开的\n  - 当子元素浮动后，<font color=red>其余完全脱离文档流</font>，子元素从文档流中脱离\n  - 将会无法撑起父元素的高度，导致父元素的高度丢失\n  - 父元素高度丢失后，其下边的元素会自动上移，导致页面的布局混乱\n  - 所以高度塌陷问题是浮动布局中较为常见的问题，必须要处理！</font></li>\n<li>解决方法：<ul>\n<li>BFC</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"BFC\"><a href=\"#BFC\" class=\"headerlink\" title=\"BFC\"></a>BFC</h3><ul>\n<li>何为BFC？<ul>\n<li><strong>BFC（Block Formating Context）块级格式化环境</strong><ul>\n<li>BFC是CSS中一个隐含的属性，可以为一个元素开启BFC，开启BFC后该元素<strong>变成一个独立的布局区域</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>元素开启BFC的特点：</strong><ol>\n<li>开启BFC的元素不会被浮动元素所覆盖</li>\n<li>开启BFC的元素子元素和父元素的外边距（margin）不会重叠</li>\n<li>开启BFC的元素可以包含浮动的子元素</li>\n</ol>\n</li>\n<li>开启方法<ul>\n<li>设置元素的浮动（不推荐）</li>\n<li>将元素设置为行内块元素（block-inline）（不推荐）</li>\n<li>将元素的overflow设置为一个非visible的值 <ul>\n<li>overflow设置auto或hidden最佳<h3 id=\"clear属性与clearfix类\"><a href=\"#clear属性与clearfix类\" class=\"headerlink\" title=\"clear属性与clearfix类\"></a>clear属性与clearfix类</h3></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>情景：<ul>\n<li>如果我们不希望某个元素因为其他元素浮动的影响而改变位置，可以通过clear属性来<strong>清除浮动元素</strong>对当前元素产生的影响</li>\n</ul>\n</li>\n<li><strong>clear</strong><ul>\n<li><font color=blue>作用：<ul>\n<li>清除浮动元素对当前元素所产生的影响</li>\n</ul>\n</li>\n<li>可选值：<ul>\n<li><strong>left</strong>&nbsp;清除左侧浮动元素对当前元素的影响  </li>\n<li><strong>right</strong>&nbsp;清除右侧浮动元素对当前元素的影响</li>\n</ul>\n</li>\n<li>原理<ul>\n<li>设置清除浮动以后，浏览器会自动为元素添加一个上外边距，以使其位置不受其他元素的影响</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>clearfix</strong><ul>\n<li>这个样式可以同时解决高度塌陷和外边距重叠的问题<pre><code class=\"lang-html\">&lt;style&gt;\n.clearfix::before,\n.clearfix::after{\n  content:&#39;&#39;;\n  display:table;\n  clear:both;\n}\n&lt;/style&gt;\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "html"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/String%E5%92%8CObject%E8%A7%A3%E8%AF%BB/",
            "url": "https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/String%E5%92%8CObject%E8%A7%A3%E8%AF%BB/",
            "title": "String和Object解读",
            "date_published": "2020-10-27T13:33:03.000Z",
            "content_html": "<h2 id=\"String和Object解读\"><a href=\"#String和Object解读\" class=\"headerlink\" title=\"String和Object解读\"></a>String和Object解读</h2><h3 id=\"String-类型\"><a href=\"#String-类型\" class=\"headerlink\" title=\"String 类型\"></a>String 类型</h3><ul>\n<li>字符串可用单引号或双引号表示，即<br>```javaScript<br>var fomeName = “Turing”;<br>var NuseName = ‘Kavane’;<h4 id=\"字符字面量\"><a href=\"#字符字面量\" class=\"headerlink\" title=\"字符字面量\"></a>字符字面量</h4></li>\n<li>一些特殊的字符字面量，可采用转义字符，表示非打印字符，此处规则与java的一致<h4 id=\"字符串特点\"><a href=\"#字符串特点\" class=\"headerlink\" title=\"字符串特点\"></a>字符串特点</h4></li>\n<li>在ECMAScript中字符串是<strong>不可变的</strong>，要销毁掉原字符串，必须用另一个包含该原字符串的新字符串表示<pre><code class=\"lang-javaScript\">  var older =&quot;Open&quot;;\n  older = older+&quot;Stack&quot;;\n</code></pre>\n<h4 id=\"转换为字符串\"><a href=\"#转换为字符串\" class=\"headerlink\" title=\"转换为字符串\"></a>转换为字符串</h4></li>\n<li>方法一：使用<code>toString()</code>方法<pre><code class=\"lang-javaScript\">  var age = 18;\n  var ageAsString = age.toString();//字符串：&quot;18&quot;\n</code></pre>\n</li>\n<li><p>方法二：使用<code>String()</code>方法<br>  ```javaScript<br>  var info1 = true;<br>  var info2;<br>  var info3 = 10;</p>\n<p>  alert(String(info1));//“true”<br>  alert(String(info2));//“undefined”<br>  alert(String(info3));//“10”</p>\n</li>\n</ul>\n<h3 id=\"Object类型\"><a href=\"#Object类型\" class=\"headerlink\" title=\"Object类型\"></a>Object类型</h3><ul>\n<li>ECMAScript中的对象其实就是一组数据和功能的集合。对象可以通过执行new操作符后跟要创建的对象类型的名称来创建</li>\n<li>Object的每个实例都具有下列属性和方法。<ul>\n<li><code>constructor</code>：保存着用于创建当前对象的函数。对于前面的例子而言，构造函数（constructor）就是Object()。</li>\n<li><code>hasOwnProperty(propertyName)</code>：用于检查给定的属性在当前对象实例中（而不是在实例的原型中）是否存在。其中，作为参数的属性名（propertyName）必须以字符串形式指定（例如：o.hasOwnProperty(“name”)）。</li>\n<li><code>isPrototypeOf(object)</code>：用于检查传入的对象是否是当前对象的原型（第5章将讨论原型）。</li>\n<li><code>propertyIsEnumerable(propertyName)</code>：用于检查给定的属性是否能够使用for-in语句（本章后面将会讨论）来枚举。与hasOwnProperty()方法一样，作为参数的属性名必须以字符串形式指定。</li>\n<li><code>toLocaleString()</code>：返回对象的字符串表示，该字符串与执行环境的地区对应。</li>\n<li><code>toString()</code>：返回对象的字符串表示。</li>\n<li><code>valueOf()</code>：返回对象的字符串、数值或布尔值表示。通常与toString()方法的返回值相同。</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "JavaScript"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/",
            "url": "https://peter-pan001.github.io/my-blog/%E5%89%8D%E7%AB%AF/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF/",
            "title": "如何学习前端",
            "date_published": "2020-10-25T13:11:28.000Z",
            "content_html": "<h2 id=\"阶段一\"><a href=\"#阶段一\" class=\"headerlink\" title=\"阶段一\"></a>阶段一</h2><ul>\n<li>学习HTML5和CSS<ul>\n<li>菜鸟网站（H5学习基本的标签，CSS掌握基本属性，灵活布局节点）</li>\n</ul>\n</li>\n<li>学习Javascript<ul>\n<li>基本语法<ul>\n<li>数据类型、操作符、变量、函数声明、DOM编程</li>\n</ul>\n</li>\n<li>推荐书籍<ul>\n<li>Javascript高级程序设计、JavaScript DOM编程艺术</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>学习三大件时，切记不要跳步，学好DOM编程、CSS、JS基础，再学习使用框架（如jQuery、Vue、React、Bootstrap、Typescript）</li>\n</ul>\n<h2 id=\"阶段二\"><a href=\"#阶段二\" class=\"headerlink\" title=\"阶段二\"></a>阶段二</h2><ul>\n<li>提升开发环境<ul>\n<li>本地安装npm 、node.js(了解package.json)</li>\n</ul>\n</li>\n<li>初学者先用node.js作为辅助工具，然后学习Webpack打包工具<ul>\n<li>Webpack使用官方文档（初学学到开发就可以了，后面的可以粗略浏览一下，需要使用到再回过头来看，因为后边相对比较困难，而且不一定用到），并配合阮一峰es6教程学习</li>\n</ul>\n</li>\n<li>学习框架<ul>\n<li>工具包<ul>\n<li>Vue<ul>\n<li>建议学习官方中文文档</li>\n<li>Vue + Vue-router-Vuex</li>\n</ul>\n</li>\n<li>React<ul>\n<li>官方文档</li>\n<li>React + React-dom + React-router + Redux</li>\n<li>Ant Design 、 Element</li>\n</ul>\n</li>\n<li>Angular</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"阶段三\"><a href=\"#阶段三\" class=\"headerlink\" title=\"阶段三\"></a>阶段三</h2><ul>\n<li><p>回归之前所学的知识</p>\n<ul>\n<li>通过写博客</li>\n<li>回看官方文档</li>\n<li>Webpack  与   Rollup.js</li>\n</ul>\n</li>\n<li><p>新知识</p>\n<ul>\n<li>redux</li>\n<li>mobx</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"阶段四\"><a href=\"#阶段四\" class=\"headerlink\" title=\"阶段四\"></a>阶段四</h2><ul>\n<li>抽象思维</li>\n<li>视野</li>\n<li>影响力人脉 </li>\n</ul>\n",
            "tags": [
                "前端"
            ]
        }
    ]
}