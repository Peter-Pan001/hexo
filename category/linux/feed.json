{
    "version": "https://jsonfeed.org/version/1",
    "title": "理 想 净 土 • All posts by \"linux\" category",
    "description": "不必匆忙，不必火花四溅，不必成为别人，只需成为自己",
    "home_page_url": "https://peter-pan001.github.io/my-blog",
    "items": [
        {
            "id": "https://peter-pan001.github.io/my-blog/Linux/%E7%9B%AE%E5%BD%95%E4%B8%8E%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/",
            "url": "https://peter-pan001.github.io/my-blog/Linux/%E7%9B%AE%E5%BD%95%E4%B8%8E%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/",
            "title": "目录与文件管理",
            "date_published": "2022-01-09T12:36:45.000Z",
            "content_html": "<h1 id=\"目录与路径\"><a href=\"#目录与路径\" class=\"headerlink\" title=\"目录与路径\"></a>目录与路径</h1><h2 id=\"相对路径、绝对路径\"><a href=\"#相对路径、绝对路径\" class=\"headerlink\" title=\"相对路径、绝对路径\"></a>相对路径、绝对路径</h2><ul>\n<li>绝对路径：路径的写法“一定由根目录 / 写起”，例如： /usr/share/doc 这个目录。</li>\n<li>相对路径：路径的写法“不是由 / 写起”，例如由 /usr/share/doc 要到 /usr/share/man 下面时，可以写成： <code>cd ../man</code>这就是相对路径的写法啦！相对路径意指“相对于目前工作目录的路径！”</li>\n</ul>\n<h2 id=\"目录相关操作\"><a href=\"#目录相关操作\" class=\"headerlink\" title=\"目录相关操作\"></a>目录相关操作</h2><ul>\n<li><p><code>cd</code>：变换目录</p>\n</li>\n<li><p><code>pwd</code>：显示目前的目录</p>\n</li>\n<li><code>mkdir</code>：创建一个新的目录</li>\n<li><code>rmdir</code>：删除一个空的目录</li>\n</ul>\n<h3 id=\"cd-变换目录\"><a href=\"#cd-变换目录\" class=\"headerlink\" title=\"cd 变换目录\"></a>cd 变换目录</h3><ul>\n<li><code>cd ..</code>：回到上一层目录</li>\n<li><code>cd ~</code>：回到主目录<br><img data-src=\"https://s4.ax1x.com/2022/01/09/7kcYin.png\" alt=\"cd\"></li>\n</ul>\n<h3 id=\"pwd-显示当前所在目录\"><a href=\"#pwd-显示当前所在目录\" class=\"headerlink\" title=\"pwd 显示当前所在目录\"></a>pwd 显示当前所在目录</h3><ul>\n<li><code>pwd</code>是Print Working Directory的缩写，也就是显示目前所在目录的指令<br><img data-src=\"https://s4.ax1x.com/2022/01/09/7kgEOU.png\" alt=\"pwd\"></li>\n</ul>\n<h3 id=\"mkdir-创建新目录\"><a href=\"#mkdir-创建新目录\" class=\"headerlink\" title=\"mkdir 创建新目录\"></a>mkdir 创建新目录</h3><blockquote>\n<p>注意使用该命令后带不带<code>-p</code>的区别</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7kcXy8.png\" alt=\"mkdir\"></p>\n<h3 id=\"rmdir-删除空目录\"><a href=\"#rmdir-删除空目录\" class=\"headerlink\" title=\"rmdir 删除空目录\"></a>rmdir 删除空目录</h3><blockquote>\n<p>注意使用该命令后带不带<code>-p</code>的区别</p>\n</blockquote>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7kgZmF.png\" alt=\"rmdir\"></p>\n<h2 id=\"可执行文件路径的变量：-PATH\"><a href=\"#可执行文件路径的变量：-PATH\" class=\"headerlink\" title=\"可执行文件路径的变量： $PATH\"></a>可执行文件路径的变量： $PATH</h2><p><img data-src=\"https://s4.ax1x.com/2022/01/09/7kgMf1.png\" alt=\"path\"></p>\n<ul>\n<li>PATH（一定是大写）这个变量的内容是由一堆目录所组成的，每个目录中间用冒号（:）来隔<br>开， 每个目录是有“顺序”之分的。仔细看一下上面的输出，你可以发现到无论是root还是dmtsai都有 /bin 或 /usr/bin 这个目录在PATH变量内，所以当然就能够在任何地方执行ls来找到/bin/ls可执行文件啰！因为 /bin 在 CentOS 7 当中，就是链接到 /usr/bin 去的！ 所以这两个目录内容会一模一样</li>\n</ul>\n<h1 id=\"文件与目录管理\"><a href=\"#文件与目录管理\" class=\"headerlink\" title=\"文件与目录管理\"></a>文件与目录管理</h1><h2 id=\"ls-审查目录与文件\"><a href=\"#ls-审查目录与文件\" class=\"headerlink\" title=\"ls 审查目录与文件\"></a>ls 审查目录与文件</h2><p><img data-src=\"https://s4.ax1x.com/2022/01/09/7kglSx.png\" alt=\"ls\"></p>\n<h2 id=\"cp、rm、mv-复制、删除与移动\"><a href=\"#cp、rm、mv-复制、删除与移动\" class=\"headerlink\" title=\"cp、rm、mv 复制、删除与移动\"></a>cp、rm、mv 复制、删除与移动</h2><ul>\n<li>cp</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7kgJmD.png\" alt=\"cp\"><br><img data-src=\"https://s4.ax1x.com/2022/01/09/7kgY0e.png\" alt=\"cpa\"></p>\n<ul>\n<li><p>rm<br><img data-src=\"https://s4.ax1x.com/2022/01/09/7kgv1x.png\" alt=\"rm\"></p>\n</li>\n<li><p>mv</p>\n</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7k2pnO.png\" alt=\"mv\"></p>\n<h2 id=\"取得路径的文件名称与目录名称\"><a href=\"#取得路径的文件名称与目录名称\" class=\"headerlink\" title=\"取得路径的文件名称与目录名称\"></a>取得路径的文件名称与目录名称</h2><ul>\n<li><code>basename</code>与<code>dirname</code></li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7k2ZgP.png\" alt=\"basename\"></p>\n<h1 id=\"文件内容查阅\"><a href=\"#文件内容查阅\" class=\"headerlink\" title=\"文件内容查阅\"></a>文件内容查阅</h1><h2 id=\"直接查视\"><a href=\"#直接查视\" class=\"headerlink\" title=\"直接查视\"></a>直接查视</h2><h3 id=\"cat\"><a href=\"#cat\" class=\"headerlink\" title=\"cat\"></a>cat</h3><ul>\n<li><code>cat</code> 由第一行开始显示文件内容</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/10/7AjYee.png\" alt=\"cat\"></p>\n<h3 id=\"tac\"><a href=\"#tac\" class=\"headerlink\" title=\"tac\"></a>tac</h3><ul>\n<li><code>tac</code> 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/10/7AjwWt.png\" alt=\"tac\"></p>\n<h3 id=\"nl\"><a href=\"#nl\" class=\"headerlink\" title=\"nl\"></a>nl</h3><ul>\n<li><code>nl</code> 显示的时候，顺道输出行号！</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/10/7AjBSP.png\" alt=\"nl\"></p>\n<h2 id=\"可翻页查视\"><a href=\"#可翻页查视\" class=\"headerlink\" title=\"可翻页查视\"></a>可翻页查视</h2><h3 id=\"more\"><a href=\"#more\" class=\"headerlink\" title=\"more\"></a>more</h3><ul>\n<li><code>more</code> 一页一页的显示文件内容</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/10/7AjsOS.png\" alt=\"morea\"><br><img data-src=\"https://s4.ax1x.com/2022/01/10/7AjWYn.png\" alt=\"moreb\"></p>\n<h3 id=\"less\"><a href=\"#less\" class=\"headerlink\" title=\"less\"></a>less</h3><ul>\n<li><code>less</code> 与<code>more</code> 类似，但是比 more 更好的是，他可以往前翻页！</li>\n</ul>\n<h2 id=\"数据截取\"><a href=\"#数据截取\" class=\"headerlink\" title=\"数据截取\"></a>数据截取</h2><h3 id=\"head\"><a href=\"#head\" class=\"headerlink\" title=\"head\"></a>head</h3><ul>\n<li><code>head</code> 只看头几行</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/10/7AjfWq.png\" alt=\"head\"></p>\n<h3 id=\"tail\"><a href=\"#tail\" class=\"headerlink\" title=\"tail\"></a>tail</h3><ul>\n<li><code>tail</code> 只看尾巴几行</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/10/7AjIyT.png\" alt=\"tail\"></p>\n<h2 id=\"非纯文本文件-od\"><a href=\"#非纯文本文件-od\" class=\"headerlink\" title=\"非纯文本文件: od\"></a>非纯文本文件: od</h2><ul>\n<li><code>od</code> 以二进制的方式读取文件内容！</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/10/7AjbTJ.png\" alt=\"od\"></p>\n<h2 id=\"修改文件时间或创建新文件-touch\"><a href=\"#修改文件时间或创建新文件-touch\" class=\"headerlink\" title=\"修改文件时间或创建新文件:touch\"></a>修改文件时间或创建新文件:touch</h2><blockquote>\n<p>[root@study ~]# touch [-acdmt] 文件<br>   选项与参数：<br>   -a ：仅修订 access time；<br>   -c ：仅修改文件的时间，若该文件不存在则不创建新文件；<br>   -d ：后面可以接欲修订的日期而不用目前的日期，也可以使用 —date=”日期或时间”<br>   -m ：仅修改 mtime ；<br>   -t ：后面可以接欲修订的时间而不用目前的时间，格式为[YYYYMMDDhhmm]</p>\n</blockquote>\n<h1 id=\"指令与文件的搜寻\"><a href=\"#指令与文件的搜寻\" class=\"headerlink\" title=\"指令与文件的搜寻\"></a>指令与文件的搜寻</h1><h2 id=\"指令文件名的搜寻\"><a href=\"#指令文件名的搜寻\" class=\"headerlink\" title=\"指令文件名的搜寻\"></a>指令文件名的搜寻</h2><ul>\n<li><code>which</code>（寻找“可执行文件”）</li>\n</ul>\n<blockquote>\n<p>[root@study ~]# which [-a] command<br>选项或参数：<br>-a ：将所有由 PATH 目录中可以找到的指令均列出，而不止第一个被找到的指令名称</p>\n</blockquote>\n<h2 id=\"文件文件名的搜寻\"><a href=\"#文件文件名的搜寻\" class=\"headerlink\" title=\"文件文件名的搜寻\"></a>文件文件名的搜寻</h2><ul>\n<li><code>whereis</code> （由一些特定的目录中寻找文件文件名）</li>\n</ul>\n<blockquote>\n<p>[root@study ~]# whereis [-bmsu] 文件或目录名<br>选项与参数：<br>-l :可以列出 whereis 会去查询的几个主要目录而已<br>-b :只找 binary 格式的文件<br>-m :只找在说明文档 manual 路径下的文件<br>-s :只找 source 来源文件<br>-u :搜寻不在上述三个项目当中的其他特殊文件</p>\n</blockquote>\n<ul>\n<li><code>locate / updatedb</code></li>\n</ul>\n<blockquote>\n<p>[root@study ~]# locate [-ir] keyword<br>选项与参数：<br>-i ：忽略大小写的差异；<br>-c ：不输出文件名，仅计算找到的文件数量<br>-l ：仅输出几行的意思，例如输出五行则是 -l 5<br>-S ：输出 locate 所使用的数据库文件的相关信息，包括该数据库纪录的文件/目录数量等<br>-r ：后面可接正则表达式的显示方式</p>\n</blockquote>\n<ul>\n<li><code>find</code></li>\n</ul>\n<blockquote>\n<p>[root@study ~]# find [PATH] [option] [action]<br>选项与参数：<br>1. 与时间有关的选项：共有 -atime, -ctime 与 -mtime ，以 -mtime 说明<br>-mtime n ：n 为数字，意义为在 n 天之前的“一天之内”被更动过内容的文件；<br>-mtime +n ：列出在 n 天之前（不含 n 天本身）被更动过内容的文件文件名；<br>-mtime -n ：列出在 n 天之内（含 n 天本身）被更动过内容的文件文件名。<br>-newer file ：file 为一个存在的文件，列出比 file 还要新的文件文件名<br>2. 与使用者或群组名称有关的参数：<br>-uid n ：n 为数字，这个数字是使用者的帐号 ID，亦即 UID ，这个 UID 是记录在<br>/etc/passwd 里面与帐号名称对应的数字。这方面我们会在第四篇介绍。<br>-gid n ：n 为数字，这个数字是群组名称的 ID，亦即 GID，这个 GID 记录在<br>/etc/group，相关的介绍我们会第四篇说明～<br>-user name ：name 为使用者帐号名称喔！例如 dmtsai<br>-group name：name 为群组名称喔，例如 users ；<br>-nouser ：寻找文件的拥有者不存在 /etc/passwd 的人！<br>-nogroup ：寻找文件的拥有群组不存在于 /etc/group 的文件！<br>当你自行安装软件时，很可能该软件的属性当中并没有文件拥有者，<br>这是可能的！在这个时候，就可以使用 -nouser 与 -nogroup 搜寻<br>3. 与文件权限及名称有关的参数：<br>-name filename：搜寻文件名称为 filename 的文件；<br>-size [+-]SIZE：搜寻比 SIZE 还要大（+）或小（-）的文件。这个 SIZE 的规格有：<br>c: 代表 Byte， k: 代表 1024Bytes。所以，要找比 50KB<br>还要大的文件，就是“ -size +50k ”<br>-type TYPE ：搜寻文件的类型为 TYPE 的，类型主要有：一般正规文件 （f）, 设备文件 （b, c）,<br>目录 （d）, 链接文件 （l）, socket （s）, 及 FIFO （p） 等属性。<br>-perm mode ：搜寻文件权限“刚好等于” mode 的文件，这个 mode 为类似 chmod<br>的属性值，举例来说， -rwsr-xr-x 的属性为 4755 ！<br>-perm -mode ：搜寻文件权限“必须要全部囊括 mode 的权限”的文件，举例来说，<br>我们要搜寻 -rwxr—r— ，亦即 0744 的文件，使用 -perm -0744，<br>当一个文件的权限为 -rwsr-xr-x ，亦即 4755 时，也会被列出来，<br>因为 -rwsr-xr-x 的属性已经囊括了 -rwxr—r— 的属性了。<br>-perm /mode ：搜寻文件权限“包含任一 mode 的权限”的文件，举例来说，我们搜寻<br>-rwxr-xr-x ，亦即 -perm /755 时，但一个文件属性为 -rw———-<br>也会被列出来，因为他有 -rw…. 的属性存在！<br>4. 额外可进行的动作：<br>-exec command ：command 为其他指令，-exec 后面可再接额外的指令来处理搜寻到的结果。<br>-print ：将结果打印到屏幕上，这个动作是默认动作！</p>\n</blockquote>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/Linux/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/",
            "url": "https://peter-pan001.github.io/my-blog/Linux/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/",
            "title": "文件权限与目录管理",
            "date_published": "2022-01-09T06:09:06.000Z",
            "content_html": "<h1 id=\"使用者和群组\"><a href=\"#使用者和群组\" class=\"headerlink\" title=\"使用者和群组\"></a>使用者和群组</h1><ul>\n<li><strong>使用者</strong>。就是文件的拥有者，通过对文件权限的授予来划分使用者的类别，一些使用者对文件只有读或写的权限，而对于管理员则对文件既有只读和只写还有读写的权限，通过权限划分使用者，能让系统运行更为安全高效，对于某些用户起到隐私隔离的效果</li>\n<li><strong>群组</strong>。即在同一个Group中的所有用户共享其文件，而每个组之间又相互独立，即各组的权限共享范围不一，所以当设置该用户在群组内的文件权限时，同一群组下的其他用户即可对该文件进行操作</li>\n<li><strong>其他人</strong>。即others，是Linux系统中除了文件的拥有者、群组以外的用户称为others</li>\n</ul>\n<h1 id=\"文件权限\"><a href=\"#文件权限\" class=\"headerlink\" title=\"文件权限\"></a>文件权限</h1><h2 id=\"Linux-文件属性\"><a href=\"#Linux-文件属性\" class=\"headerlink\" title=\"Linux 文件属性\"></a>Linux 文件属性</h2><ul>\n<li><p>通过在root用户下，终端执行<code>su -al</code>，显示以下文件信息：</p>\n<p> <img data-src=\"https://s4.ax1x.com/2022/01/09/7FtNsP.png\" alt=\"docfile\"></p>\n<ul>\n<li>第一列为文件类型权限</li>\n<li>第二列的数字为该文件的连接数，目录树就是通过该数字把文件链接起来的</li>\n<li>第三列为文件的拥有者</li>\n<li>第四列为文件所在群组</li>\n<li>第五列为文件最后更改时间</li>\n<li>第六列为文件名</li>\n</ul>\n</li>\n<li><p><strong>文件类型与属性图</strong></p>\n<p> <img data-src=\"https://s4.ax1x.com/2022/01/09/7FtdZ8.png\" alt=\"quanxian\"></p>\n<ul>\n<li><p>关于第一个字符含义：</p>\n<p> ​    当为<code>[ d ]</code>则是目录，例如上表文件名为<code>.config</code>的那一行； </p>\n<p> ​    当为<code>[ - ]</code>则是文件，例如上表文件名为<code>initial-setup-ks.cfg</code>那一行； </p>\n<p> ​    若是<code>[ l ]</code>则表示为链接文件（link file）；</p>\n<p> ​    若是<code>[ b ]</code>则表示为设备文件里面的可供储存的周边设备（可随机存取设备）； </p>\n<p> ​    若是<code>[ c ]</code>则表示为设备文件里面的序列埠设备，例如键盘、鼠标（一次性读取设 备）</p>\n</li>\n<li><p>关于第2、3、4个字符含义（三个一组来解释）：</p>\n<p> ​    以三个为一组，且均为<code>rwx</code>的三个参数的组合。其中，<code>[ r ]</code>代表可读 、<code>[ w ]</code>代表可写、<code>[ x ]</code>代表可执行。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号<code>[ - ]</code>而已。</p>\n</li>\n<li><p>后面5-7和8-10的含义与2、3、4一致，只是一个表示文件所在群的权限，一个是others的权限</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"改变文件属性权限\"><a href=\"#改变文件属性权限\" class=\"headerlink\" title=\"改变文件属性权限\"></a>改变文件属性权限</h2><ul>\n<li><code>chgrp</code> ：改变文件所属群组</li>\n<li><code>chown</code> ：改变文件拥有者</li>\n<li><code>chmod</code> ：改变文件的权限, SUID, SGID, SBIT等等的特性</li>\n<li>改变所属群组, <code>chgrp</code></li>\n</ul>\n<h3 id=\"改变所属群组-chgrp\"><a href=\"#改变所属群组-chgrp\" class=\"headerlink\" title=\"改变所属群组 chgrp\"></a>改变所属群组 chgrp</h3><ul>\n<li>例如： <code>chgrp users initial-setup-ks.cfg</code> 第二位为群组名 第三位为文件名</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7FtsRs.png\" alt=\"chgrpa\"></p>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7Ftyzn.png\" alt=\"chgrpb\"></p>\n<h3 id=\"改变文件拥有者-chown\"><a href=\"#改变文件拥有者-chown\" class=\"headerlink\" title=\"改变文件拥有者 chown\"></a>改变文件拥有者 chown</h3><ul>\n<li>例如： <code>chown bin initial-setup-ks.cfg</code> 第二位为文件拥有者名 第三位为文件名<br><img data-src=\"https://s4.ax1x.com/2022/01/09/7FtWZT.png\" alt=\"chowna\"></li>\n</ul>\n<h3 id=\"改变文件权限-chmod\"><a href=\"#改变文件权限-chmod\" class=\"headerlink\" title=\"改变文件权限 chmod\"></a>改变文件权限 chmod</h3><ul>\n<li>例如： <code>chown 777 .bashrc</code> 第二位的三个数字分别代表(owner/group/others)的只读、只写、读写权限 第三位为文件名</li>\n<li>关于权限位数：<ul>\n<li>rwx，其中r=4（read），w=2（write），x=1（execute）</li>\n<li><blockquote>\n<p>owner = rwx = 4+2+1 = 7 &gt; group = rwx = 4+2+1 = 7 &gt; others= —- = 0+0+0 = 0</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7FtTzR.png\" alt=\"chmoda\"></p>\n<ul>\n<li>也可以用字符改变各种使用者<ul>\n<li>u 代表user</li>\n<li>g 代表group</li>\n<li>o 代表others</li>\n</ul>\n</li>\n<li>例如： <code>[root@study ~]# chmod u=rwx,go=rx .bashrc</code></li>\n</ul>\n<h3 id=\"目录文件权限意义\"><a href=\"#目录文件权限意义\" class=\"headerlink\" title=\"目录文件权限意义\"></a>目录文件权限意义</h3><h4 id=\"对文件而言\"><a href=\"#对文件而言\" class=\"headerlink\" title=\"对文件而言\"></a>对文件而言</h4><ul>\n<li>r （read）：可读取此一文件的实际内容，如读取文本文件的文字内容等</li>\n<li>w （write）：可以编辑、新增或者是修改该文件的内容（但不含删除该文件）</li>\n<li>x （execute）：该文件具有可以被系统执行的权限</li>\n</ul>\n<h4 id=\"对目录而言\"><a href=\"#对目录而言\" class=\"headerlink\" title=\"对目录而言\"></a>对目录而言</h4><ul>\n<li><p>r （read contents in directory）</p>\n<ul>\n<li>表示具有读取目录结构清单的权限，所以当你具有读取（r）一个目录的权限时，表示你可以查询该目录下的文件名数据。</li>\n</ul>\n</li>\n<li><p>w （modify contents of directory）</p>\n<ul>\n<li>表示可以创建新的文件与目录；删除已经存在的文件与目录（不论该文件的权限为何！）将已存在的文件或目录进行更名；搬移该目录内的文件、目录位置。</li>\n</ul>\n</li>\n<li><p>x （access directory）</p>\n<ul>\n<li>目录不可以被执行，目录的x代表的是使用者能否进入该目录成为工作目录的用途！所谓的工作目录（work directory）就是你目前所在的目录啦！举例来说，当你登陆Linux时，你所在的主文件夹就是你当下的工作目录。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Linux文件种类\"><a href=\"#Linux文件种类\" class=\"headerlink\" title=\"Linux文件种类\"></a>Linux文件种类</h3><h4 id=\"正规文件\"><a href=\"#正规文件\" class=\"headerlink\" title=\"正规文件\"></a>正规文件</h4><blockquote>\n<p>即是一般我们在进行存取的类型的文件，在由 <code>ls -al</code> 所显示出来的属性方面，第一个字符为[ - ]，例如 [-rwxrwxrwx ]</p>\n</blockquote>\n<ul>\n<li>纯文本文件ASCII</li>\n<li>二进制文件binary</li>\n<li>数据格式文件data</li>\n</ul>\n<h4 id=\"目录directory\"><a href=\"#目录directory\" class=\"headerlink\" title=\"目录directory\"></a>目录directory</h4><h4 id=\"链接文件link-file\"><a href=\"#链接文件link-file\" class=\"headerlink\" title=\"链接文件link file\"></a>链接文件link file</h4><h4 id=\"设备与设备文件device\"><a href=\"#设备与设备文件device\" class=\"headerlink\" title=\"设备与设备文件device\"></a>设备与设备文件device</h4><ul>\n<li>区块block</li>\n<li>字符character<h4 id=\"数据接口文件socket\"><a href=\"#数据接口文件socket\" class=\"headerlink\" title=\"数据接口文件socket\"></a>数据接口文件socket</h4><h4 id=\"数据输送档\"><a href=\"#数据输送档\" class=\"headerlink\" title=\"数据输送档\"></a>数据输送档</h4></li>\n</ul>\n<h3 id=\"Linux扩展名\"><a href=\"#Linux扩展名\" class=\"headerlink\" title=\"Linux扩展名\"></a>Linux扩展名</h3><ul>\n<li><code>*.sh</code> ： 脚本或批处理文件 （scripts），因为批处理文件为使用shell写成的，所以扩展名就编成 <code>.sh</code> ；</li>\n<li><code>Z, .tar, .tar.gz, .zip, *.tgz</code>： 经过打包的压缩文件。这是因为压缩软件分别为 <code>gunzip, tar</code>等等的，由于不同的压缩软件，而取其相关的扩展名！</li>\n<li><code>.html, .php</code>：网页相关文件，分别代表 HTML 语法与 PHP 语法的网页文件！ .html 的文件可使用网页浏览器来直接打开，至于 <code>.php</code> 的文件， 则可以通过 client 端的浏览器来server 端浏览，以得到运算后的网页结果！</li>\n</ul>\n<h1 id=\"Linux-目录配置\"><a href=\"#Linux-目录配置\" class=\"headerlink\" title=\"Linux 目录配置\"></a>Linux 目录配置</h1><ul>\n<li>基本的三层目录<ul>\n<li><code>/</code> （root, 根目录）：与开机系统有关；</li>\n<li><code>/usr</code> （unix software resource）：与软件安装/执行有关；</li>\n<li><code>/var</code>（variable）：与系统运行过程有关。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>所有的Linux目录配置都是基于FHS的，即文件系统继承标准Filesystem Hierarchy Standard</p>\n</blockquote>\n<h2 id=\"第一部分FHS（必须要存在的！！）\"><a href=\"#第一部分FHS（必须要存在的！！）\" class=\"headerlink\" title=\"第一部分FHS（必须要存在的！！）\"></a>第一部分FHS（必须要存在的！！）</h2><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">目录</th>\n<th style=\"text-align:center\">放置内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>/bin</strong></td>\n<td style=\"text-align:center\">系统有很多 ==放置可执行文件的目录== ，但/bin比较特殊。因为/bin放置的是在单人维护模式下还能够被操作的指令。 在/bin下面的指令可以被root与一般帐号所使用，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常用的指令。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/boot</strong></td>\n<td style=\"text-align:center\">这个目录主要在 ==放置开机会使用到的文件== ，包括Linux核心文件以及开机菜单与开机所需配置文件等等。 Linux kernel常用的文件名为：vmlinuz，如果使用的是grub2这个开机管理程序， 则还会存在/boot/grub2/这个目录喔！</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/dev</strong></td>\n<td style=\"text-align:center\">在Linux系统上，任何设备与周边设备都是以文件的型态存在于这个目录当中的。 比如重要的文件有/dev/null, /dev/zero, /dev/tty, /dev/loop, /dev/sd等等</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/etc</strong></td>\n<td style=\"text-align:center\">==系统主要的配置文件== 几乎都放置在这个目录内，例如人员的帐号密码档、各种服务的启始档等等。一般来说，这个目录下的各文件属性是可以让一般使用者查阅的， 但是只有root有权力修改。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/lib</strong></td>\n<td style=\"text-align:center\">系统的函数库非常的多，而/lib放置的则是在 ==开机时会用到的函数库== ， 以及在/bin或/sbin下面的指令会调用的函数库而已。 什么是函数库呢？你可以将他想成是“外挂”，某些指令必须要有这些“外挂”才能够顺利完成程序的执行之意。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/mnt</strong></td>\n<td style=\"text-align:center\">如果你想要 ==暂时挂载某些额外的设备== ，一般建议你可以放置到这个目录中。在古早时候，这个目录的用途与/media相同啦！只是有了/media之后，这个目录就用来暂时挂载用了</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/opt</strong></td>\n<td style=\"text-align:center\">这个是 ==给第三方协力软件放置的目录== 。什么是第三方协力软件啊？ 举例来说，KDE这个桌面管理系统是一个独立的计划，不过他可以安装到Linux系统中，因此KDE的软件就建议放置到此目录下了。 不过，以前的Linux系统中，我们还是习惯放置在/usr/local目录下呢！</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/srv</td>\n<td style=\"text-align:center\">srv可以视为“service”的缩写，是一些网络服务启动之后，这些服务所需要取用的数据目录。 常见的服务例如WWW, FTP等等。举例来说，WWW服务器需要的网页数据就可以放置在/srv/www/里面。 不过，系统的服务数据如果尚未要提供给网际网络任何人浏览的话，默认还是建议放置到 /var/lib下面即可。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/tmp</td>\n<td style=\"text-align:center\">这是让一般使用者或者是 ==正在执行的程序暂时放置文件== 的地方。 这个目录是任何人都能够存取的，所以你需要定期的清理一下。当然，重要数据不可放置在此目录啊！ 因为FHS甚至建议在开机时，应该要将/tmp下的数据都删除唷！</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/home</td>\n<td style=\"text-align:center\">这是 ==系统默认的使用者主文件夹== （home directory）。在你新增一个一般使用者帐号时， 默认的使用者主文件夹都会规范到这里来。比较重要的是，主文件夹有两种代号喔：~：代表目前这个使用者的主文件夹 ~dmtsai ：则代表 dmtsai 的主文件夹！</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/root</td>\n<td style=\"text-align:center\">==系统管理员（root）的主文件夹== 。之所以放在这里，是因为如果进入单人维护模式而仅挂载根目录时， 该目录就能够拥有root的主文件夹，所以我们会希望root的主文件夹与根目录放置在同一个分区中。</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h2 id=\"usr-的意义与内容：\"><a href=\"#usr-的意义与内容：\" class=\"headerlink\" title=\"/usr 的意义与内容：\"></a>/usr 的意义与内容：</h2><ul>\n<li>/usr里面放置的数据属于可分享的与不可变动的（shareable,static）， 如果你知道如何通过网络进行分区的挂载，那么/usr确实可以分享给区域网络内的其他主机来使用喔！其实usr是Unix Software Resource的缩写， 也就是“Unix操作系统软件资源”所放置的目录，而不是使用者的数据啦！这点要注意。 FHS建议所有软件开发者，应该将他们的数据合理的分别放置到这个目录下的次目录，而不要自行创建该软件自己独立的目录。因为是所有系统默认的软件（distribution发布者提供的软件）都会放置到/usr下面，因此这个目录有点类似Windows 系统的<code>C:\\Windows\\ （当中的一部份） + C:\\Programfiles\\</code>这两个目录的综合体，系统刚安装完毕时，这个目录会占用最多的硬盘容量</li>\n</ul>\n<h2 id=\"var-的意义与内容：\"><a href=\"#var-的意义与内容：\" class=\"headerlink\" title=\"/var 的意义与内容：\"></a>/var 的意义与内容：</h2><ul>\n<li>如果/usr是安装时会占用较大硬盘容量的目录，那么/var就是在系统运行后才会渐渐占用硬盘容量的目录。 因为/var目录主要针对常态性变动的文件，包括高速缓存（cache）、登录文件（log file）以及某些软件运行所产生的文件， 包括程序文件（lock file, run file），或者例如MySQL数据库的文件等等</li>\n</ul>\n<h2 id=\"目录树\"><a href=\"#目录树\" class=\"headerlink\" title=\"目录树\"></a>目录树</h2><ul>\n<li>目录树的启始点为根目录 （/, root）；</li>\n<li>每一个目录不止能使用本地端的 partition 的文件系统，也可以使用网络上的 filesystem。举例来说， 可以利用 Network File System （NFS） 服务器挂载某特定目录等。</li>\n<li>每一个文件在此目录树中的文件名（包含完整路径）都是独一无二的。</li>\n</ul>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7Ftbsx.png\" alt=\"directorytree\"></p>\n<h2 id=\"绝对路径、相对路径\"><a href=\"#绝对路径、相对路径\" class=\"headerlink\" title=\"绝对路径、相对路径\"></a>绝对路径、相对路径</h2><ul>\n<li>绝对路径：由根目录（/）开始写起的文件名或目录名称， 例如 <code>/home/dmtsai/.bashrc</code>；</li>\n<li>相对路径：相对于目前路径的文件名写法。 例如 <code>./home/dmtsai</code> 或<code>../../home/dmtsai/</code>等等。反正开头不是 / 就属于相对路径的写法</li>\n</ul>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/Linux/%E6%9B%B4%E6%8D%A2%E6%B8%85%E5%8D%8E%E6%BA%90/",
            "url": "https://peter-pan001.github.io/my-blog/Linux/%E6%9B%B4%E6%8D%A2%E6%B8%85%E5%8D%8E%E6%BA%90/",
            "title": "更换清华源",
            "date_published": "2022-01-09T06:08:20.000Z",
            "content_html": "<h2 id=\"具体步骤\"><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a>具体步骤</h2><ul>\n<li><code>rm -rf /etc/yum.repos.d/*</code>，删除 /etc/yum.repos.d/的所有文件</li>\n<li>进入/etc/yum.repos.d：<code>cd /etc/yum.repos.d/</code>,使用<code>ls</code>查看该目录下所有文件，找到<code>CentOS-Base.repo</code>文件，没有则用<code>touch</code>创建文件</li>\n<li>进入CentOS-Base.repo：<code>vi CentOS-Base.repo</code></li>\n</ul>\n<pre><code># CentOS-Base.repo\n#\n# The mirror system uses the connecting IP address of the client and the\n# update status of each mirror to pick mirrors that are updated to and\n# geographically close to the client.  You should use this for CentOS updates\n# unless you are manually picking other mirrors.\n#\n# If the mirrorlist= does not work for you, as a fall back you can try the\n# remarked out baseurl= line instead.\n#\n#\n\n[base]\nname=CentOS-$releasever - Base\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/os/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n#released updates\n[updates]\nname=CentOS-$releasever - Updates\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/updates/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n#additional packages that may be useful\n[extras]\nname=CentOS-$releasever - Extras\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/extras/$basearch/\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-$releasever - Plus\nbaseurl=http://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/centosplus/$basearch/\ngpgcheck=1\nenabled=0\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7\n</code></pre><ul>\n<li>改为以上的url路径</li>\n<li>使用 <code>yum clean all</code>清理yum</li>\n<li>使用<code>yum makecache</code></li>\n<li>使用<code>yum update</code></li>\n</ul>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/Linux/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E5%8F%8Ayum%E6%BA%90%E9%97%AE%E9%A2%98/",
            "url": "https://peter-pan001.github.io/my-blog/Linux/%E7%BD%91%E7%BB%9C%E9%85%8D%E7%BD%AE%E5%8F%8Ayum%E6%BA%90%E9%97%AE%E9%A2%98/",
            "title": "网络配置及yum源问题",
            "date_published": "2022-01-09T06:06:31.000Z",
            "content_html": "<h1 id=\"centOS7最小化安装后的网络配置\"><a href=\"#centOS7最小化安装后的网络配置\" class=\"headerlink\" title=\"centOS7最小化安装后的网络配置\"></a>centOS7最小化安装后的网络配置</h1><h2 id=\"配置基本的网络信息\"><a href=\"#配置基本的网络信息\" class=\"headerlink\" title=\"配置基本的网络信息\"></a>配置基本的网络信息</h2><ul>\n<li>在安装程序的以太网配置中设置手动，添加如下信息<ul>\n<li>ip地址</li>\n<li>子网掩码</li>\n<li>网关</li>\n<li>DNS服务器</li>\n</ul>\n</li>\n<li>设置本地localhost地址</li>\n</ul>\n<h2 id=\"安装net-tools\"><a href=\"#安装net-tools\" class=\"headerlink\" title=\"安装net-tools\"></a>安装net-tools</h2><blockquote>\n<p>centOS 最小化安装默认没有yum 、ifconfig等常用命令，需要安装net-tools启用</p>\n</blockquote>\n<ol>\n<li>首先输入id与pwd登录终端</li>\n<li>终端输入以下命令：<ul>\n<li><code>cd  /etc/sysconfig/network-scripts</code></li>\n<li><code>vi ifcfg-ens33</code></li>\n</ul>\n</li>\n<li>进入ifcfg配置文件后，将<code>ONBOOT=no</code>改为<code>ONBOOT=yes</code>，在把<code>BOOTPROTO</code>设为<code>static</code></li>\n<li>重启网卡：<code>service network restart</code></li>\n<li>使用<code>ip addr</code>，查看网络信息</li>\n<li>然后在终端输入命令安装net-tools：<code>yum install net-tools</code></li>\n</ol>\n<h2 id=\"命令行安装VMware-tools\"><a href=\"#命令行安装VMware-tools\" class=\"headerlink\" title=\"命令行安装VMware-tools\"></a>命令行安装VMware-tools</h2><blockquote>\n<p>若使用虚拟机学习linux，安装VMWare-tools来对虚拟机与主机之间的切换</p>\n</blockquote>\n<ol>\n<li>在虚拟机软件的界面点击虚拟机，找到安装VMware Tools并点击</li>\n<li>在终端输入<code>ls /dev</code></li>\n<li>输入<code>mkdir /mnt/cdrom</code>在<code>/mnt</code>目录下创建一个名为<code>cdrom</code>的目录</li>\n<li>输入<code>mount -t iso9660 /dev/cdrom /mnt/cdrom</code>将光盘挂载到<code>/mnt/cdrom</code>目录</li>\n<li>输入“ls /mnt/cdrom/”查看内容，输入<code>cp /mnt/cdrom/VMwareTools-9.2.0-799703.tar.gz /root/vm.tar.gz</code>,将名为“VMwareTools-9.2.0-799703.tar.gz”复制到/root目录下，并重新命名为vm.tar.gz。==(此时的版本后缀以本机为准)==</li>\n<li>在根目录下输入<code>ls</code>查看文件，输入<code>tar -xzf vm.tar.gz</code>将文件解压，输入“ls”查看文件，可发现新增目录“vmware-tools-distrib”</li>\n<li>输入<code>cd vmware-tools-distrib/</code>进入名为“vmware-tools-distrib”的目录，输入<code>./vmware-install.pl</code>尝试安装，出现错误“-bash: ./vmware-install.pl: /usr/bin/per: bad interpreter: No such file or directory”，表明未安装编译环境。</li>\n<li>输入<code>yum -y install perl gcc make kernel-headers kernel-devel</code>开始安装。</li>\n<li>在“vmware-tools-distrib”目录下重新输入<code>./vmware-install.pl</code>开始安装，一路上按回车键即可。</li>\n</ol>\n<h1 id=\"遇到突然ping不通外网的问题\"><a href=\"#遇到突然ping不通外网的问题\" class=\"headerlink\" title=\"遇到突然ping不通外网的问题\"></a>遇到突然ping不通外网的问题</h1><ul>\n<li>终端输入以下命令：<ul>\n<li><code>systemctl restart NetworkManager</code></li>\n<li><code>systemctl restart network</code></li>\n<li><code>ip addr</code></li>\n</ul>\n</li>\n<li>重新<code>ping</code>即可</li>\n</ul>\n<h1 id=\"出现yum源报错：File-contains-no-section-headers的解决方案\"><a href=\"#出现yum源报错：File-contains-no-section-headers的解决方案\" class=\"headerlink\" title=\"出现yum源报错：File contains no section headers的解决方案\"></a>出现yum源报错：File contains no section headers的解决方案</h1><ol>\n<li>删除<code>yum.repos.d</code>目录内的所有文件：<code>rm -f /etc/yum.repos.d/*</code></li>\n<li>下载阿里镜像：<code>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</code></li>\n<li>清理缓存：<code>yum clean all</code></li>\n<li>验证：<code>sudo yum makecache</code>，出现下图即为换源成功！<br><img data-src=\"https://s4.ax1x.com/2022/01/09/7FYDjx.png\" alt=\"linuxyum\"></li>\n</ol>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/Linux/Linux%E5%BC%80%E7%AF%87/",
            "url": "https://peter-pan001.github.io/my-blog/Linux/Linux%E5%BC%80%E7%AF%87/",
            "title": "Linux开篇",
            "date_published": "2022-01-09T06:01:50.000Z",
            "content_html": "<h1 id=\"Linux是什么？\"><a href=\"#Linux是什么？\" class=\"headerlink\" title=\"Linux是什么？\"></a>Linux是什么？</h1><ul>\n<li>一套操作系统OS</li>\n<li>处于计算机的核心与系统调用接口层</li>\n</ul>\n<h1 id=\"谁发明的？\"><a href=\"#谁发明的？\" class=\"headerlink\" title=\"谁发明的？\"></a>谁发明的？</h1><ul>\n<li>Linus Torvalds（托瓦兹, 1969年出生）</li>\n</ul>\n<h1 id=\"当前IT的角色定位\"><a href=\"#当前IT的角色定位\" class=\"headerlink\" title=\"当前IT的角色定位\"></a>当前IT的角色定位</h1><ol>\n<li>企业环境<ul>\n<li>充当网络服务器，得益于Linux的稳定性，并且Linux与各大硬件厂商的深度合作如，Dell、HP、IBM及VMware等</li>\n<li>关键服务的应用，如一些安全性可靠性高的操作，如充当金融账户接口任务</li>\n<li>高性能运算服务</li>\n</ul>\n</li>\n<li><p>个人环境</p>\n<ul>\n<li>桌面电脑Desktop。日常收发邮件，处理办公任务等</li>\n<li>移动端。如手机</li>\n<li>嵌入式系统。一些微计算机控制器，如路由器、robot控制芯片，车机控制系统等</li>\n</ul>\n</li>\n<li><p>云端</p>\n<ul>\n<li>云程序。硬件虚拟化，把实体主机变成逻辑上独立的虚拟硬件主机，实现一台实体机，多个OS同时运行</li>\n<li>端设备。树莓派</li>\n</ul>\n</li>\n</ol>\n<h1 id=\"Linux学习方向\"><a href=\"#Linux学习方向\" class=\"headerlink\" title=\"Linux学习方向\"></a>Linux学习方向</h1><ol>\n<li>基本的计算机软硬件原理，计组，计网操作系统原理</li>\n<li>认识linux的结构，如何安装，使用<code>man page</code>等</li>\n<li>了解Linux文件系统与磁盘管理</li>\n<li>学习Shell与Shell脚本</li>\n<li>熟悉Linux权限管理</li>\n<li>学会如何充当一位Linux系统管理员的角色，分析登录文件，模块管理，备份策略等</li>\n<li>学看源码</li>\n</ol>\n",
            "tags": [
                "Linux"
            ]
        },
        {
            "id": "https://peter-pan001.github.io/my-blog/Linux/LINUX%E5%AD%A6%E6%A0%A1%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/",
            "url": "https://peter-pan001.github.io/my-blog/Linux/LINUX%E5%AD%A6%E6%A0%A1%E8%AF%BE%E7%A8%8B%E7%AC%94%E8%AE%B0/",
            "title": "LINUX课程笔记",
            "date_published": "2021-06-18T14:01:07.000Z",
            "content_html": "<h1 id=\"Linux课程\"><a href=\"#Linux课程\" class=\"headerlink\" title=\"Linux课程\"></a>Linux课程</h1><blockquote>\n<p>本篇文章基于《linux就该这么学》编写，仅包含学校课程学习内容，并未包括该书本的完整知识!</p>\n</blockquote>\n<h2 id=\"重置ROOT管理员密码\"><a href=\"#重置ROOT管理员密码\" class=\"headerlink\" title=\"重置ROOT管理员密码\"></a>重置ROOT管理员密码</h2><ol>\n<li>重启 Linux 系统主机并出现引导界面时，按下键盘上的<code>e 键</code>进入内核编辑界面，如图所示</li>\n</ol>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7FJ3wD.png\" alt=\"yindao\"></p>\n<ol>\n<li>在 linux16 参数这行的最后面追加<code>rd.break</code>参数，然后按下 <code>Ctrl + X</code> 组合键来运行修改过的内核程序,如图所示</li>\n</ol>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7FJwOf.png\" alt=\"neihe\"></p>\n<ol>\n<li>大约 30 秒过后，进入到系统的紧急求援模式</li>\n</ol>\n<p><img data-src=\"https://s4.ax1x.com/2022/01/09/7FJ6Yj.png\" alt=\"jjqy\"></p>\n<ol>\n<li>依次输入以下命令，等待系统重启操作完毕，然后就可以使用新密码 linuxprobe 来登录Linux系统了</li>\n</ol>\n<pre><code class=\"lang-bash\">mount -o remount,rw /sysroot \nchroot /sysroot \npasswd \ntouch /.autorelabel \nexit \nreboot\n</code></pre>\n<h2 id=\"查看帮助命令\"><a href=\"#查看帮助命令\" class=\"headerlink\" title=\"查看帮助命令\"></a>查看帮助命令</h2><ol>\n<li>长格式<pre><code class=\"lang-s\">man --help\n</code></pre>\n</li>\n<li>短格式<pre><code class=\"lang-s\">man -h\n</code></pre>\n</li>\n</ol>\n<h2 id=\"常用的系统工作命令\"><a href=\"#常用的系统工作命令\" class=\"headerlink\" title=\"常用的系统工作命令\"></a>常用的系统工作命令</h2><h3 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"echo\"></a>echo</h3><ul>\n<li><code>echo</code> 命令用于在终端输出字符串或变量提取后的值，格式为<code>echo [字符串 | $变量]</code></li>\n<li>例如我们使用$变量的方式提取变量 SHELL 的值，并将其输出到屏幕上：<pre><code class=\"lang-s\">[root@linuxprobe ~]# echo $SHELL \n/bin/bash\n</code></pre>\n</li>\n<li>或者直接在 <code>echo</code> 后面加上要在命令行显示的字符信息:</li>\n</ul>\n<pre><code class=\"lang-s\"># echo welcome\nwelcome\n</code></pre>\n<h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><ul>\n<li><code>date</code> 命令用于显示及设置系统的时间或日期，格式为 <code>date [选项] [+指定的格式]</code></li>\n</ul>\n<ol>\n<li>按照默认格式查看当前系统时间的 date 命令</li>\n</ol>\n<pre><code class=\"lang-s\">[root@linuxprobe ~]# date \nMon Aug 24 16:11:23 CST 2017\n</code></pre>\n<ol>\n<li>按照“年-月-日 小时:分钟:秒”的格式查看当前系统时间的 <code>date</code> 命令</li>\n</ol>\n<pre><code class=\"lang-s\">[root@linuxprobe ~]# date &quot;+%Y-%m-%d %H:%M:%S&quot; \n2017-08-24 16:29:12\n</code></pre>\n<h3 id=\"reboot\"><a href=\"#reboot\" class=\"headerlink\" title=\"reboot\"></a>reboot</h3><ul>\n<li><code>reboot</code> 命令用于重启系统,默认只能使用 root 管理员来重启<pre><code class=\"lang-s\">[root@linuxprobe ~]# reboot\n</code></pre>\n<h3 id=\"poweroff\"><a href=\"#poweroff\" class=\"headerlink\" title=\"poweroff\"></a>poweroff</h3></li>\n<li><code>poweroff</code> 命令用于关闭系统,此默认只有 root 管理员才可以关闭电脑<pre><code class=\"lang-s\">[root@linuxprobe ~]# poweroff\n</code></pre>\n<h3 id=\"wget\"><a href=\"#wget\" class=\"headerlink\" title=\"wget\"></a>wget</h3></li>\n<li><p><code>wget</code> 命令用于在终端中下载网络文件，格式为 <code>wget [参数] 下载地址</code> </p>\n</li>\n<li><p><strong>命令参数</strong></p>\n<ul>\n<li><code>wget -b</code> 后台下载模式</li>\n<li><code>wget -P</code> 下载到指定目录</li>\n<li><code>wget -t</code> 最大尝试次数</li>\n<li><code>wget -c</code> 断点续传</li>\n<li><code>wget -p</code> 下载页面内所有资源，包括图片、视频等</li>\n<li><code>wget -r</code> 递归下载</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h3><ul>\n<li><code>ps</code>命令用于查看系统中的进程状态，格式为<code>ps [参数]</code>(process status)</li>\n<li><strong>命令参数</strong><ul>\n<li><code>wget -a</code> 显示所有进程（包括其他用户的进程）</li>\n<li><code>wget -u</code> 用户以及其他详细信息</li>\n<li><code>wget -x</code> 显示没有控制终端的进程</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"top\"><a href=\"#top\" class=\"headerlink\" title=\"top\"></a>top</h3><ul>\n<li><code>top</code> 命令用于动态地监视进程活动与系统负载等信息，其格式为 <code>top</code></li>\n</ul>\n<h3 id=\"pidof\"><a href=\"#pidof\" class=\"headerlink\" title=\"pidof\"></a>pidof</h3><ul>\n<li><code>pidof</code> 命令用于查询某个指定服务进程的 PID 值，格式为 <code>pidof [参数] [服务名称]</code></li>\n</ul>\n<pre><code class=\"lang-s\">[root@linuxprobe ~]# pidof sshd \n2156\n</code></pre>\n<h3 id=\"kill\"><a href=\"#kill\" class=\"headerlink\" title=\"kill\"></a>kill</h3><ul>\n<li><code>kill</code>命令用于终止某个指定 PID 的服务进程，格式为<code>kill [参数] [进程 PID]</code></li>\n</ul>\n<h3 id=\"killall\"><a href=\"#killall\" class=\"headerlink\" title=\"killall\"></a>killall</h3><ul>\n<li><code>killall</code> 命令用于终止某个指定名称的服务所对应的全部进程，格式为：<code>killall [参数] [进程名称]</code></li>\n</ul>\n<hr>\n<h2 id=\"系统状态检测命令\"><a href=\"#系统状态检测命令\" class=\"headerlink\" title=\"系统状态检测命令\"></a>系统状态检测命令</h2><h3 id=\"ifconfig\"><a href=\"#ifconfig\" class=\"headerlink\" title=\"ifconfig\"></a>ifconfig</h3><ul>\n<li><code>ifconfig</code> 命令用于获取网卡配置与网络状态等信息，格式为 <code>ifconfig [网络设备] [参数]</code></li>\n<li>使用 <code>ifconfig</code> 命令来查看本机当前的网卡配置与网络状态等信息时，其实主要查看的就是网卡名称、inet 参数后面的 IP 地址、ether 参数后面的网卡物理地址（又称为 MAC 地址），以及 RX、TX 的接收数据包与发送数据包的个数及累计流量</li>\n</ul>\n<h3 id=\"uname\"><a href=\"#uname\" class=\"headerlink\" title=\"uname\"></a>uname</h3><ul>\n<li><code>uname</code> 命令用于查看系统内核与系统版本等信息，格式为<code>uname [-a]</code></li>\n<li>在使用 <code>uname</code> 命令时，一般会固定搭配上<code>-a</code> 参数来完整地查看当前系统的内核名称、主机名、内核发行版本、节点名、系统时间、硬件名称、硬件平台、处理器类型以及操作系统名称等信息<pre><code class=\"lang-s\">[root@linuxprobe ~]# uname -a \nLinux linuxprobe.com 3.10.0-123.el7.x86_64 #1 SMP Mon May 5 11:16:57 EDT 2017 \nx86_64 x86_64 x86_64 GNU/Linux\n</code></pre>\n</li>\n</ul>\n<h3 id=\"uptime\"><a href=\"#uptime\" class=\"headerlink\" title=\"uptime\"></a>uptime</h3><ul>\n<li><code>uptime</code> 用于查看系统的负载信息，格式为 <code>uptime</code></li>\n</ul>\n<pre><code class=\"lang-s\">[root@linuxprobe ~]# uptime \n22:49:55 up 10 min, 2 users, load average: 0.01, 0.19, 0.18\n</code></pre>\n<h3 id=\"free\"><a href=\"#free\" class=\"headerlink\" title=\"free\"></a>free</h3><ul>\n<li><code>free</code> 用于显示当前系统中内存的使用量信息，格式为<code>free [-h]</code><pre><code class=\"lang-s\">[root@linuxprobe ~]# free -h\n</code></pre>\n</li>\n</ul>\n<h3 id=\"who\"><a href=\"#who\" class=\"headerlink\" title=\"who\"></a>who</h3><ul>\n<li><code>who</code> 用于查看当前登入主机的用户终端信息，格式为<code>who [参数]</code></li>\n</ul>\n<h3 id=\"last\"><a href=\"#last\" class=\"headerlink\" title=\"last\"></a>last</h3><ul>\n<li><code>last</code> 命令用于查看所有系统的登录记录，格式为<code>last [参数]</code></li>\n</ul>\n<h3 id=\"history\"><a href=\"#history\" class=\"headerlink\" title=\"history\"></a>history</h3><ul>\n<li><code>history</code> 命令用于显示历史执行过的命令，格式为<code>history [-c]</code></li>\n</ul>\n<h2 id=\"工作目录切换命令\"><a href=\"#工作目录切换命令\" class=\"headerlink\" title=\"工作目录切换命令\"></a>工作目录切换命令</h2><h3 id=\"pwd\"><a href=\"#pwd\" class=\"headerlink\" title=\"pwd\"></a>pwd</h3><ul>\n<li><code>pwd</code> 命令用于显示用户当前所处的目录。如果用户不知道自己当前所处的目录，就必须使用它。例如：</li>\n</ul>\n<pre><code class=\"lang-s\">[webber@localhost ~]$ pwd\n/home/webber                  //webber用户当前所在的目录\n[webber@localhost ~]$ su -        //从Webber用户切换到root用户\n</code></pre>\n<h3 id=\"cd\"><a href=\"#cd\" class=\"headerlink\" title=\"cd\"></a>cd</h3><ul>\n<li><code>cd</code> 命令用于切换工作路径，格式为<code>cd [目录名称]</code></li>\n<li>除了常见的切换目录方式，还可以使用<code>cd -</code>命令返回到上一次所处的目录，使用<code>cd..</code>命令进入上级目录，以及使用<code>cd ~</code>命令切换到当前用户的家目录，亦或使用<code>cd ~username</code>切换到其他用户的家目录</li>\n</ul>\n<ol>\n<li>返回到上一次的目录</li>\n</ol>\n<pre><code class=\"lang-s\">[root@linuxprobe bin]# cd - \n/etc \n[root@linuxprobe etc]#\n</code></pre>\n<ol>\n<li>快速切换到用户的家目录</li>\n</ol>\n<pre><code class=\"lang-s\">[root@linuxprobe etc]# cd ~ \n[root@linuxprobe ~]#\n</code></pre>\n<h3 id=\"ls\"><a href=\"#ls\" class=\"headerlink\" title=\"ls\"></a>ls</h3><ul>\n<li><code>ls</code> 命令用于显示目录中的文件信息，格式为<code>ls [选项] [文件]</code></li>\n</ul>\n",
            "tags": [
                "linux"
            ]
        }
    ]
}