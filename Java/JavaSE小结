



<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#FFF">
  <link rel="apple-touch-icon" sizes="180x180" href="/my-blog/images/apple-touch-icon.png">

<link rel="icon" type="image/ico" sizes="32x32" href="/my-blog/images/favicon.ico">
  <meta http-equiv="Cache-Control" content="no-transform">
  <meta http-equiv="Cache-Control" content="no-siteapp">


<link rel="alternate" type="application/rss+xml" title="理 想 净 土" href="https://github.com/Peter-Pan001/my-blog/rss.xml" />
<link rel="alternate" type="application/atom+xml" title="理 想 净 土" href="https://github.com/Peter-Pan001/my-blog/atom.xml" />
<link rel="alternate" type="application/json" title="理 想 净 土" href="https://github.com/Peter-Pan001/my-blog/feed.json" />

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">

<link rel="stylesheet" href="/my-blog/css/app.css?v=0.2.4">

  
  <meta name="keywords" content="Java" />


<link rel="canonical" href="https://github.com/Peter-Pan001/my-blog/Java/JavaSE%E5%B0%8F%E7%BB%93">



  <title>
JavaSE小结 - Java |
Peter Pan = 理 想 净 土 =  凭时间赢来的东西，时间肯定会为之作证 </title>
<meta name="generator" content="Hexo 4.2.1"></head>
<body itemscope itemtype="http://schema.org/WebPage">
  <div id="loading">
    <div class="cat">
      <div class="body"></div>
      <div class="head">
        <div class="face"></div>
      </div>
      <div class="foot">
        <div class="tummy-end"></div>
        <div class="bottom"></div>
        <div class="legs left"></div>
        <div class="legs right"></div>
      </div>
      <div class="paw">
        <div class="hands left"></div>
        <div class="hands right"></div>
      </div>
    </div>
  </div>
  <div id="container">
    <header id="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="inner">
        <div id="brand">
          <div class="pjax">
          
  <h1 itemprop="name headline">JavaSE小结
  </h1>
  
<div class="meta">
  <span class="item" title="创建时间：2021-01-05 10:53:33">
    <span class="icon">
      <i class="ic i-calendar"></i>
    </span>
    <span class="text">发表于</span>
    <time itemprop="dateCreated datePublished" datetime="2021-01-05T10:53:33+08:00">2021-01-05</time>
  </span>
</div>


          </div>
        </div>
        <nav id="nav">
  <div class="inner">
    <div class="toggle">
      <div class="lines" aria-label="切换导航栏">
        <span class="line"></span>
        <span class="line"></span>
        <span class="line"></span>
      </div>
    </div>
    <ul class="menu">
      <li class="item title"><a href="/my-blog/" rel="start">Peter Pan</a></li>
    </ul>
    <ul class="right">
      <li class="item theme">
        <i class="ic i-sun"></i>
      </li>
      <li class="item search">
        <i class="ic i-search"></i>
      </li>
    </ul>
  </div>
</nav>

      </div>
      <div id="imgs" class="pjax">
          <img src="https://s4.ax1x.com/2022/01/09/7Fya5t.jpg">
      </div>
    </header>
    <div id="waves">
      <svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto">
        <defs>
          <path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z" />
        </defs>
        <g class="parallax">
          <use xlink:href="#gentle-wave" x="48" y="0" />
          <use xlink:href="#gentle-wave" x="48" y="3" />
          <use xlink:href="#gentle-wave" x="48" y="5" />
          <use xlink:href="#gentle-wave" x="48" y="7" />
        </g>
      </svg>
    </div>
    <main>
      <div class="inner">
        <div id="main" class="pjax">
          
  <div class="article wrap">
    
<div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList">
<i class="ic i-home"></i>
<span><a href="/my-blog/">首页</a></span><i class="ic i-angle-right"></i>
<span  class="current" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/my-blog/categories/java/" itemprop="item" rel="index" title="分类于 Java"><span itemprop="name">Java</span></a>
<meta itemprop="position" content="1" /></span>
</div>

    <article itemscope itemtype="http://schema.org/Article" class="post block" lang="zh-CN">
  <link itemprop="mainEntityOfPage" href="https://github.com/Peter-Pan001/my-blog/Java/JavaSE%E5%B0%8F%E7%BB%93">

  <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
    <meta itemprop="image" content="/my-blog/images/avatar.jpg">
    <meta itemprop="name" content="Peter Pan">
    <meta itemprop="description" content=" 凭时间赢来的东西，时间肯定会为之作证 , 不必匆忙，不必火花四溅，不必成为别人，只需成为自己">
  </span>

  <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
    <meta itemprop="name" content="理 想 净 土">
  </span>

  <div class="body md" itemprop="articleBody">
    

    <h2 id="语言背景"><a class="markdownIt-Anchor" href="#语言背景">#</a> 语言背景</h2>
<ul>
<li>Java 于 1995 年诞生，拥有跨平台、面向对象、泛型编程的特性，广泛应用于企业级 Web 引用开发和移动应用开发</li>
<li>Java 有三个版本
<ul>
<li>JavaSE (标准版)</li>
<li>JavaEE (企业版)</li>
<li>JavaME (微型版)</li>
</ul>
</li>
<li>2006 年发布 Hadoop</li>
<li>JDK：java 开发工具包，里面包含了各种用于 java 程序开发的基本工具包</li>
<li>JRE：java 运行环境</li>
</ul>
<h2 id="基础语法"><a class="markdownIt-Anchor" href="#基础语法">#</a> 基础语法</h2>
<h3 id="注释"><a class="markdownIt-Anchor" href="#注释">#</a> 注释</h3>
<ul>
<li>单行注释：  <code>//</code></li>
<li>多行注释：  <code>/**/</code></li>
<li>文档注释：  <code>/** */</code></li>
</ul>
<h3 id="标识符"><a class="markdownIt-Anchor" href="#标识符">#</a> 标识符</h3>
<ul>
<li>标识符即关键字，如：  <code>public</code> 、 <code>finally</code>  等</li>
</ul>
<h3 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型">#</a> 数据类型</h3>
<ul>
<li>
<p><strong>基本数据类型</strong></p>
<ul>
<li><strong>整型</strong>
<ul>
<li>byte</li>
<li>short</li>
<li>int</li>
<li>long</li>
</ul>
</li>
<li><strong>字符型</strong>
<ul>
<li>char</li>
</ul>
</li>
<li><strong>浮点型</strong>
<ul>
<li>double</li>
<li>int</li>
</ul>
</li>
<li><strong>布尔型</strong>
<ul>
<li>boolean</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>引用数据类型</strong></p>
<ul>
<li>类</li>
<li>接口</li>
<li>数组</li>
</ul>
</li>
<li>
<p><strong>类型转换</strong></p>
<ul>
<li>自动转换 (低转高)</li>
<li>强制转换 (高转低)</li>
</ul>
</li>
</ul>
<h3 id="变量与常量"><a class="markdownIt-Anchor" href="#变量与常量">#</a> 变量与常量</h3>
<ul>
<li>
<p><code>type varName [=value];</code></p>
</li>
<li>
<p>作用域</p>
<ul>
<li>类变量</li>
<li>实例变量</li>
<li>局部变量</li>
</ul>
</li>
<li>
<p>常量</p>
<ul>
<li><code>final MIN_B = 10;</code></li>
</ul>
</li>
<li>
<p>命名规范</p>
<ul>
<li>见名知意</li>
<li>驼峰命名法</li>
<li>类命名首字母大写</li>
<li>常量： 大写 + 下划线</li>
<li>不使用驼峰命名法</li>
</ul>
</li>
</ul>
<h3 id="运算符"><a class="markdownIt-Anchor" href="#运算符">#</a> 运算符</h3>
<ul>
<li><strong>算术运算符</strong>
<ul>
<li><code>+,-,*,/,%,++,--</code>  (加、减、乘、除、取余数、自增、自减)</li>
</ul>
</li>
<li><strong>赋值运算符</strong>
<ul>
<li><code>=</code></li>
</ul>
</li>
<li><strong>关系运算符</strong>
<ul>
<li><code>&gt;,&lt;,=&gt;,&lt;=,==,!=</code>   <code>instance of</code>  (大于、小于、大于等于、小于等于、等于、不等于、判断是否为类的实例化对象)</li>
</ul>
</li>
<li><strong>逻辑运算符</strong>
<ul>
<li><code>&amp;&amp;,||,!</code>  (与、或、非)</li>
</ul>
</li>
<li><strong>位运算符</strong>
<ul>
<li><code>&amp;,|,^,~,&gt;&gt;,&lt;&lt;,&gt;&gt;&gt;</code>  (位与、位或、位异或、位非、左移、右移、无符号右移)</li>
</ul>
</li>
<li><strong>条件运算符</strong>
<ul>
<li><code>?:</code>  (表达式 ？ 为真语句 ：为假语句)</li>
</ul>
</li>
<li><strong>扩展运算符</strong>
<ul>
<li><code>+=,-=,*=,/=</code>  
<ul>
<li><code>a+=2 === a=a+2</code></li>
<li><code>a*=2 === a==a*2</code></li>
<li><code>a-=2 === a=a-2</code></li>
<li><code>a/=2 === a=a/2</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="包机制"><a class="markdownIt-Anchor" href="#包机制">#</a> 包机制</h3>
<ul>
<li><strong>域名倒写</strong></li>
<li><strong>防止命名冲突</strong></li>
<li><code>package</code></li>
<li><code>import</code></li>
</ul>
<h3 id="javadoc"><a class="markdownIt-Anchor" href="#javadoc">#</a> JavaDoc</h3>
<ul>
<li><strong>JDK 帮助文档</strong></li>
<li><strong>javadoc</strong>
<ul>
<li><code>@author</code></li>
<li><code>@version</code></li>
<li><code>@since</code></li>
<li><code>@param</code></li>
<li><code>@return</code></li>
<li><code>@thoows</code></li>
</ul>
</li>
</ul>
<figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">public</span> <span class="token class-name">Class</span> <span class="token class-name">Welcome</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token comment">/**</pre></td></tr><tr><td data-num="3"></td><td><pre>    * @author theMan</pre></td></tr><tr><td data-num="4"></td><td><pre>    * @param args</pre></td></tr><tr><td data-num="5"></td><td><pre>    * @since 1.0</pre></td></tr><tr><td data-num="6"></td><td><pre>    * @throws 无异常抛出</pre></td></tr><tr><td data-num="7"></td><td><pre>    */</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"welcome"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="流程控制"><a class="markdownIt-Anchor" href="#流程控制">#</a> 流程控制</h2>
<ul>
<li><strong>Scanner</strong>
<ul>
<li>用户交互  <code>System.in</code></li>
</ul>
</li>
<li><strong>顺序结构</strong>
<ul>
<li><code>if</code>  单选择结构</li>
<li><code>if-else</code>  多选择结构</li>
<li><code>switch</code>  多选结构
<ul>
<li>jdk 支持了 <code>String</code>  类型</li>
<li><code>case</code>  穿透现象</li>
<li><code>default</code>  默认</li>
</ul>
</li>
</ul>
</li>
<li><strong>循环结构</strong>
<ul>
<li><code>while</code>  避免死循环</li>
<li><code>do-while</code>  先执行，后判断</li>
<li><code>for</code></li>
<li>增强 for 循环</li>
</ul>
</li>
<li><strong>特殊</strong>
<ul>
<li><code>break</code>  跳出循环</li>
<li><code>continue</code>  终止本次循环</li>
<li><code>return</code>  结束方法运行</li>
</ul>
</li>
</ul>
<h2 id="方法"><a class="markdownIt-Anchor" href="#方法">#</a> 方法</h2>
<ul>
<li><strong>何为方法</strong>
<ul>
<li return="" 返回值;="">修饰符 返回值 方法名 (参数名)</li>
</ul>
</li>
<li><strong>方法调用</strong>
<ul>
<li><code>类名.方法</code></li>
<li><code>对象.方法</code></li>
</ul>
</li>
<li><strong>方法重载</strong>
<ul>
<li>名字相同，但参数列表不同</li>
</ul>
</li>
<li><strong>命令行传参</strong>
<ul>
<li>给 main 方法传递参数</li>
</ul>
</li>
<li><strong>可变长参数</strong>
<ul>
<li><code>...</code></li>
<li>必须放在最后一个参数</li>
</ul>
</li>
<li><strong>递归</strong></li>
</ul>
<h2 id="数组"><a class="markdownIt-Anchor" href="#数组">#</a> 数组</h2>
<ul>
<li><strong>数组举例</strong>
<ul>
<li><code>new int[10]</code></li>
<li><code>{1,2,3}</code></li>
<li>同一数组内的数据必须相同类型</li>
</ul>
</li>
<li><strong>数组的使用</strong>
<ul>
<li>通过下标拿到值</li>
<li><code>ArrayIndexOfBounds</code></li>
<li>增强的 for 循环遍历</li>
</ul>
</li>
<li><strong>二维数组</strong>
<ul>
<li><code>new int[][]</code></li>
</ul>
</li>
<li><strong>Array 工具类</strong></li>
<li><strong>排序算法</strong>
<ul>
<li>冒泡排序</li>
<li>选择排序</li>
<li>插入排序</li>
<li>快速排序</li>
<li>归并排序</li>
<li>希尔排序</li>
<li>堆排序</li>
<li>桶排序</li>
</ul>
</li>
</ul>
<h2 id="面向对象"><a class="markdownIt-Anchor" href="#面向对象">#</a> 面向对象</h2>
<ul>
<li>
<p><strong>何为面向对象</strong></p>
<ul>
<li>把相关的数据和方法组织为一个整体来看待，从更高的层次来进行系统建模，更贴近事物的自然运行模式。</li>
</ul>
</li>
<li>
<p><strong>类与对象</strong></p>
<ul>
<li>类是对象的抽象：即模板 Class</li>
<li>对象是类的实例</li>
</ul>
</li>
<li>
<p><strong>构造方法</strong></p>
<ul>
<li>构造的重载
<ul>
<li>默认为无参构造</li>
<li>如果手动定义了一个有参构造就必须再加一个无参构造</li>
<li>单例模式，需要构造器私有！</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>new 对象</strong></p>
<ul>
<li>栈存放引用</li>
<li>堆存放具体的对象</li>
</ul>
</li>
<li>
<p><strong>封装</strong></p>
<ul>
<li>属性私有，即： <code>get</code> 、 <code>set</code>  方法</li>
</ul>
</li>
<li>
<p><strong>继承</strong></p>
<ul>
<li><code>extends</code></li>
<li><code>Object</code></li>
<li>子类拥有父类的全部属性</li>
<li>方法重写</li>
<li><code>this</code></li>
<li><code>super</code></li>
<li>Java 是单继承，只可继承一个父类</li>
</ul>
</li>
<li>
<p><strong>多态</strong></p>
<ul>
<li>父类的引用指向子类的对象   <code>Person person = new Student();</code></li>
<li><code>instance of</code>  关键，如果匹配，可以进行类型之间的转换</li>
</ul>
</li>
<li>
<p><strong>修饰符</strong></p>
<ul>
<li><code>public</code></li>
<li><code>protected</code></li>
<li><code>private</code></li>
<li><code>static</code></li>
<li><code>final</code></li>
<li><code>abstract</code></li>
</ul>
</li>
<li>
<p><strong>接口</strong></p>
<ul>
<li><code>interface</code></li>
<li>约束：只能定义方法名</li>
<li>子类实现接口时，必须重写其方法</li>
<li>只有一个方法的接口叫做函数式接口，可使用 <code>lamda</code>  表达式进行简化</li>
<li>接口比抽象类更抽象</li>
<li>一个类可以实现多个接口</li>
</ul>
</li>
<li>
<p><strong>内部类</strong></p>
<ul>
<li>局部内部类</li>
<li>静态内部类</li>
<li>匿名内部类</li>
</ul>
</li>
</ul>
<h2 id="异常"><a class="markdownIt-Anchor" href="#异常">#</a> 异常</h2>
<ul>
<li>
<p><strong>Throwable</strong></p>
<ul>
<li>Exception
<ul>
<li>运行时异常
<ul>
<li><code>1/0</code></li>
<li><code>ClassNotFound</code></li>
<li><code>NullPoint</code></li>
<li><code>UnKonwnType</code></li>
<li><code>ArrayIndexOutOfBounds</code></li>
</ul>
</li>
<li>检查时异常</li>
</ul>
</li>
<li>Error
<ul>
<li>AWT 错误</li>
<li>JVM 错误
<ul>
<li><code>StackOverFlow</code></li>
<li><code>OutOfMemory</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>五个关键字</strong></p>
<ul>
<li><code>try{}</code></li>
<li><code>catch(){}</code></li>
<li><code>finally{}</code></li>
<li><code>throw</code>  手动抛出异常</li>
<li><code>throws</code>  方法抛出异常</li>
</ul>
</li>
<li>
<p><strong>自定义异常</strong></p>
<ul>
<li>继承 <code>Exception</code>  类即可</li>
</ul>
</li>
</ul>
<h2 id="常用类"><a class="markdownIt-Anchor" href="#常用类">#</a> 常用类</h2>
<ul>
<li><strong>Object 类</strong>
<ul>
<li><code>hashcode()</code></li>
<li><code>toString()</code></li>
<li><code>clone()</code></li>
<li><code>getClass()</code></li>
<li><code>notify()</code></li>
<li><code>wait()</code></li>
<li><code>equals()</code></li>
</ul>
</li>
<li><strong>Math 类</strong>
<ul>
<li>常见的数学运算</li>
</ul>
</li>
<li><strong>Random 类</strong>
<ul>
<li>生成随机数  <code>UUID</code></li>
</ul>
</li>
<li><strong>File 类</strong>
<ul>
<li>文件的增删改查</li>
</ul>
</li>
<li><strong>包装类</strong>
<ul>
<li>自动装箱</li>
<li>自动拆箱</li>
</ul>
</li>
<li><strong>Date 类</strong>
<ul>
<li><code>Date</code></li>
<li><code>simpleDateFormat</code> :  <code>yyyy-MM-dd HH:mm:ss</code></li>
<li><code>Calendar</code></li>
</ul>
</li>
<li><strong>String 类</strong>
<ul>
<li>不可变性 final, 操作量较少</li>
</ul>
</li>
<li><strong>StringBuffer</strong>
<ul>
<li>可变长</li>
<li><code>append()</code></li>
<li>多线程数据量较大</li>
<li>效率低，安全</li>
</ul>
</li>
<li><strong>StringBuilder</strong>
<ul>
<li>可变长</li>
<li>单线程数据量较大</li>
<li>效率高，不安全</li>
</ul>
</li>
<li><code>String str = &quot;a&quot;+1 + 2</code></li>
<li><code>String str = 'a' + 1 + 2</code></li>
<li><code>String str = 1+2+'a'</code></li>
</ul>
<h2 id="集合框架"><a class="markdownIt-Anchor" href="#集合框架">#</a> 集合框架</h2>
<h3 id="collection"><a class="markdownIt-Anchor" href="#collection">#</a> Collection</h3>
<ul>
<li><strong>List</strong>
<ul>
<li><code>ArrayList</code>
<ul>
<li><code>add()</code></li>
<li><code>remove()</code></li>
<li><code>contains()</code></li>
<li><code>size()</code></li>
</ul>
</li>
<li><code>LinkedList</code>
<ul>
<li><code>getFirst()</code></li>
<li><code>getLast()</code></li>
<li><code>removeFirst()</code></li>
<li><code>addFirst()</code></li>
</ul>
</li>
<li>iterator 迭代器</li>
</ul>
</li>
<li><strong>Set</strong>
<ul>
<li><code>HashSet</code></li>
<li><code>TreeSet</code></li>
</ul>
</li>
</ul>
<h3 id="map"><a class="markdownIt-Anchor" href="#map">#</a> Map</h3>
<ul>
<li><code>HashMap</code></li>
<li><code>TreeMap</code></li>
</ul>
<h3 id="collections工具类"><a class="markdownIt-Anchor" href="#collections工具类">#</a> Collections 工具类</h3>
<h3 id="泛型"><a class="markdownIt-Anchor" href="#泛型">#</a> 泛型</h3>
<ul>
<li>约束，避免类型转换之间的问题</li>
</ul>
<h2 id="io流"><a class="markdownIt-Anchor" href="#io流">#</a> I/O 流</h2>
<h3 id="字节流"><a class="markdownIt-Anchor" href="#字节流">#</a> 字节流</h3>
<ul>
<li>输出： <code>OutputStream</code></li>
<li>输入： <code>InputStream</code></li>
</ul>
<h3 id="字符流"><a class="markdownIt-Anchor" href="#字符流">#</a> 字符流</h3>
<ul>
<li><strong>Reader</strong></li>
<li><strong>Wirter</strong></li>
</ul>
<h3 id="节点流"><a class="markdownIt-Anchor" href="#节点流">#</a> 节点流</h3>
<ul>
<li><code>CharArrayReader</code> 、 <code>Wirter</code> 、 <code>inputstream</code> 、 <code>outputstream</code></li>
<li><code>StringReader</code> 、 <code>Writer</code></li>
<li><code>pipe</code> 、 <code>pipedOutputStream</code></li>
<li><code>File</code></li>
</ul>
<h3 id="处理流"><a class="markdownIt-Anchor" href="#处理流">#</a> 处理流</h3>
<ul>
<li>
<p><strong>buffer</strong></p>
<ul>
<li><code>bufferInputStream</code></li>
<li><code>bufferOutputStream</code></li>
<li><code>bufferReader</code></li>
<li><code>bufferWriter</code></li>
</ul>
</li>
<li>
<p><strong>data</strong></p>
<ul>
<li><code>DataInputStream</code></li>
<li><code>DataOutputStream</code></li>
</ul>
</li>
<li>
<p><strong>object 流</strong></p>
</li>
<li>
<p><strong>转换流</strong></p>
<ul>
<li><code>InputStreamReader</code></li>
<li><code>OutputStreamWriter</code></li>
</ul>
</li>
<li>
<p><strong>Filter</strong></p>
<ul>
<li>四个</li>
</ul>
</li>
<li>
<p><strong>print</strong></p>
<ul>
<li><code>PrintWriter</code></li>
<li><code>PrintStream</code></li>
</ul>
</li>
</ul>
<h2 id="多线程"><a class="markdownIt-Anchor" href="#多线程">#</a> 多线程</h2>
<h3 id="进程和线程"><a class="markdownIt-Anchor" href="#进程和线程">#</a> 进程和线程</h3>
<ul>
<li><code>run()</code></li>
<li><code>Start()</code></li>
</ul>
<h3 id="线程创建的方式"><a class="markdownIt-Anchor" href="#线程创建的方式">#</a> 线程创建的方式</h3>
<ul>
<li><code>Thread</code></li>
<li><code>Runnable</code></li>
<li><code>Callable</code></li>
</ul>
<h3 id="静态代理"><a class="markdownIt-Anchor" href="#静态代理">#</a> 静态代理</h3>
<ul>
<li><code>new Thread(Runnable).start();</code></li>
</ul>
<h3 id="lamda表达式"><a class="markdownIt-Anchor" href="#lamda表达式">#</a> Lamda 表达式</h3>
<ul>
<li>函数式编程</li>
<li>避免内部类定义过多</li>
<li><code>new Thread(()-&gt;{System.out.printIn();}).start();</code></li>
</ul>
<h3 id="线程的状态"><a class="markdownIt-Anchor" href="#线程的状态">#</a> 线程的状态</h3>
<ul>
<li><strong>新建态</strong></li>
<li><strong>就绪态</strong></li>
<li><strong>运行态</strong></li>
<li><strong>阻塞态</strong></li>
<li><strong>死亡态</strong></li>
</ul>
<h3 id="常用的方法"><a class="markdownIt-Anchor" href="#常用的方法">#</a> 常用的方法</h3>
<ul>
<li><code>sleep()</code></li>
<li><code>join()</code></li>
<li><code>yield()</code></li>
<li><code>isLive()</code></li>
<li><code>start()</code></li>
<li><code>setPriority()</code></li>
<li><code>interrupt()</code></li>
</ul>
<h3 id="线程同步"><a class="markdownIt-Anchor" href="#线程同步">#</a> 线程同步</h3>
<ul>
<li><strong>多个对象操作同一个资源，并发</strong></li>
<li><strong>对列 + 锁</strong></li>
<li><strong>Synchronized</strong>
<ul>
<li>同步方法</li>
<li>同步代码块（常用）</li>
<li>锁，第一个线程进来拿到锁，后面的就要排队了，直到这个线程释放锁，后面的线程才能拿到锁进去</li>
<li>死锁，两个人都抱着对方的锁
<ul>
<li>互斥</li>
<li>请求与保持</li>
<li>不剥夺条件</li>
<li>循环等待条件</li>
</ul>
</li>
</ul>
</li>
<li><strong>Lock</strong>
<ul>
<li><code>ReentrantLock</code>
<ul>
<li><code>lock</code></li>
<li><code>trylock</code></li>
<li><code>unlock</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="线程通信"><a class="markdownIt-Anchor" href="#线程通信">#</a> 线程通信</h3>
<ul>
<li>缓冲区：消息队列</li>
<li>标志位：红绿灯</li>
<li><code>wait()</code></li>
<li><code>notifyAll()</code></li>
</ul>
<h3 id="线程池"><a class="markdownIt-Anchor" href="#线程池">#</a> 线程池</h3>
<ul>
<li><strong>池化技术</strong></li>
<li><strong>池的大小</strong></li>
<li><strong>最大连接数</strong></li>
<li><strong>保持时间</strong></li>
</ul>
<h2 id="网络编程"><a class="markdownIt-Anchor" href="#网络编程">#</a> 网络编程</h2>
<ul>
<li><strong>IP</strong></li>
<li><strong>端口</strong></li>
<li><strong>Socket 编程</strong></li>
<li><strong>TCP</strong>
<ul>
<li>三次握手</li>
<li>四次挥手</li>
<li>面向连接</li>
</ul>
</li>
<li><strong>UDP</strong>
<ul>
<li>无连接</li>
<li>Packet</li>
</ul>
</li>
<li><strong>URL</strong></li>
<li><strong>初识 Tomcat</strong></li>
<li><strong>聊天通信</strong></li>
<li><strong>文件上传</strong></li>
</ul>
<h2 id="gui"><a class="markdownIt-Anchor" href="#gui">#</a> GUI</h2>
<h3 id="awt"><a class="markdownIt-Anchor" href="#awt">#</a> AWT</h3>
<ul>
<li><strong>Frame</strong></li>
<li><strong>监听事件</strong>
<ul>
<li>鼠标</li>
<li>键盘</li>
<li>窗口</li>
<li>动作事件</li>
</ul>
</li>
</ul>
<h3 id="swing"><a class="markdownIt-Anchor" href="#swing">#</a> Swing</h3>
<ul>
<li><strong>文本框</strong></li>
<li><strong>标签</strong></li>
<li><strong>按钮</strong></li>
<li><strong>文本域</strong></li>
<li><strong>面板</strong></li>
<li><strong>布局方式</strong></li>
<li><strong>关闭窗口</strong></li>
<li><strong>列表</strong></li>
</ul>
<h2 id="注解和反射"><a class="markdownIt-Anchor" href="#注解和反射">#</a> 注解和反射</h2>
<h3 id="注解"><a class="markdownIt-Anchor" href="#注解">#</a> 注解</h3>
<ul>
<li><strong>元注解</strong></li>
<li><strong>内置注解</strong></li>
<li><strong>自定义注解</strong></li>
<li><strong>反射读取注解</strong></li>
</ul>
<h3 id="反射"><a class="markdownIt-Anchor" href="#反射">#</a> 反射</h3>
<ul>
<li><strong>Class</strong>
<ul>
<li><code>newInstance()</code></li>
</ul>
</li>
<li><strong>类加载机制</strong></li>
<li><strong>Method</strong>
<ul>
<li><code>invoke(person1,&quot;kevin&quot;);</code></li>
<li>存在重载，需要些参数的类型</li>
</ul>
</li>
<li><strong>Field</strong>
<ul>
<li><code>set(person2,&quot;marvin&quot;);</code></li>
</ul>
</li>
<li><strong>Construct</strong>
<ul>
<li><code>newInstance()</code></li>
<li>获取的时候需要传递参数的 class 类型</li>
</ul>
</li>
<li><strong>破坏私有关键字</strong>
<ul>
<li><code>setAccessible(true);</code></li>
</ul>
</li>
<li><strong>性能分析</strong>
<ul>
<li>正常 &gt; 检测关闭的反射 &gt; 默认的反射</li>
</ul>
</li>
<li>反射获得注解、泛型</li>
</ul>

      <div class="tags">
          <a href="/my-blog/tags/java/" rel="tag"><i class="ic i-tag"></i> Java</a>
      </div>
  </div>

   <footer>

    <div class="meta">
</div>

      
<div class="reward">
  <button><i class="ic i-heartbeat"></i> 赞赏</button>
  <p>请我喝[茶]~(￣▽￣)~*</p>
  <div id="qr">
      
      <div>
        <img data-src="/my-blog/images/wechatpay.png" alt="Peter Pan 微信支付">
        <p>微信支付</p>
      </div>
      
      <div>
        <img data-src="/my-blog/images/alipay.png" alt="Peter Pan 支付宝">
        <p>支付宝</p>
      </div>
  </div>
</div>

      

<div id="copyright">
<ul>
  <li class="author">
    <strong>本文作者： </strong>Peter Pan <i class="ic i-at"><em>@</em></i>理 想 净 土
  </li>
  <li class="link">
    <strong>本文链接：</strong>
    <a href="https://github.com/Peter-Pan001/my-blog/Java/JavaSE%E5%B0%8F%E7%BB%93" title="JavaSE小结">https://github.com/Peter-Pan001/my-blog/Java/JavaSE小结</a>
  </li>
  <li class="license">
    <strong>版权声明： </strong>本站所有文章除特别声明外，均采用 <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</span> 许可协议。转载请注明出处！
  </li>
</ul>
</div>

  </footer>

</article>

  </div>
  

<div class="post-nav">
    <div class="item left">
      

  <a href="/my-blog/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93" itemprop="url" rel="prev" data-background-image="https:&#x2F;&#x2F;s4.ax1x.com&#x2F;2022&#x2F;01&#x2F;09&#x2F;7Fya5t.jpg" title="多线程笔记总结">
  <span class="type">上一篇</span>
  <span class="category"><i class="ic i-flag"></i> Java</span>
  <h3>多线程笔记总结</h3>
  </a>

    </div>
    <div class="item right">
      

  <a href="/my-blog/%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86DNS%E6%9C%8D%E5%8A%A1%E5%99%A8" itemprop="url" rel="next" data-background-image="https:&#x2F;&#x2F;s3.ax1x.com&#x2F;2021&#x2F;01&#x2F;09&#x2F;sMnAIK.jpg" title="配置与管理DNS服务器">
  <span class="type">下一篇</span>
  <span class="category"><i class="ic i-flag"></i> </span>
  <h3>配置与管理DNS服务器</h3>
  </a>

    </div>
</div>

  
  <div class="wrap" id="comments"></div>


        </div>
        <div id="sidebar">
          

<div class="inner">

  <div class="panels">
    <div class="inner">
      <div class="contents panel pjax" data-title="文章目录">
          <ol class="toc"><li class="toc-item toc-level-2"><a class="toc-link" href="#语言背景"><span class="toc-number">1.</span> <span class="toc-text"> 语言背景</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#基础语法"><span class="toc-number">2.</span> <span class="toc-text"> 基础语法</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#注释"><span class="toc-number">2.1.</span> <span class="toc-text"> 注释</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#标识符"><span class="toc-number">2.2.</span> <span class="toc-text"> 标识符</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#数据类型"><span class="toc-number">2.3.</span> <span class="toc-text"> 数据类型</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#变量与常量"><span class="toc-number">2.4.</span> <span class="toc-text"> 变量与常量</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#运算符"><span class="toc-number">2.5.</span> <span class="toc-text"> 运算符</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#包机制"><span class="toc-number">2.6.</span> <span class="toc-text"> 包机制</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#javadoc"><span class="toc-number">2.7.</span> <span class="toc-text"> JavaDoc</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#流程控制"><span class="toc-number">3.</span> <span class="toc-text"> 流程控制</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#方法"><span class="toc-number">4.</span> <span class="toc-text"> 方法</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#数组"><span class="toc-number">5.</span> <span class="toc-text"> 数组</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#面向对象"><span class="toc-number">6.</span> <span class="toc-text"> 面向对象</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#异常"><span class="toc-number">7.</span> <span class="toc-text"> 异常</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#常用类"><span class="toc-number">8.</span> <span class="toc-text"> 常用类</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#集合框架"><span class="toc-number">9.</span> <span class="toc-text"> 集合框架</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#collection"><span class="toc-number">9.1.</span> <span class="toc-text"> Collection</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#map"><span class="toc-number">9.2.</span> <span class="toc-text"> Map</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#collections工具类"><span class="toc-number">9.3.</span> <span class="toc-text"> Collections 工具类</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#泛型"><span class="toc-number">9.4.</span> <span class="toc-text"> 泛型</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#io流"><span class="toc-number">10.</span> <span class="toc-text"> I&#x2F;O 流</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#字节流"><span class="toc-number">10.1.</span> <span class="toc-text"> 字节流</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#字符流"><span class="toc-number">10.2.</span> <span class="toc-text"> 字符流</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#节点流"><span class="toc-number">10.3.</span> <span class="toc-text"> 节点流</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#处理流"><span class="toc-number">10.4.</span> <span class="toc-text"> 处理流</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#多线程"><span class="toc-number">11.</span> <span class="toc-text"> 多线程</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#进程和线程"><span class="toc-number">11.1.</span> <span class="toc-text"> 进程和线程</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#线程创建的方式"><span class="toc-number">11.2.</span> <span class="toc-text"> 线程创建的方式</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#静态代理"><span class="toc-number">11.3.</span> <span class="toc-text"> 静态代理</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#lamda表达式"><span class="toc-number">11.4.</span> <span class="toc-text"> Lamda 表达式</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#线程的状态"><span class="toc-number">11.5.</span> <span class="toc-text"> 线程的状态</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#常用的方法"><span class="toc-number">11.6.</span> <span class="toc-text"> 常用的方法</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#线程同步"><span class="toc-number">11.7.</span> <span class="toc-text"> 线程同步</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#线程通信"><span class="toc-number">11.8.</span> <span class="toc-text"> 线程通信</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#线程池"><span class="toc-number">11.9.</span> <span class="toc-text"> 线程池</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#网络编程"><span class="toc-number">12.</span> <span class="toc-text"> 网络编程</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#gui"><span class="toc-number">13.</span> <span class="toc-text"> GUI</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#awt"><span class="toc-number">13.1.</span> <span class="toc-text"> AWT</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#swing"><span class="toc-number">13.2.</span> <span class="toc-text"> Swing</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#注解和反射"><span class="toc-number">14.</span> <span class="toc-text"> 注解和反射</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#注解"><span class="toc-number">14.1.</span> <span class="toc-text"> 注解</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#反射"><span class="toc-number">14.2.</span> <span class="toc-text"> 反射</span></a></li></ol></li></ol>
      </div>
      <div class="related panel pjax" data-title="系列文章">
        <ul>
          <li><a href="/my-blog/Java/Java%E5%A4%9A%E6%80%81" rel="bookmark" title="Java多态">Java多态</a></li><li><a href="/my-blog/Java/Java%E5%B0%81%E8%A3%85" rel="bookmark" title="Java封装">Java封装</a></li><li><a href="/my-blog/Java/Java%E6%95%B0%E7%BB%84" rel="bookmark" title="Java数组">Java数组</a></li><li><a href="/my-blog/Java/Java%E7%BB%A7%E6%89%BF" rel="bookmark" title="Java继承">Java继承</a></li><li><a href="/my-blog/Java/Java%E6%96%B9%E6%B3%95" rel="bookmark" title="Java方法">Java方法</a></li><li><a href="/my-blog/Java/Java%E7%9A%84Stream%E6%B5%81" rel="bookmark" title="Java的Stream流">Java的Stream流</a></li><li><a href="/my-blog/Java/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B" rel="bookmark" title="Java网络编程">Java网络编程</a></li><li><a href="/my-blog/Java/Java%E7%9A%84%E4%B8%80%E4%BA%9B%E7%B1%BB" rel="bookmark" title="Java的一些类">Java的一些类</a></li><li><a href="/my-blog/Java/Java%E8%AF%AD%E5%8F%A5" rel="bookmark" title="Java语句">Java语句</a></li><li><a href="/my-blog/Java/%E7%B1%BB%E4%B8%8E%E5%AF%B9%E8%B1%A1" rel="bookmark" title="类与对象">类与对象</a></li><li><a href="/my-blog/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93" rel="bookmark" title="多线程笔记总结">多线程笔记总结</a></li><li class="active"><a href="/my-blog/Java/JavaSE%E5%B0%8F%E7%BB%93" rel="bookmark" title="JavaSE小结">JavaSE小结</a></li><li><a href="/my-blog/Java/Java%E5%9F%BA%E7%A1%80%E6%B7%B7%E5%90%88" rel="bookmark" title="Java基础混合">Java基础混合</a></li><li><a href="/my-blog/Java/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8BOV" rel="bookmark" title="Java网络编程OV">Java网络编程OV</a></li>
        </ul>
      </div>
      <div class="overview panel" data-title="站点概览">
        <div class="author" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <img class="image" itemprop="image" alt="Peter Pan"
      data-src="/my-blog/images/avatar.jpg">
  <p class="name" itemprop="name">Peter Pan</p>
  <div class="description" itemprop="description">不必匆忙，不必火花四溅，不必成为别人，只需成为自己</div>
</div>

<nav class="state">
    <div class="item posts">
      <a href="/my-blog/archives/">
        <span class="count">73</span>
        <span class="name">文章</span>
      </a>
    </div>
    <div class="item categories">
      <a href="/my-blog/categories/">
        <span class="count">10</span>
        <span class="name">分类</span>
      </a>
    </div>
    <div class="item tags">
      <a href="/my-blog/tags/">
        <span class="count">14</span>
        <span class="name">标签</span>
      </a>
    </div>
</nav>

<div class="social">
      <a href="https://github.com/Peter-Pan001/Basic" title="https:&#x2F;&#x2F;github.com&#x2F;Peter-Pan001&#x2F;Basic" class="item github"><i class="ic i-github"></i></a>
      <span class="exturl item zhihu" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3Blb3BsZS9ndWFuZy1tYW5nLWxpZ2h0bmluZw==" title="https:&#x2F;&#x2F;www.zhihu.com&#x2F;people&#x2F;guang-mang-lightning"><i class="ic i-zhihu"></i></span>
      <span class="exturl item music" data-url="aHR0cHM6Ly9tdXNpYy4xNjMuY29tLyMvdXNlci9ob21lP2lkPTE5MjY4NTE4NDA=" title="https:&#x2F;&#x2F;music.163.com&#x2F;#&#x2F;user&#x2F;home?id&#x3D;1926851840"><i class="ic i-cloud-music"></i></span>
      <span class="exturl item about" data-url="aHR0cHM6Ly9hYm91dC5tZS9QZXRlclBhbjA4MjQ=" title="https:&#x2F;&#x2F;about.me&#x2F;PeterPan0824"><i class="ic i-address-card"></i></span>
</div>

<ul class="menu">
  
    
  <li class="item">
    <a href="/my-blog/" rel="section"><i class="ic i-home"></i>首页</a>
  </li>

    
  <li class="item">
    <a href="/my-blog/about/" rel="section"><i class="ic i-user"></i>关于</a>
  </li>

        
  <li class="item dropdown">
    <a href="javascript:void(0);"><i class="ic i-feather"></i>文章</a>
    <ul class="submenu">

        
  <li class="item">
    <a href="/my-blog/archives/" rel="section"><i class="ic i-list-alt"></i>归档</a>
  </li>

        
  <li class="item">
    <a href="/my-blog/categories/" rel="section"><i class="ic i-th"></i>分类</a>
  </li>

        
  <li class="item">
    <a href="/my-blog/tags/" rel="section"><i class="ic i-tags"></i>标签</a>
  </li>

  </ul>
    
  <li class="item">
    <a href="/my-blog/friends/" rel="section"><i class="ic i-heart"></i>friends</a>
  </li>

    
  <li class="item">
    <a href="/my-blog/links/" rel="section"><i class="ic i-magic"></i>links</a>
  </li>


</ul>

      </div>
    </div>
  </div>

  <ul id="quick">
    <li class="prev pjax">
        <a href="/my-blog/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93" rel="prev" title="上一篇"><i class="ic i-chevron-left"></i></a>
    </li>
    <li class="up"><i class="ic i-arrow-up"></i></li>
    <li class="down"><i class="ic i-arrow-down"></i></li>
    <li class="next pjax">
        <a href="/my-blog/%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86DNS%E6%9C%8D%E5%8A%A1%E5%99%A8" rel="next" title="下一篇"><i class="ic i-chevron-right"></i></a>
    </li>
    <li class="percent"></li>
  </ul>
</div>


        </div>
        <div class="dimmer"></div>
      </div>
    </main>
    <footer id="footer">
      <div class="inner">
        <div class="widgets">
          
<div class="rpost pjax">
  <h2>随机文章</h2>
  <ul>
      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/java/" title="分类于 Java">Java</a>
</div>

    <span><a href="/my-blog/Java/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%AC%94%E8%AE%B0%E6%80%BB%E7%BB%93" title="多线程笔记总结">多线程笔记总结</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/java/" title="分类于 Java">Java</a>
</div>

    <span><a href="/my-blog/Java/Java%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8BOV" title="Java网络编程OV">Java网络编程OV</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/java/" title="分类于 Java">Java</a>
</div>

    <span><a href="/my-blog/Java/JavaSE%E5%B0%8F%E7%BB%93" title="JavaSE小结">JavaSE小结</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/" title="分类于 软考网络工程师">软考网络工程师</a>
</div>

    <span><a href="/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E5%B8%B8%E7%94%A8%E5%85%AC%E5%BC%8F" title="常用公式">常用公式</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/" title="分类于 软考网络工程师">软考网络工程师</a>
</div>

    <span><a href="/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E4%B8%8E%E4%BA%92%E8%81%94%E7%BD%9101" title="网络互联与互联网01">网络互联与互联网01</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/" title="分类于 软考网络工程师">软考网络工程师</a>
</div>

    <span><a href="/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/Linux%E9%85%8D%E7%BD%AE" title="Linux配置">Linux配置</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/git/" title="分类于 git">git</a>
</div>

    <span><a href="/my-blog/git/git%E4%B8%8Egithub%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BA%86%E8%A7%A3" title="git与github的基本了解">git与github的基本了解</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/" title="分类于 软考网络工程师">软考网络工程师</a>
</div>

    <span><a href="/my-blog/%E8%BD%AF%E8%80%83%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B%E5%B8%88/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%B8%8E%E5%BA%94%E7%94%A802" title="网络安全与应用02">网络安全与应用02</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/" title="分类于 数据分析">数据分析</a>
</div>

    <span><a href="/my-blog/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/%E5%88%9D%E8%AF%86informatica" title="初识informatica">初识informatica</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/my-blog/categories/java/" title="分类于 Java">Java</a>
</div>

    <span><a href="/my-blog/Java/Java%E5%9F%BA%E7%A1%80%E6%B7%B7%E5%90%88" title="Java基础混合">Java基础混合</a></span>
  </li>

  </ul>
</div>
<div>
  <h2>最新评论</h2>
  <ul class="leancloud-recent-comment"></ul>
</div>

        </div>
        <div class="status">
  <div class="copyright">
    
    &copy; 2020 – 
    <span itemprop="copyrightYear">2022</span>
    <span class="with-love">
      <i class="ic i-sakura rotate"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">Peter Pan @ Peter Pan</span>
  </div>
  <div class="powered-by">
    基于 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo</span> & Theme.<a href="https://github.com/amehime/hexo-theme-shoka">Shoka</a>
  </div>
</div>

      </div>
    </footer>
  </div>
<script data-config type="text/javascript">
  var LOCAL = {
    path: '/Java/JavaSE小结',
    favicon: {
      show: "（●´3｀●）やれやれだぜ",
      hide: "(´Д｀)大変だ！"
    },
    search : {
      placeholder: "文章搜索",
      empty: "关于 「 ${query} 」，什么也没搜到",
      stats: "${time} ms 内找到 ${hits} 条结果"
    },
    valine: true,fancybox: true,copyright: '复制成功，转载请遵守 <i class="ic i-creative-commons"></i>BY-NC-SA 协议。',
    ignores : [
      function(uri) {
        return uri.includes('#');
      },
      function(uri) {
        return new RegExp(LOCAL.path+"$").test(uri);
      }
    ]
  };
</script>

<script src="https://cdn.polyfill.io/v2/polyfill.js"></script>

<script src="//cdn.jsdelivr.net/combine/npm/pace-js@1.0.2/pace.min.js,npm/pjax@0.2.8/pjax.min.js,npm/whatwg-fetch@3.4.0/dist/fetch.umd.min.js,npm/animejs@3.2.0/lib/anime.min.js,npm/algoliasearch@4/dist/algoliasearch-lite.umd.js,npm/instantsearch.js@4/dist/instantsearch.production.min.js,npm/lozad@1/dist/lozad.min.js,npm/quicklink@2/dist/quicklink.umd.js"></script>

<script src="/my-blog/js/app.js?v=0.2.4"></script>




</body>
</html>
